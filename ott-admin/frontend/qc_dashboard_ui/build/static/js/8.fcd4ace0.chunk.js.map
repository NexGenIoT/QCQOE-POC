{"version":3,"sources":["Components/MitigationSummaryDashboard/Histogram.js","Components/MitigationSummaryDashboard/MitigationDashboard.js","../node_modules/@mui/icons-material/ArrowForwardIos.js","../node_modules/@mui/icons-material/ArrowBack.js","../node_modules/@mui/material/Slide/Slide.js","../node_modules/@mui/material/Drawer/drawerClasses.js","../node_modules/@mui/material/Drawer/Drawer.js","Components/MitigationSummaryDashboard/Table.js","Components/MitigationSummaryDashboard/Analytics.js","Components/MitigationSummaryDashboard/mitigationDialogue.js","Components/MitigationSummaryDashboard/AnnualMitigation.js","Components/BasicTabMitigation.js","Routes/qoe/mitigation/index.js"],"names":["Histogram","props","dataDisplay","labels","timeGraphDataPoints","datasets","obj","finalDatasetArray","devicePlatform","length","Array","isArray","metricGraphPoints","newObject","push","i","androidDataPoints","chromeDataPoints","iosDataPoints","AndroidSmartTvDataPoints","firestickDataPoints","Object","keys","dataSetsToDraw","container","specing","data","width","height","options","scales","x","ticks","autoSkip","MitigationDashboard","dispatch","useDispatch","useSelector","state","qoeReducer","useState","mitigationList","setMitigationList","Math","floor","Date","getTime","fromDate","setFromDate","showSearchTextField","setShowSearchTextField","autoFocus","setAutoFocus","btn","setBtn","filterbtn","setFilterBtn","searchText","setSearchText","mobileMenu","setFilterMenu","last_time","setlast_time","selectedField","setSelectedField","impectSessionDd","setImpectSessionDd","impectSession","setImpectSession","previousUEIDd","setPreviousUEIDd","previousUEI","setPreviousUEI","currentUEIDd","setCurrentUEIDd","currentUEI","setCurrentUEI","dateValue","setDateValue","apply","setApply","openModal","setModalOpen","startDate","setStartDate","endDate","setEndDate","toDates","setToDates","key","range","setRange","sourceDd","setSourceDd","isRefresh","setRefresh","useEffect","filtered","filterByApply","searchMetricName","e","target","value","backupYesterdayData","finalList","filter","a","GroupMitigationID","toLowerCase","includes","Source","closeTextField","getImage","map","list","fullDate","Time_Stamp","moment","format","ImpactedSessions","AppliedOn","PreviousUEI","CurrentUEI","exportType","exportFromJSON","types","csv","fileName","lastTimeHandler","filteredData","mlist","eval","parseFloat","clickOnApply","clearAll","submit","durationValue","toString","stylee","color","background","fontSize","fontWeigth","className","style","paddingTop","marginBottom","display","flexDirection","justifyContent","alignItems","variant","paddingLeft","position","onChange","type","id","placeholder","fullWidth","onClick","top","right","cursor","setAllMitigationData","contentEditable","sx","mx","marginLeft","toDate","open","onClose","anchor","padding","m","marginTop","spacing","item","xs","md","labelId","label","size","border","borderRadius","marginRight","fontWeight","isOpen","toggle","centered","selection","ranges","editableDateInputs","moveRangeOnFirstSelection","maxDate","_interopRequireDefault","require","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","_excluded","setTranslateValue","direction","node","containerProp","containerPropProp","transform","resolvedContainer","rect","getBoundingClientRect","containerRect","containerWindow","ownerWindow","fakeTransform","computedStyle","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","left","innerWidth","bottom","innerHeight","getTranslateValue","webkitTransform","Slide","React","ref","theme","useTheme","defaultEasing","enter","transitions","easing","easeOut","exit","sharp","defaultTimeout","duration","enteringScreen","leavingScreen","addEndListener","appear","children","easingProp","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","timeout","TransitionComponent","Transition","other","_objectWithoutPropertiesLoose","childrenRef","handleRefIntermediary","useForkRef","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","current","handleEnter","reflow","handleEntering","transitionProps","getTransitionProps","mode","webkitTransition","create","_extends","transition","handleEntered","handleExiting","handleExit","handleExited","updatePosition","handleResize","debounce","addEventListener","clear","removeEventListener","_jsx","nodeRef","next","childProps","visibility","getDrawerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded2","overridesResolver","styles","ownerState","root","docked","modal","DrawerRoot","styled","Modal","name","zIndex","drawer","DrawerDockedRoot","shouldForwardProp","rootShouldForwardProp","skipVariantsResolver","flex","DrawerPaper","Paper","paper","capitalize","overflowY","WebkitOverflowScrolling","outline","maxHeight","borderRight","palette","divider","borderBottom","borderLeft","borderTop","oppositeDirection","Drawer","inProps","useThemeProps","defaultTransitionDuration","anchorProp","BackdropProps","elevation","hideBackdrop","ModalProps","BackdropPropsProp","PaperProps","SlideProps","transitionDuration","mounted","anchorInvariant","indexOf","isHorizontal","getAnchor","classes","slots","composeClasses","useUtilityClasses","square","clsx","slidingDrawer","MitigationTable","isDrawerOpen","setIsDrawerOpen","mitigationId","setMititgationId","indexes","setIndexes","setId","loader","setLoader","loader3","setLoader3","filterText","setFilterText","mitigationSecondList","secondMitigationList","setsecondMitigationList","isLoadingData","setisLoadingData","page","setPage","rowsPerPage","setRowsPerPage","isAIDrawerOpen","setAIIsDrawerOpen","selectStyles","makeStyles","select","borderColor","icon","fill","control","base","MenuItem","getAllMitigation","final","closeDrawer","sort","b","setTimeout","clickOnSeconDrawer","index","device_id","condition","setThirdMitigationData","getThirdMitigation","console","log","mitigationThirdList","TableContainer","Table","minWidth","TableHead","backgroundColor","TableRow","TableCell","RctPageLoader","slice","source","getMitigationAI","setSecondMitigationData","clearAllMitigationData","getSecondMitigation","openFirstDrawer","TablePagination","verticalAlign","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","Typography","paddingRight","Button","endIcon","Tooltip","title","arrow","FormControl","InputLabel","Select","mitigation_status","second","intDate","last_report_time","previous_uei","Number","toFixed","current_uei","paddingBottom","colSpan","Collapse","unmountOnExit","Box","margin","third","current_session_id","last_session_id","local_mitigation_id","group_mitigation_id","setMitigationAIData","aiMitigation","Planname","Recipient_List","res","Body","NumOfRecords","Created_At","Analytics","realdata","metric_type","metricType","metric_type_fullname","metricTypefulname","favorite","favoriteMetric","cdnVal","filters","cdn","contentTypeVal","content_type","contentPartnetVal","content_partner","locationVal","location","unit","setUnit","setCdn","contentType","setContentType","contentPartner","setContentPartner","setLocation","metric","setMetric","metricHeader","setMetricHeader","metricsList","setMetricList","aggregationInterval","setAggregationInterval","setDevicePlatform","setToDate","updatedGraphData","setUpdatedGraphData","allGraphPoints","setAllGraphPoints","androidGraphPoints","setAndroidGraphPoints","iosGraphPoints","setIosGraphPoints","chromeGraphPoints","setChromeGraphPoints","tvGraphPoints","setTvGraphPoints","firestickGraphPoints","setFirestickGraphPoints","setMetricGraphPoints","setAndroidDataPoints","setAndroidSmartTvDataPoints","AndroidSmartTvGraphPoints","setAndroidSmartTvGraphPoints","setIosDataPoints","setChromeDataPoints","tvDataPoints","setTvDataPoints","setFirestickDataPoints","selectVal","setSelectVal","xAxis","setXAxis","setisMetricsListLoading","refresh","sourceD","setSourceData","device_platform","getReportValue","reportData","totalLength","getLocationWithoutState","val","temparray","forEach","element","updatePlatformData","layout","itemsToRemove","dpl","j","splice","calculateDateRange","timestamp","sd","ts","endOf","_d","mitigationAnalysis","fetchTheRequest","getMitigationAnalyticsPage","fromDateInfo","datas","time","monthNames","all","rebuffering_percentage","timestampArr","TimeStamp","getMonth","getDate","getHours","getMinutes","getSeconds","androidData","iosData","chromeData","tvData","firestickData","AndroidSmartTvData","message","find","android","ios","web","tv","firestick","androidsmarttv","getUniqueFilters","getFavoriteMetrics","setMetricType","setMetricTypeFullName","interval","setInterval","clearInterval","handle","useFullScreenHandle","fullCombinationGraphPoints","lengths","max","gettitle","LeftMenu","updateMetricHeader","leftMenuMetrics","updateMetric","metricName","bgcolor","textTransform","Stack","float","IconButton","document","querySelector","domtoimage","toPng","quality","then","dataUrl","createElement","href","download","createFileName","click","catch","error","placement","aa","f","heading","replace","Platform","Timestamp","TextField","ModalHeader","ModalBody","ModalFooter","FilterLayout","getCdn","getContentPartner","getContentType","getLocation","getSourceData","savePlatformData","sourceData","AppliedFilters","attemptsData","videoStartFailuresData","exitBeforeVideoStartsData","succesfullPlaysData","removeDevicePlatform","platform","localStorage","removeItem","removeContentPartner","removeContentType","removeLocation","handleReload","removeSource","androidSmartTvDataPoints","androidDataReport","reduce","partialSum","iosDataReport","firestickDataReport","webDataReport","androidSmartTvReport","totalDataReport","MitigationDialogue","Dialog","DialogTitle","createFilterOptions","AnnualMitigation","inputtag","tags","setTags","setPlatform","setMitigation_status","bufferLength","setBufferLength","rebufferDuration","setRebufferDuration","bitrate","setBitrate","setBottom","loading","setLoading","ids","setIds","configure","setConfigure","selectAllCheckbox","setSelectAllCheckbox","clickOnValidate","setClickOnValidate","uei_conditionDd","setuei_conditionDd","uei_condition","setuei_condition","rebufferDurationFilterDd","setRebufferDurationFilterDd","rebufferDurationFilter","setRebufferDurationFilter","startBufferLengthFilterDd","setstartBufferLengthFilterDd","startBufferLengthFilter","setstartBufferLengthFilter","startBitrateFilterDd","setstartBitrateFilterDd","startBitrateFilter","setstartBitrateFilter","stallCountFilterDd","setstallCountFilterDd","stallCountFilter","setstallCountFilter","exceptThisSymbols","delimiters","cityarray","cities","hasOwnProperty","NaN","nameed","selectPlatform","info","p","concat","clickOnConfirm","applyManualMitigation","setItem","manualStylee","preventMinus","code","preventDefault","preventPasteNegative","clipboardData","window","getData","Grid","isValidPermission","NotificationManager","adminMessage","Close","noValidate","autoComplete","ListItem","ReactTags","classNames","tagInput","tagInputField","selected","tag","remove","suggestions","activeSuggestion","editTagInput","editTagInputField","handleDelete","handleAddition","handleTagClick","handleInputChange","autocomplete","allowDragDrop","inputFieldPosition","List","dense","Autocomplete","newValue","results","inputValue","filterOptions","params","isExisting","some","option","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","freeSolo","renderInput","totalTag","t","text","uei_conditionss","rebuffering_duration","startup_buffer_length","start_bitrate","stall_count","getValidate","trim","mitigation","Checkbox","currentIndex","newChecked","onChangeCheckbox","edge","checked","disableRipple","selectAll","boxShadow","mt","getItem","assetid","min","test","onPaste","onKeyPress","onKeyDown","keyCode","TabPanel","role","hidden","a11yProps","SimpleTabsMitigation","setTabValueMitigation","getCities","Tabs","tabValueMitigation","Tab","disabled","textAlign","Mitigation"],"mappings":"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","file":"static/js/8.fcd4ace0.chunk.js","sourcesContent":["import { Grid } from '@mui/material';\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst Histogram = (props) => {\r\n    let datasetSampleObj = {};\r\n    const dataSetsToDraw = (obj) => {\r\n        let finalDatasetArray = [];\r\n        if (props.devicePlatform) {\r\n            if (props.devicePlatform.length === 0 && Array.isArray(props.metricGraphPoints)) {\r\n                const newObject = { ...obj };\r\n                newObject[\"barThickness\"] = 15;\r\n                newObject[\"label\"] = \"All\";\r\n                newObject[\"backgroundColor\"] = \"66f5ae\";\r\n                newObject[\"borderColor\"] = \"66f5ae\";\r\n                newObject[\"borderWidth\"] = 1;\r\n                newObject[\"stack\"] = 1;\r\n                newObject[\"hoverBackgroundColor\"] = \"66f5ae\";\r\n                newObject[\"hoverBorderColor\"] = \"66f5ae\";\r\n                newObject[\"data\"] = props.metricGraphPoints ? props.metricGraphPoints : []\r\n                finalDatasetArray.push(newObject);\r\n            }\r\n            else {\r\n                for (let i = 0; i < props.devicePlatform.length; i++) {\r\n                    const newObject = { ...obj };\r\n                    if (props.devicePlatform[i] === \"Android\") {\r\n                        newObject[\"barThickness\"] = 15;\r\n                        newObject[\"label\"] = \"Android\";\r\n                        newObject[\"backgroundColor\"] = \"#ed497b\";\r\n                        newObject[\"borderColor\"] = \"#ed497b\";\r\n                        newObject[\"borderWidth\"] = 1;\r\n                        newObject[\"stack\"] = 1;\r\n                        newObject[\"hoverBackgroundColor\"] = \"#ed497b\";\r\n                        newObject[\"hoverBorderColor\"] = \"#ed497b\";\r\n                        newObject[\"data\"] = props.androidDataPoints ? props.androidDataPoints : []\r\n                    }\r\n                    else if (props.devicePlatform[i] === \"Web\") {\r\n                        newObject[\"barThickness\"] = 15;\r\n                        newObject[\"label\"] = \"Web\";\r\n                        newObject[\"backgroundColor\"] = \"#56bcf8\";\r\n                        newObject[\"borderColor\"] = \"#56bcf8\";\r\n                        newObject[\"borderWidth\"] = 1;\r\n                        newObject[\"stack\"] = 1;\r\n                        newObject[\"hoverBackgroundColor\"] = \"#56bcf8\";\r\n                        newObject[\"hoverBorderColor\"] = \"#56bcf8\";\r\n                        newObject[\"data\"] = props.chromeDataPoints ? props.chromeDataPoints : []\r\n                    }\r\n                    else if (props.devicePlatform[i] === \"iOS\") {\r\n                        newObject[\"barThickness\"] = 15;\r\n                        newObject[\"label\"] = \"iOS\";\r\n                        newObject[\"backgroundColor\"] = \"#70f5ae\";\r\n                        newObject[\"borderColor\"] = \"#70f5ae\";\r\n                        newObject[\"borderWidth\"] = 1;\r\n                        newObject[\"stack\"] = 1;\r\n                        newObject[\"hoverBackgroundColor\"] = \"#70f5ae\";\r\n                        newObject[\"hoverBorderColor\"] = \"#70f5ae\";\r\n                        newObject[\"data\"] = props.iosDataPoints ? props.iosDataPoints : []\r\n                    }\r\n                    else if (props.devicePlatform[i] === \"AndroidSmartTv\") {\r\n                        newObject[\"barThickness\"] = 15;\r\n                        newObject[\"label\"] = \"AndroidSmartTv\";\r\n                        newObject[\"backgroundColor\"] = \"yellow\";\r\n                        newObject[\"borderColor\"] = \"yellow\";\r\n                        newObject[\"borderWidth\"] = 1;\r\n                        newObject[\"stack\"] = 1;\r\n                        newObject[\"hoverBackgroundColor\"] = \"yellow\";\r\n                        newObject[\"hoverBorderColor\"] = \"yellow\";\r\n                        newObject[\"data\"] = props.AndroidSmartTvDataPoints ? props.AndroidSmartTvDataPoints : []\r\n                    }\r\n                    else if (props.devicePlatform[i] === \"Firestick\") {\r\n                        newObject[\"barThickness\"] = 15;\r\n                        newObject[\"label\"] = \"Firestick\";\r\n                        newObject[\"backgroundColor\"] = \"purple\";\r\n                        newObject[\"borderColor\"] = \"purple\";\r\n                        newObject[\"borderWidth\"] = 1;\r\n                        newObject[\"stack\"] = 1;\r\n                        newObject[\"hoverBackgroundColor\"] = \"purple\";\r\n                        newObject[\"hoverBorderColor\"] = \"purple\";\r\n                        newObject[\"data\"] = props.firestickDataPoints ? props.firestickDataPoints : []\r\n                    }\r\n\r\n\r\n                    Object.keys(newObject).length > 0 && finalDatasetArray.push(newObject);\r\n                }\r\n            }\r\n        }\r\n        return finalDatasetArray;\r\n    }\r\n    // var dateIST =[]\r\n    // if(props.timeGraphDataPoints){\r\n    //     props.timeGraphDataPoints.forEach(element => {\r\n    //      dateIST.push(new Date(element).toLocaleString(\"en-IN\", {timeZone: 'Asia/Kolkata'}));\r\n    //     });\r\n    //     //date shifting for IST timezone (+5 hours and 30 minutes)\r\n    // }\r\n   \r\n    const dataDisplay = {\r\n        labels: props.timeGraphDataPoints ? props.timeGraphDataPoints : [],// dateIST ? dateIST : [],\r\n        datasets: dataSetsToDraw(datasetSampleObj)\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container specing={1} >\r\n                <Bar\r\n                    data={dataDisplay}\r\n                    width={300}\r\n                    height={120}\r\n                    options={{\r\n                        scales: {\r\n                            x: {\r\n                                ticks: {\r\n                                    autoSkip: true,\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                // options={{\r\n                //     legend: {\r\n                //         display: false\r\n                //     },\r\n                //     layout: {\r\n                //         padding: {\r\n                //             top: 25\r\n                //         }\r\n                //     },\r\n                //     scales: {\r\n                //         xAxes: [{\r\n                //             gridLines: {\r\n                //                 color: \"rgba(0, 0, 0, 0)\",\r\n                //                 drawBorder: false,\r\n                //                 display: true,\r\n                //             },\r\n                //             ticks: {\r\n                //                 display: true\r\n                //             },\r\n                //         }],\r\n                //         yAxes: [{\r\n                //             barPercentage: 0.2,\r\n                //             gridLines: {\r\n                //                 color: \"rgba(0, 0, 0, 0)\",\r\n                //                 drawBorder: false,\r\n                //                 paddingTop: '10px'\r\n                //             }\r\n                //         }]\r\n                //     }\r\n                // }}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\nexport default Histogram;","import {\r\n  Box,\r\n  Drawer,\r\n  FormControl,\r\n  Grid,\r\n  IconButton,\r\n  ListItem,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MitigationTable from \"./Table\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport moment from \"moment\";\r\n//import { getAutoMitigationStatus } from \"Store/Actions\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport { List } from \"react-content-loader\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport { LocalizationProvider } from \"@mui/lab\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\nimport RctPageLoader from \"Components/RctPageLoader/RctPageLoader\";\r\nimport { createFileName } from \"use-react-screenshot\";\r\nimport { setAllMitigationData } from \"Store/Actions\";\r\n\r\nconst MitigationDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.qoeReducer);\r\n  const [mitigationList, setMitigationList] = useState([]);\r\n  const [fromDate, setFromDate] = useState(\r\n    Math.floor(new Date().getTime() / 1000.0) - 24 * 3600\r\n  );\r\n  const [showSearchTextField, setShowSearchTextField] = useState(false);\r\n  const [autoFocus, setAutoFocus] = useState(false);\r\n  const [btn, setBtn] = useState(\"24hr\");\r\n  const [filterbtn, setFilterBtn] = useState(\"24hr\");\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [mobileMenu, setFilterMenu] = useState(false);\r\n  const [last_time, setlast_time] = useState(\"\");\r\n  const [selectedField, setSelectedField] = useState(\"24hr\");\r\n\r\n  const [impectSessionDd, setImpectSessionDd] = useState(\"\");\r\n  const [impectSession, setImpectSession] = useState();\r\n  const [previousUEIDd, setPreviousUEIDd] = useState(\"\");\r\n  const [previousUEI, setPreviousUEI] = useState();\r\n  const [currentUEIDd, setCurrentUEIDd] = useState(\"\");\r\n  const [currentUEI, setCurrentUEI] = useState();\r\n  const [dateValue, setDateValue] = useState(null);\r\n  const [apply, setApply] = useState(false);\r\n  const [openModal, setModalOpen] = useState(false);\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [toDates, setToDates] = useState(\r\n    Math.floor(new Date().getTime() / 1000.0)\r\n  );\r\n  const [range, setRange] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  const [sourceDd, setSourceDd] = useState(\"\");\r\n  const [isRefresh, setRefresh] = useState(false);\r\n\r\n  //let toDate = Math.floor(new Date().getTime() / 1000.0);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getAutoMitigationStatus(dispatch));\r\n  // }, [dispatch]);\r\n  \r\n  useEffect(() => {\r\n    var filtered = filterByApply();\r\n    setMitigationList(filtered);\r\n    \r\n  }, [apply, data?.mitigationList,isRefresh]);\r\n\r\n  // useEffect(() => {\r\n  //        setMitigationList(data?.mitigationList)\r\n  // }, [data?.mitigationList])\r\n\r\n  const searchMetricName = (e) => {\r\n    setAutoFocus(true);\r\n    setSearchText(e.target.value);\r\n    const backupYesterdayData = data?.mitigationList;\r\n    if (e.target.value !== \"\") {\r\n      const finalList = backupYesterdayData.filter(\r\n        (a) =>\r\n          a.GroupMitigationID.toLowerCase().includes(\r\n            e.target.value.toLowerCase()\r\n          ) || a.Source.toLowerCase().includes(e.target.value.toLowerCase())\r\n      );\r\n      setMitigationList(finalList);\r\n    } else {\r\n      setMitigationList(data?.mitigationList);\r\n    }\r\n  };\r\n  const closeTextField = (e) => {\r\n    setAutoFocus(false);\r\n    setSearchText(\"\");\r\n    setShowSearchTextField(false);\r\n    setMitigationList(data?.mitigationList);\r\n  };\r\n  const getImage = () => {\r\n    let data = [];\r\n    mitigationList.map((list) => {\r\n      let fullDate = Math.floor(new Date(list?.Time_Stamp).getTime() * 1000.0);\r\n      return data.push({\r\n        \"Action ID\": list?.GroupMitigationID,\r\n        \"Date/Time\":\r\n          moment(fullDate).format(\"DD-MM-YYYY\") +\r\n          \" | \" +\r\n          moment(fullDate).format(\"hh:mm\"),\r\n        ImpactedSessions: list?.ImpactedSessions,\r\n        AppliedOn: list?.AppliedOn,\r\n        PreviousUEI: list?.PreviousUEI,\r\n        CurrentUEI: list?.CurrentUEI,\r\n        Source: list?.Source,\r\n      });\r\n    });\r\n    const fileName = \"mitigation\"; /*createFileName(\r\n      \"csv\",\r\n      `${metric}-${moment().format(\"DD/MM/YYYY\")}`\r\n    );*/\r\n    const exportType = exportFromJSON.types.csv;\r\n    exportFromJSON({ data, fileName, exportType });\r\n  };\r\n\r\n  const lastTimeHandler = (e) => {\r\n    setlast_time(e.target.value);\r\n  };\r\n\r\n  const filterByApply = () => {\r\n    // Avoid filter for null value\r\n    setFilterBtn(\"\");\r\n\r\n    if (!apply) {\r\n      setMitigationList(data?.mitigationList);\r\n      return data?.mitigationList;\r\n    }\r\n    const filteredData = data?.mitigationList.filter((mlist) => {\r\n      return (\r\n        (impectSessionDd !== \"\"\r\n          ? eval(\r\n              `${parseFloat(\r\n                mlist.ImpactedSessions\r\n              )} ${impectSessionDd} ${parseFloat(impectSession)}`\r\n            )\r\n          : true) &&\r\n        (previousUEIDd !== \"\"\r\n          ? eval(\r\n              `${parseFloat(mlist.PreviousUEI)} ${previousUEIDd} ${parseFloat(\r\n                previousUEI\r\n              )}`\r\n            )\r\n          : true) &&\r\n        (currentUEIDd !== \"\"\r\n          ? eval(\r\n              `${parseFloat(mlist.CurrentUEI)} ${currentUEIDd} ${parseFloat(\r\n                currentUEI\r\n              )}`\r\n            )\r\n          : true) &&\r\n        // (dateValue !== null? moment.unix(mlist.Time_Stamp).format(\"YYYYMMDD\") == moment(dateValue).format(\"YYYYMMDD\"): true) &&\r\n        (sourceDd !== \"\" ? mlist.Source == sourceDd : true)\r\n      );\r\n    });\r\n    return filteredData;\r\n  };\r\n\r\n  const clickOnApply = () => {\r\n    if (\r\n      (impectSession && impectSessionDd) ||\r\n      (previousUEI && previousUEIDd) ||\r\n      (currentUEI && currentUEIDd) ||\r\n      sourceDd\r\n    ) {\r\n      setFilterMenu(false);\r\n      setApply(true);\r\n      var filtered = filterByApply();\r\n      setMitigationList(filtered);\r\n    } else if (dateValue) {\r\n      setApply(true);\r\n      setFilterMenu(false);\r\n    } else {\r\n      setApply(false);\r\n    }\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setApply(false);\r\n    setlast_time(\"\");\r\n    setImpectSessionDd(\"\");\r\n    setImpectSession(\"\");\r\n    setPreviousUEIDd(\"\");\r\n    setPreviousUEI(\"\");\r\n    setCurrentUEIDd(\"\");\r\n    setCurrentUEI(\"\");\r\n    setDateValue(null);\r\n    setSourceDd(\"\");\r\n  };\r\n\r\n  const submit = () => {\r\n    setBtn(\"\");\r\n    setStartDate(range[0].startDate);\r\n    setEndDate(range[0].endDate);\r\n    setModalOpen(false);\r\n    // setToDates(Math.floor(range[0].endDate.getTime() / 1000.0));\r\n    setToDates(Math.floor(range[0].endDate.getTime() / 1000.0));\r\n    setFromDate(Math.floor(range[0].startDate.getTime() / 1000.0));\r\n\r\n    clearAll();\r\n    setMitigationList(data?.mitigationList);\r\n  };\r\n\r\n  const durationValue = (value) => {\r\n    switch (value.toString()) {\r\n      case \"24hr\":\r\n        return 24 * 3600;\r\n        break;\r\n      case \"3\":\r\n        return 90 * 24 * 3600;\r\n        break;\r\n      case \"monthly\":\r\n        return 30 * 24 * 3600;\r\n        break;\r\n      case \"weekly\":\r\n        return 7 * 24 * 3600;\r\n        break;\r\n      default:\r\n        return 24 * 3600;\r\n    }\r\n  };\r\n\r\n  const stylee = {\r\n    color: \"white\",\r\n    background: \"#1992fb\",\r\n    width: \"100px\",\r\n    height: \"28px\",\r\n    fontSize: \"1rem\",\r\n    fontWeigth: \"600\",\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className='issue-wraper'\r\n        style={{\r\n          background: \"white\",\r\n          height: \"62px\",\r\n          paddingTop: \"20px\",\r\n          marginBottom: \"0px\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div className='top-left-nav'>\r\n          <Typography\r\n            variant='h5'\r\n            style={{ fontSize: \"1.2rem\", paddingLeft: \"13px\" }}\r\n          >\r\n            Total Mitigation({mitigationList?.length})\r\n          </Typography>\r\n        </div>\r\n        {showSearchTextField && (\r\n          <div style={{ width: \"30%\", position: \"relative\" }}>\r\n            <TextField\r\n              autoFocus={autoFocus}\r\n              onChange={searchMetricName}\r\n              value={searchText}\r\n              type='text'\r\n              id='outlined-basic'\r\n              className='search-insight'\r\n              placeholder='Search...'\r\n              variant='outlined'\r\n              fullWidth\r\n            />\r\n            <i\r\n              onClick={closeTextField}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"40%\",\r\n                right: -20,\r\n                cursor: \"pointer\",\r\n              }}\r\n              className='zmdi zmdi-close'\r\n            ></i>\r\n          </div>\r\n        )}\r\n        <div className='status-report dropdownCont'>\r\n          <MatButton\r\n            onClick={() => {\r\n              setFromDate(\r\n                Math.floor(new Date().getTime() / 1000.0) - 24 * 3600\r\n              );\r\n              setBtn(\"24hr\");\r\n              setSelectedField(\"24hr\");\r\n              //clearAll();\r\n              setMitigationList(data?.mitigationList);\r\n              setFilterBtn(\"\");\r\n              setStartDate();\r\n              setEndDate();\r\n              setRange([\r\n                {\r\n                  startDate: new Date(),\r\n                  endDate: new Date(),\r\n                  key: \"selection\",\r\n                },\r\n              ]);\r\n            }}\r\n            className={btn === \"24hr\" ? \"Status-btn-active\" : \"Status-btn\"}\r\n          >\r\n            24Hr\r\n          </MatButton>\r\n          <MatButton\r\n            onClick={() => {\r\n              setFromDate(\r\n                Math.floor(new Date().getTime() / 1000.0) - 7 * 24 * 3600\r\n              );\r\n              setBtn(\"weekly\");\r\n              setSelectedField(\"weekly\");\r\n              setFilterBtn(\"\");\r\n              dispatch(setAllMitigationData([]))\r\n\r\n              //clearAll();\r\n              setMitigationList(data?.mitigationList);\r\n              setStartDate();\r\n              setEndDate();\r\n              setRange([\r\n                {\r\n                  startDate: new Date(),\r\n                  endDate: new Date(),\r\n                  key: \"selection\",\r\n                },\r\n              ]);\r\n            }}\r\n            className={btn === \"weekly\" ? \"Status-btn-active\" : \"Status-btn\"}\r\n          >\r\n            Weekly\r\n          </MatButton>\r\n          <MatButton\r\n            onClick={() => {\r\n              setFromDate(\r\n                Math.floor(new Date().getTime() / 1000.0) - 30 * 24 * 3600\r\n              );\r\n              setBtn(\"monthly\");\r\n              setSelectedField(\"monthly\");\r\n              setFilterBtn(\"\");\r\n\r\n             // clearAll();\r\n             dispatch(setAllMitigationData([]))\r\n              setMitigationList(data?.mitigationList);\r\n              setStartDate();\r\n              setEndDate();\r\n              setRange([\r\n                {\r\n                  startDate: new Date(),\r\n                  endDate: new Date(),\r\n                  key: \"selection\",\r\n                },\r\n              ]);\r\n            }}\r\n            className={btn === \"monthly\" ? \"Status-btn-active\" : \"Status-btn\"}\r\n          >\r\n            Monthly\r\n          </MatButton>\r\n          <MatButton\r\n            onClick={() => {\r\n              setBtn(\"3\");\r\n              setSelectedField(\"3\");\r\n              setFilterBtn(\"\");\r\n\r\n              setFromDate(\r\n                Math.floor(new Date().getTime() / 1000.0) - 90 * 24 * 3600\r\n              );\r\n             // clearAll();\r\n             dispatch(setAllMitigationData([]))\r\n              setMitigationList(data?.mitigationList);\r\n              setStartDate();\r\n              setEndDate();\r\n            }}\r\n            className={btn === \"3\" ? \"Status-btn-active\" : \"Status-btn\"}\r\n          >\r\n            3 Months\r\n          </MatButton>\r\n          {/* <MatButton className=\"Status-btn\">Date Range</MatButton> */}\r\n          {/* <MatButton\r\n                        className=\"Status-btn\"\r\n                        style={{ fontSize: \"19px\", color: \"#008eff\" }}\r\n                        onClick={() => setShowSearchTextField(true)}\r\n                    >\r\n                        {\" \"}\r\n                        <i className=\"zmdi zmdi-search\"></i>\r\n                    </MatButton> */}\r\n          <div className='dateCont'>\r\n            <span>Custom Date</span>\r\n            <TextField\r\n              onClick={() => setModalOpen(true)}\r\n              contentEditable={false}\r\n              value={startDate ? moment(startDate).format(\"DD/MM/YYYY\") : \"\"}\r\n              placeholder='dd-mm-yyyy'\r\n            />\r\n            <Box sx={{ mx: 2 }}> to </Box>\r\n            <TextField\r\n              onClick={() => setModalOpen(true)}\r\n              contentEditable={false}\r\n              value={endDate ? moment(endDate).format(\"DD/MM/YYYY\") : \"\"}\r\n              placeholder='dd-mm-yyyy'\r\n            />\r\n          </div>\r\n          <MatButton\r\n            className='Status-btn'\r\n            style={{fontSize: \"19px\", color: \"#E10092\",marginLeft:'10px' }}\r\n            onClick={getImage}\r\n          >\r\n            {\" \"}\r\n            <i  className='zmdi zmdi-download'></i>\r\n          </MatButton>\r\n          <MatButton\r\n            className='Status-btn'\r\n            style={{ fontSize: \"19px\", color: \"#E10092\" }}\r\n            onClick={() => {\r\n              setBtn(selectedField);\r\n              setFilterBtn(\"\");\r\n              setRefresh(true);\r\n              setToDates(Math.floor(new Date().getTime() / 1000.0));\r\n              setFromDate(\r\n                Math.floor(new Date().getTime() / 1000.0) -\r\n                  durationValue(selectedField)\r\n              );\r\n             // clearAll();\r\n              setMitigationList(data?.mitigationList);\r\n              setStartDate();\r\n              setEndDate();\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <i className='zmdi zmdi-refresh'></i>\r\n          </MatButton>\r\n          <MatButton\r\n            onClick={() => {\r\n              setFilterBtn(\"4\");\r\n              setFilterMenu(true);\r\n            }}\r\n            className={filterbtn === \"4\" ? \"Status-btn-active\" : \"Status-btn\"}\r\n          >\r\n            Filter\r\n          </MatButton>\r\n          {/* <IssueFilter /> */}\r\n        </div>\r\n      </div>\r\n      <MitigationTable\r\n        mitigationList={mitigationList}\r\n        toDate={toDates}\r\n        fromDate={fromDate}\r\n      />\r\n\r\n      <Drawer\r\n        open={mobileMenu}\r\n        onClose={() => {\r\n          setFilterBtn(\"\");\r\n          setFilterMenu(false);\r\n        }}\r\n        anchor={\"right\"}\r\n      >\r\n        <div style={{ width: \"480px\" }}>\r\n          <div className='SideBarHeader' style={{ marginBottom: \"-10px\" }}>\r\n            <h3>Filter</h3>\r\n            <IconButton\r\n              onClick={() => {\r\n                setFilterBtn(\"\");\r\n                setFilterMenu(false);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <Close />\r\n            </IconButton>\r\n          </div>\r\n          <div\r\n            style={{ padding: \"10px\" }}\r\n            sx={{\r\n              \"& .MuiTextField-root\": { m: 1, height: \"25px\" },\r\n            }}\r\n          >\r\n            <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n              <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                Impact Session\r\n              </h3>\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6} md={6}>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      value={impectSessionDd}\r\n                      labelId='demo-simple-select-label'\r\n                      id='demo-simple-select'\r\n                      variant='outlined'\r\n                      style={{ height: \"40px\" }}\r\n                      onChange={(e) => setImpectSessionDd(e.target.value)}\r\n                    >\r\n                      <MenuItem key='>=' value='>='>\r\n                        &gt;=\r\n                      </MenuItem>\r\n                      <MenuItem key='<=' value='<='>\r\n                        &#60;=\r\n                      </MenuItem>\r\n                      <MenuItem key='>' value='>'>\r\n                        &gt;\r\n                      </MenuItem>\r\n                      <MenuItem key='<' value='<'>\r\n                        {\" \"}\r\n                        &#60;\r\n                      </MenuItem>\r\n                      <MenuItem key='==' value='=='>\r\n                        =\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} md={6}>\r\n                  <TextField\r\n                    value={impectSession}\r\n                    id='outlined-basic'\r\n                    label=''\r\n                    variant='outlined'\r\n                    size='small'\r\n                    type={\"number\"}\r\n                    style={{\r\n                      background: \"#f7f7f7\",\r\n                      border: \"1\",\r\n                      borderRadius: \"4px\",\r\n                      width: \"100%\",\r\n                    }}\r\n                    onChange={(e) => setImpectSession(e.target.value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </ListItem>\r\n\r\n            <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n              <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                Previous UEI\r\n              </h3>\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6} md={6}>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      value={previousUEIDd}\r\n                      labelId='demo-simple-select-label'\r\n                      id='demo-simple-select'\r\n                      variant='outlined'\r\n                      style={{ height: \"40px\" }}\r\n                      onChange={(e) => setPreviousUEIDd(e.target.value)}\r\n                    >\r\n                      <MenuItem key='>=' value='>='>\r\n                        &gt;=\r\n                      </MenuItem>\r\n                      <MenuItem key='<=' value='<='>\r\n                        &#60;=\r\n                      </MenuItem>\r\n                      <MenuItem key='>' value='>'>\r\n                        &gt;\r\n                      </MenuItem>\r\n                      <MenuItem key='<' value='<'>\r\n                        {\" \"}\r\n                        &#60;\r\n                      </MenuItem>\r\n                      <MenuItem key='==' value='=='>\r\n                        =\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} md={6}>\r\n                  <TextField\r\n                    value={previousUEI}\r\n                    id='outlined-basic'\r\n                    label=''\r\n                    variant='outlined'\r\n                    size='small'\r\n                    type={\"number\"}\r\n                    style={{\r\n                      background: \"#f7f7f7\",\r\n                      border: \"1\",\r\n                      borderRadius: \"4px\",\r\n                      width: \"100%\",\r\n                    }}\r\n                    onChange={(e) => setPreviousUEI(e.target.value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </ListItem>\r\n\r\n            <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n              <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                Current UEI\r\n              </h3>\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6} md={6}>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      value={currentUEIDd}\r\n                      labelId='demo-simple-select-label'\r\n                      id='demo-simple-select'\r\n                      variant='outlined'\r\n                      style={{ height: \"40px\" }}\r\n                      onChange={(e) => setCurrentUEIDd(e.target.value)}\r\n                    >\r\n                      <MenuItem key='>=' value='>='>\r\n                        &gt;=\r\n                      </MenuItem>\r\n                      <MenuItem key='<=' value='<='>\r\n                        &#60;=\r\n                      </MenuItem>\r\n                      <MenuItem key='>' value='>'>\r\n                        &gt;\r\n                      </MenuItem>\r\n                      <MenuItem key='<' value='<'>\r\n                        {\" \"}\r\n                        &#60;\r\n                      </MenuItem>\r\n                      <MenuItem key='==' value='=='>\r\n                        =\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} md={6}>\r\n                  <TextField\r\n                    value={currentUEI}\r\n                    id='outlined-basic'\r\n                    label=''\r\n                    variant='outlined'\r\n                    size='small'\r\n                    type={\"number\"}\r\n                    style={{\r\n                      background: \"#f7f7f7\",\r\n                      border: \"1\",\r\n                      borderRadius: \"4px\",\r\n                      width: \"100%\",\r\n                    }}\r\n                    onChange={(e) => setCurrentUEI(e.target.value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </ListItem>\r\n            <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n              <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>Source</h3>\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={12}>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      value={sourceDd}\r\n                      labelId='demo-simple-select-label'\r\n                      id='demo-simple-select'\r\n                      variant='outlined'\r\n                      style={{ height: \"40px\" }}\r\n                      onChange={(e) => setSourceDd(e.target.value)}\r\n                    >\r\n                      <MenuItem key='Manual' value='Manual'>\r\n                        Manual\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        key='Local Intelligence'\r\n                        value='Local Intelligence'\r\n                      >\r\n                        Local Intelligence\r\n                      </MenuItem>\r\n                      <MenuItem key='AI' value='AI'>\r\n                        AI\r\n                      </MenuItem>\r\n                      <MenuItem key='AIMitigation' value='AIMitigation'>\r\n                      AIMitigation\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </ListItem>\r\n            {/* <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n              <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>Date</h3>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns} fullWidth>\r\n                <DatePicker\r\n                  label=''\r\n                  inputFormat='dd/MM/yyyy'\r\n                  value={dateValue}\r\n                  onChange={(newValue) => {\r\n                    setDateValue(newValue);\r\n                  }}\r\n                  style={{\r\n                    background: \"#f7f7f7\",\r\n                    border: \"1\",\r\n                    borderRadius: \"4px\",\r\n                    width: \"100%\",\r\n                  }}\r\n                  fullWidth\r\n                  renderInput={(params) => <TextField {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </ListItem> */}\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-end\",\r\n                alignItems: \"center\",\r\n                marginTop: \"45px\",\r\n                marginRight: \"14px\",\r\n              }}\r\n            >\r\n              <MatButton\r\n                className='Status-btn'\r\n                onClick={clearAll}\r\n                style={{\r\n                  fontSize: \"0.875rem\",\r\n                  color: \"#008eff\",\r\n                  width: \"100px\",\r\n                  height: \"28px\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n              >\r\n                {\"CLEAR ALL\"}\r\n              </MatButton>\r\n              <MatButton onClick={clickOnApply} style={stylee}>\r\n                {\"Apply\"}\r\n              </MatButton>\r\n            </div>\r\n            {/* </List> */}\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n      <Modal isOpen={openModal} toggle={() => setModalOpen(false)} centered>\r\n        <ModalHeader>\r\n          <h3>Date Picker</h3>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <DateRange\r\n              onChange={(item) => setRange([item.selection])}\r\n              ranges={range}\r\n              editableDateInputs={true}\r\n              moveRangeOnFirstSelection={false}\r\n              maxDate={new Date()}\r\n            />\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div>\r\n          <Button\r\n              onClick={() => setModalOpen(false)}\r\n              variant='contained'\r\n              className='btn-danger text-white bg-danger'\r\n              \r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={submit}\r\n              variant='contained'\r\n              color='primary'\r\n              className='text-white bg-primary'\r\n              style={{ marginLeft: 10 }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          \r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MitigationDashboard;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"addEndListener\", \"appear\", \"children\", \"container\", \"direction\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef, HTMLElementType, chainPropTypes } from '@mui/utils';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport { ownerWindow } from '../utils'; // Translate the node so it can't be seen on the screen.\n// Later, we're going to translate the node back to its original location with `none`.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getTranslateValue(direction, node, resolvedContainer) {\n  const rect = node.getBoundingClientRect();\n  const containerRect = resolvedContainer && resolvedContainer.getBoundingClientRect();\n  const containerWindow = ownerWindow(node);\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    if (containerRect) {\n      return `translateX(${containerRect.right + offsetX - rect.left}px)`;\n    }\n\n    return `translateX(${containerWindow.innerWidth + offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    if (containerRect) {\n      return `translateX(-${rect.right - containerRect.left - offsetX}px)`;\n    }\n\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    if (containerRect) {\n      return `translateY(${containerRect.bottom + offsetY - rect.top}px)`;\n    }\n\n    return `translateY(${containerWindow.innerHeight + offsetY - rect.top}px)`;\n  } // direction === 'down'\n\n\n  if (containerRect) {\n    return `translateY(-${rect.top - containerRect.top + rect.height - offsetY}px)`;\n  }\n\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nfunction resolveContainer(containerPropProp) {\n  return typeof containerPropProp === 'function' ? containerPropProp() : containerPropProp;\n}\n\nexport function setTranslateValue(direction, node, containerProp) {\n  const resolvedContainer = resolveContainer(containerProp);\n  const transform = getTranslateValue(direction, node, resolvedContainer);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  const theme = useTheme();\n  const defaultEasing = {\n    enter: theme.transitions.easing.easeOut,\n    exit: theme.transitions.easing.sharp\n  };\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    container: containerProp,\n    direction = 'down',\n    easing: easingProp = defaultEasing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const childrenRef = React.useRef(null);\n  const handleRefIntermediary = useForkRef(children.ref, childrenRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = callback => isAppearing => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node, containerProp);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n    setTranslateValue(direction, node, containerProp);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(node => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n\n  const handleAddEndListener = next => {\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(childrenRef.current, next);\n    }\n  };\n\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current, containerProp);\n    }\n  }, [direction, containerProp]);\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current, containerProp);\n      }\n    });\n    const containerWindow = ownerWindow(childrenRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp, containerProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    appear: appear,\n    in: inProp,\n    timeout: timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        ref: handleRef,\n        style: _extends({\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, style, children.props.style)\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the container the Slide is transitioning from.\n   */\n  container: chainPropTypes(PropTypes.oneOfType([HTMLElementType, PropTypes.func]), props => {\n    if (props.open) {\n      const resolvedContainer = resolveContainer(props.container);\n\n      if (resolvedContainer && resolvedContainer.nodeType === 1) {\n        const box = resolvedContainer.getBoundingClientRect();\n\n        if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n          return new Error(['MUI: The `container` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n        }\n      } else if (!resolvedContainer || typeof resolvedContainer.getBoundingClientRect !== 'function' || resolvedContainer.contextElement != null && resolvedContainer.contextElement.nodeType !== 1) {\n        return new Error(['MUI: The `container` prop provided to the component is invalid.', 'It should be an HTML element instance.'].join('\\n'));\n      }\n    }\n\n    return null;\n  }),\n\n  /**\n   * Direction the child node will enter from.\n   * @default 'down'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   * @default {\n   *   enter: theme.transitions.easing.easeOut,\n   *   exit: theme.transitions.easing.sharp,\n   * }\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDrawerUtilityClass(slot) {\n  return generateUtilityClass('MuiDrawer', slot);\n}\nconst drawerClasses = generateUtilityClasses('MuiDrawer', ['root', 'docked', 'paper', 'paperAnchorLeft', 'paperAnchorRight', 'paperAnchorTop', 'paperAnchorBottom', 'paperAnchorDockedLeft', 'paperAnchorDockedRight', 'paperAnchorDockedTop', 'paperAnchorDockedBottom', 'modal']);\nexport default drawerClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"BackdropProps\"],\n      _excluded2 = [\"anchor\", \"BackdropProps\", \"children\", \"className\", \"elevation\", \"hideBackdrop\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Modal from '../Modal';\nimport Slide from '../Slide';\nimport Paper from '../Paper';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { getDrawerUtilityClass } from './drawerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, (ownerState.variant === 'permanent' || ownerState.variant === 'persistent') && styles.docked, styles.modal];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchor,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    docked: [(variant === 'permanent' || variant === 'persistent') && 'docked'],\n    modal: ['modal'],\n    paper: ['paper', `paperAnchor${capitalize(anchor)}`, variant !== 'temporary' && `paperAnchorDocked${capitalize(anchor)}`]\n  };\n  return composeClasses(slots, getDrawerUtilityClass, classes);\n};\n\nconst DrawerRoot = styled(Modal, {\n  name: 'MuiDrawer',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.drawer\n}));\nconst DrawerDockedRoot = styled('div', {\n  shouldForwardProp: rootShouldForwardProp,\n  name: 'MuiDrawer',\n  slot: 'Docked',\n  skipVariantsResolver: false,\n  overridesResolver\n})({\n  flex: '0 0 auto'\n});\nconst DrawerPaper = styled(Paper, {\n  name: 'MuiDrawer',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`paperAnchor${capitalize(ownerState.anchor)}`], ownerState.variant !== 'temporary' && styles[`paperAnchorDocked${capitalize(ownerState.anchor)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  overflowY: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: '1 0 auto',\n  zIndex: theme.zIndex.drawer,\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  // temporary style\n  position: 'fixed',\n  top: 0,\n  // We disable the focus ring for mouse, touch and keyboard users.\n  // At some point, it would be better to keep it for keyboard users.\n  // :focus-ring CSS pseudo-class will help.\n  outline: 0\n}, ownerState.anchor === 'left' && {\n  left: 0\n}, ownerState.anchor === 'top' && {\n  top: 0,\n  left: 0,\n  right: 0,\n  height: 'auto',\n  maxHeight: '100%'\n}, ownerState.anchor === 'right' && {\n  right: 0\n}, ownerState.anchor === 'bottom' && {\n  top: 'auto',\n  left: 0,\n  bottom: 0,\n  right: 0,\n  height: 'auto',\n  maxHeight: '100%'\n}, ownerState.anchor === 'left' && ownerState.variant !== 'temporary' && {\n  borderRight: `1px solid ${theme.palette.divider}`\n}, ownerState.anchor === 'top' && ownerState.variant !== 'temporary' && {\n  borderBottom: `1px solid ${theme.palette.divider}`\n}, ownerState.anchor === 'right' && ownerState.variant !== 'temporary' && {\n  borderLeft: `1px solid ${theme.palette.divider}`\n}, ownerState.anchor === 'bottom' && ownerState.variant !== 'temporary' && {\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\nexport function isHorizontal(anchor) {\n  return ['left', 'right'].indexOf(anchor) !== -1;\n}\nexport function getAnchor(theme, anchor) {\n  return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\n/**\n * The props of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\n\nconst Drawer = /*#__PURE__*/React.forwardRef(function Drawer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDrawer'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n\n  const {\n    anchor: anchorProp = 'left',\n    BackdropProps,\n    children,\n    className,\n    elevation = 16,\n    hideBackdrop = false,\n    ModalProps: {\n      BackdropProps: BackdropPropsProp\n    } = {},\n    onClose,\n    open = false,\n    PaperProps = {},\n    SlideProps,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Slide,\n    transitionDuration = defaultTransitionDuration,\n    variant = 'temporary'\n  } = props,\n        ModalProps = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2); // Let's assume that the Drawer will always be rendered on user space.\n  // We use this state is order to skip the appear transition during the\n  // initial mount of the component.\n\n\n  const mounted = React.useRef(false);\n  React.useEffect(() => {\n    mounted.current = true;\n  }, []);\n  const anchorInvariant = getAnchor(theme, anchorProp);\n  const anchor = anchorProp;\n\n  const ownerState = _extends({}, props, {\n    anchor,\n    elevation,\n    open,\n    variant\n  }, other);\n\n  const classes = useUtilityClasses(ownerState);\n\n  const drawer = /*#__PURE__*/_jsx(DrawerPaper, _extends({\n    elevation: variant === 'temporary' ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx(classes.paper, PaperProps.className),\n    ownerState: ownerState,\n    children: children\n  }));\n\n  if (variant === 'permanent') {\n    return /*#__PURE__*/_jsx(DrawerDockedRoot, _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: drawer\n    }));\n  }\n\n  const slidingDrawer = /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    in: open,\n    direction: oppositeDirection[anchorInvariant],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps, {\n    children: drawer\n  }));\n\n  if (variant === 'persistent') {\n    return /*#__PURE__*/_jsx(DrawerDockedRoot, _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: slidingDrawer\n    }));\n  } // variant === temporary\n\n\n  return /*#__PURE__*/_jsx(DrawerRoot, _extends({\n    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n      transitionDuration\n    }),\n    className: clsx(classes.root, classes.modal, className),\n    open: open,\n    ownerState: ownerState,\n    onClose: onClose,\n    hideBackdrop: hideBackdrop,\n    ref: ref\n  }, other, ModalProps, {\n    children: slidingDrawer\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Drawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Side from which the drawer will appear.\n   * @default 'left'\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The elevation of the drawer.\n   * @default 16\n   */\n  elevation: integerPropType,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Modal`](/api/modal/) element.\n   * @default {}\n   */\n  ModalProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * The variant to use.\n   * @default 'temporary'\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default Drawer;","/*eslint react-hooks/exhaustive-deps: \"off\"*/\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  Drawer,\r\n  Typography,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  clearAllMitigationData,\r\n  getAllMitigation,\r\n  getMitigationAI,\r\n  getSecondMitigation,\r\n  getThirdMitigation,\r\n  setMitigationAIData,\r\n  setSecondMitigationData,\r\n  setThirdMitigationData,\r\n} from \"Store/Actions\";\r\nimport moment from \"moment\";\r\nimport { Box, Collapse, makeStyles, TableFooter } from \"@material-ui/core\";\r\nimport Button from \"@mui/material/Button\";\r\nimport RefreshOutlinedIcon from \"@mui/icons-material/RefreshOutlined\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport RctPageLoader from \"Components/RctPageLoader/RctPageLoader\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\n\r\nconst MitigationTable = (props) => {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.qoeReducer);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [mitigationId, setMititgationId] = useState(\"\");\r\n  const [indexes, setIndexes] = useState(-1);\r\n  const [id, setId] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [loader3, setLoader3] = useState(false);\r\n  const [filterText, setFilterText] = useState(\"ALL\");\r\n  const [secondMitigationList, setsecondMitigationList] = useState(\r\n    data?.mitigationSecondList\r\n  );\r\n  const [isLoadingData, setisLoadingData] = useState(false);\r\n\r\n\r\n  //Pagination logics\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const [isAIDrawerOpen, setAIIsDrawerOpen] = useState(false);\r\n\r\n\r\n  ////////////////////\r\n\r\n  const menustyle = {\r\n    borderBottom: \"1px solid white\",\r\n    color: \"rgb(151 151 151 / 87%)\",\r\n    height: \"35px\",\r\n    width: \"125px\",\r\n    lineHeight: \"4px\",\r\n    \"margin-left\": \"10px\",\r\n    // '.MuiSelect-selectMenu':{\r\n    //   'min-height': '0.1876em'\r\n    // }\r\n  };\r\n  const useStyles = makeStyles({\r\n    select: {\r\n      '&:before': {\r\n        borderColor: 'white',\r\n      },\r\n      '&:after': {\r\n        borderColor: 'white',\r\n      },\r\n      '&:not(.Mui-disabled):hover::before': {\r\n        borderColor: 'white',\r\n      },\r\n    },\r\n    icon: {\r\n      fill: 'white',\r\n    },\r\n    root: {\r\n      color: 'white',\r\n    },\r\n  })\r\n\r\n\r\n\r\n  const selectStyles = {\r\n    borderBottom: \"1px solid white\",\r\n    color: \"rgb(151 151 151 / 87%)\",\r\n    height: \"35px\",\r\n    width: \"144px\",\r\n    paddingLeft: '2px',\r\n    control: base => ({\r\n      ...base,\r\n      // width:\"200px\",\r\n    }),\r\n    MenuItem: base => ({\r\n      //...base,\r\n      fontSize: \"10px\"\r\n    })\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getAllMitigation(dispatch, props.toDate, props.fromDate));\r\n    if (data?.mitigationList) {\r\n      setisLoadingData(true)\r\n    } else {\r\n      setisLoadingData(false)\r\n    }\r\n  }, [dispatch, props.fromDate]);\r\n\r\n  useEffect(() => {\r\n    if (filterText == \"ALL\") {\r\n      setsecondMitigationList(data?.mitigationSecondList);\r\n      if (data?.mitigationSecondList.length) {\r\n        setsecondMitigationList(data?.mitigationSecondList);\r\n      }\r\n    }\r\n  }, [data?.mitigationSecondList]);\r\n\r\n  const closeDrawer = () => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n  const openFirstDrawer = (id, source) => {\r\n    if (source == \"AI\") {\r\n      console.log(\"id--\", id);\r\n      dispatch(getMitigationAI(dispatch, \"\", id))\r\n      setAIIsDrawerOpen(true)\r\n    } else {\r\n      dispatch(setSecondMitigationData([]))\r\n      setId(id);\r\n      dispatch(clearAllMitigationData());\r\n      setMititgationId(id);\r\n      setIsDrawerOpen(true);\r\n      setisLoadingData(true)\r\n      setLoader(true);\r\n      dispatch(getSecondMitigation(id, dispatch, () => {\r\n        setLoader(false);\r\n      }));\r\n    }\r\n  };\r\n  var final = []\r\n  final = props.mitigationList.length > 0\r\n    ? props.mitigationList.sort(function (a, b) {\r\n      return new Date(b.Time_Stamp) - new Date(a.Time_Stamp);\r\n    })\r\n    : [];\r\n\r\n  useEffect(() => {\r\n    if (data?.mitigationList.length > 0) {\r\n      setisLoadingData(true)\r\n    } else {\r\n      setisLoadingData(false)\r\n    }\r\n    setTimeout(() => {\r\n      setisLoadingData(true)\r\n    }, 30000);\r\n  }, [data?.mitigationList])\r\n\r\n  const clickOnSeconDrawer = (index, device_id, condition) => {\r\n    index === indexes ? setIndexes(-1) : setIndexes(index);\r\n    setLoader3(condition)\r\n    dispatch(setThirdMitigationData([]))\r\n    condition && dispatch(getThirdMitigation(device_id, dispatch, () => { }));\r\n    { console.log(\"loader3--\", loader3, condition) }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data?.mitigationThirdList.length > 0) {\r\n      setLoader3(false)\r\n    }\r\n  }, [data?.mitigationThirdList])\r\n\r\n\r\n  const handleReload = () => {\r\n    setLoader(true);\r\n    dispatch(\r\n      getSecondMitigation(id, dispatch, () => {\r\n        setLoader(false);\r\n      })\r\n    );\r\n  };\r\n\r\n  const filterChange = (e) => {\r\n    setFilterText(e.target.value);\r\n    console.log(\"value--\", e.target.value);\r\n    setsecondMitigationList(data?.mitigationSecondList);\r\n\r\n    let filteredData = [];\r\n    if (e.target.value !== \"ALL\") {\r\n      filteredData = data?.mitigationSecondList?.filter((mlist) => {\r\n        return (\r\n          mlist.mitigation_status.toLowerCase() == e.target.value.toLowerCase()\r\n        );\r\n      });\r\n      setsecondMitigationList(filteredData);\r\n    } else {\r\n      setsecondMitigationList(data?.mitigationSecondList);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table sx={{ minWidth: 650 }}>\r\n          <TableHead\r\n            style={{ backgroundColor: \"#ffffff\", borderBottom: \"#ffffff\" }}\r\n          >\r\n            <TableRow\r\n              style={{\r\n                borderBottom: \"1px solid white\",\r\n                color: \"rgb(151 151 151 / 87%)\",\r\n              }}\r\n              sx={{ border: 0 }}\r\n            >\r\n              <TableCell>Action ID</TableCell>\r\n              <TableCell>Date/Time</TableCell>\r\n              <TableCell>Impacted Sessions</TableCell>\r\n              <TableCell>AppliedOn</TableCell>\r\n              <TableCell>Previous UEI</TableCell>\r\n              <TableCell>Current UEI</TableCell>\r\n              <TableCell>Source</TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          {!isLoadingData && <div><RctPageLoader /></div>}\r\n          {final &&\r\n            final?.length > 0 &&\r\n            final\r\n              ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              ?.map((list, index) => {\r\n                let fullDate = Math.floor(\r\n                  new Date(list?.Time_Stamp).getTime() * 1000.0\r\n                );\r\n                return (\r\n                  <TableRow\r\n                    key={index}\r\n                    style={{ backgroundColor: \"#ffffff\" }}\r\n                    sx={{ border: 0 }}\r\n                  >\r\n\r\n                    <TableCell>{list?.GroupMitigationID}</TableCell>\r\n                    <TableCell>\r\n                      {moment(fullDate).format(\"DD-MM-YYYY\") +\r\n                        \" | \" +\r\n                        moment(fullDate).format(\"hh:mm\")}\r\n                    </TableCell>\r\n                    <TableCell>{list?.ImpactedSessions}</TableCell>\r\n                    <TableCell>\r\n                      {list?.ImpactedSessions}/{list?.AppliedOn}\r\n                    </TableCell>\r\n                    <TableCell>{list?.PreviousUEI}</TableCell>\r\n                    <TableCell>{list?.CurrentUEI}</TableCell>\r\n                    <TableCell>{list?.Source}</TableCell>\r\n                    <TableCell>\r\n                      <ArrowForwardIosIcon\r\n                        onClick={() => openFirstDrawer(list?.GroupMitigationID, list?.Source)}\r\n                        style={{\r\n                          fontSize: \"15px\",\r\n                          color: \" #2b90f7\",\r\n                          fontWeight: \"600\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n        </Table>\r\n        <TablePagination\r\n          style={{\r\n            // backgroundColor: \"rgb(248, 248, 248)\",\r\n            verticalAlign: \"center\",\r\n          }}\r\n          rowsPerPageOptions={[10, 20, 50]}\r\n          component='div'\r\n          count={final.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </TableContainer>\r\n\r\n      <div className='FilterContainer'>\r\n        <Drawer\r\n          open={isDrawerOpen}\r\n          onClose={() => setIsDrawerOpen(false)}\r\n          anchor={\"bottom\"}\r\n          className='drawer-postion'\r\n        >\r\n          <div className='issue-wraper'>\r\n            <div className='top-left-nav'>\r\n              <Typography\r\n                variant='h5'\r\n                style={{ fontSize: \"1.2rem\", paddingLeft: \"13px\" }}\r\n              >\r\n                {\" \"}\r\n                <span>\r\n                  <ArrowBackIcon onClick={() => closeDrawer()} />\r\n                </span>\r\n                <span style={{ padding: \"0px 0px 2px 17px\" }}>\r\n                  Mitigation Action ID : {mitigationId} (\r\n                  {data?.mitigationSecondList?.length})\r\n                </span>\r\n              </Typography>\r\n            </div>\r\n            <div></div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-end\",\r\n                fontSize: \"1.2rem\",\r\n                paddingRight: \"13px\",\r\n              }}\r\n            >\r\n              {loader ? (\r\n                <RctPageLoader />\r\n              ) : (\r\n                <Button\r\n                  size='small'\r\n                  endIcon={\r\n                    <Tooltip title='Reload this page' arrow>\r\n                      <RefreshOutlinedIcon\r\n                        style={{ color: \"#E10092\" }}\r\n                        onClick={handleReload}\r\n                      />\r\n                    </Tooltip>\r\n                  }\r\n                />\r\n              )}\r\n              <CloseIcon onClick={() => closeDrawer()} />\r\n            </div>\r\n          </div>\r\n          <TableContainer>\r\n            <Table sx={{ minWidth: 650 }} style={{ marginLeft: \"50px\" }}>\r\n              <TableHead\r\n                style={{ backgroundColor: \"#ffffff\", borderBottom: \"#ffffff\" }}\r\n              >\r\n                <TableRow\r\n                  style={{\r\n                    borderBottom: \"0px solid white\",\r\n                    color: \"rgb(151 151 151 / 87%)\",\r\n                  }}\r\n                  sx={{\r\n                    \"&:last-cselectedld td, &:last-cselectedld th\": {\r\n                      border: 0,\r\n                    },\r\n                  }}\r\n                >\r\n                  <TableCell></TableCell>\r\n                  <TableCell style={{ color: \"#bdb5b5\" }}>Device ID</TableCell>\r\n                  <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                    Last Report Time\r\n                  </TableCell>\r\n                  <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                    Previous UEI\r\n                  </TableCell>\r\n                  <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                    Current UEI\r\n                  </TableCell>\r\n                  <TableCell style={{ color: \"#bdb5b5\", marginLeft: \"0px\" }}>\r\n                    <FormControl fullWidth={false} className='SelectStatus'>\r\n                      <InputLabel id='Select Status'>\r\n                        Mitigation Status\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId='intervalSelect'\r\n                        id='demo-simple-select'\r\n                        select\r\n                        placeholder='Select'\r\n                        style={selectStyles}\r\n                        value={filterText}\r\n                        onChange={filterChange}\r\n                        sx={{\r\n                          \".MuiSelect-icon\": {},\r\n                          \".MuiSelect-outlined\": {},\r\n                        }}\r\n                      >\r\n                        <MenuItem key='ALL' value='ALL'>\r\n                          ALL\r\n                        </MenuItem>\r\n                        <MenuItem key='Dispatched' value='Dispatched'>\r\n                          DISPATCHED\r\n                        </MenuItem>\r\n                        <MenuItem key='Missed' value='Missed'>\r\n                          MISSED\r\n                        </MenuItem>\r\n                        <MenuItem key='Fixed' value='Fixed'>\r\n                          FIXED\r\n                        </MenuItem>\r\n                        <MenuItem key='Pending' value='Pending'>\r\n                          PENDING\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              {secondMitigationList && secondMitigationList.length > 0 ? (\r\n                secondMitigationList?.map((second, index) => {\r\n                  let intDate = parseInt(second?.last_report_time);\r\n                  let fullDate = Math.floor(\r\n                    new Date(intDate).getTime() * 1000.0\r\n                  );\r\n                  return (\r\n                    <>\r\n                      <TableRow\r\n                        key={index}\r\n                        style={{\r\n                          backgroundColor: \"#ffffff\",\r\n                          borderBottom: \"0px\",\r\n                        }}\r\n                      >\r\n                        <TableCell>\r\n                          {index === indexes ? (\r\n                            <i\r\n                              onClick={() =>\r\n                                clickOnSeconDrawer(\r\n                                  index,\r\n                                  second?.device_id,\r\n                                  false\r\n                                )\r\n                              }\r\n                              style={{ cursor: \"pointer\", fontSize: \"24px\" }}\r\n                              className='zmdi zmdi-minus-circle'\r\n                            ></i>\r\n                          ) : (\r\n                            <i\r\n                              style={{ cursor: \"pointer\", fontSize: \"24px\" }}\r\n                              onClick={() =>\r\n                                clickOnSeconDrawer(\r\n                                  index,\r\n                                  second?.device_id,\r\n                                  true\r\n                                )\r\n                              }\r\n                              className='zmdi zmdi-plus-circle'\r\n                            ></i>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>{second?.device_id}</TableCell>\r\n                        <TableCell>\r\n                          {moment(fullDate).format(\"DD-MM-YYYY\") +\r\n                            \" | \" +\r\n                            moment(fullDate).format(\"hh:mm\")}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {second?.previous_uei > -1\r\n                            ? Number(second?.previous_uei).toFixed(2)\r\n                            : \"-\"}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {second?.current_uei > -1\r\n                            ? Number(second?.current_uei).toFixed(2)\r\n                            : \"-\"}\r\n                        </TableCell>\r\n                        <TableCell>{second?.mitigation_status}</TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell\r\n                          style={{ paddingBottom: 0, paddingTop: 0 }}\r\n                          colSpan={6}\r\n                        >\r\n                          <Collapse\r\n                            in={indexes === index}\r\n                            timeout='auto'\r\n                            unmountOnExit\r\n                          >\r\n                            <Box sx={{ margin: 1 }}>\r\n                              {console.log(\"loader3-2-\", loader3)}\r\n                              {loader3 ? <RctPageLoader /> : null}\r\n                              <Table size='small'>\r\n                                <TableHead>\r\n                                  <TableRow>\r\n                                    <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                                      Current Session ID\r\n                                    </TableCell>\r\n                                    <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                                      Previous Session ID\r\n                                    </TableCell>\r\n                                    <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                                      Time Stamp\r\n                                    </TableCell>\r\n                                    <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                                      Local Migitation ID\r\n                                    </TableCell>\r\n                                    <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                                      Group Migitation ID\r\n                                    </TableCell>\r\n                                    <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                                      Previous UEI\r\n                                    </TableCell>\r\n                                    <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                                      Current UEI\r\n                                    </TableCell>\r\n                                    <TableCell style={{ color: \"#bdb5b5\" }}>\r\n                                      Deployement Status\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                </TableHead>\r\n                                {data?.mitigationThirdList &&\r\n                                  data?.mitigationThirdList?.length > 0 ? (\r\n                                  data?.mitigationThirdList?.map(\r\n                                    (third, index) => {\r\n                                      let intDate = parseInt(\r\n                                        third?.last_report_time\r\n                                      );\r\n                                      let fullDate = Math.floor(\r\n                                        new Date(intDate).getTime() * 1000.0\r\n                                      );\r\n                                      return (\r\n\r\n                                        <TableRow\r\n                                          key={index}\r\n                                          style={{\r\n                                            backgroundColor: \"#ffffff\",\r\n                                            borderBottom: \"0px\",\r\n                                          }}\r\n                                        >\r\n                                          <TableCell>\r\n                                            {third?.current_session_id\r\n                                              ? third?.current_session_id\r\n                                              : \"-\"}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {third?.last_session_id\r\n                                              ? third?.last_session_id\r\n                                              : \"-\"}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {moment(fullDate).format(\r\n                                              \"DD-MM-YYYY\"\r\n                                            ) +\r\n                                              \" | \" +\r\n                                              moment(fullDate).format(\"hh:mm\")}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {third?.local_mitigation_id &&\r\n                                              third?.local_mitigation_id !==\r\n                                              \"NULL\"\r\n                                              ? third?.local_mitigation_id\r\n                                              : \"-\"}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {third?.group_mitigation_id &&\r\n                                              third?.group_mitigation_id !==\r\n                                              \"NULL\"\r\n                                              ? third?.group_mitigation_id\r\n                                              : \"-\"}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {third?.previous_uei > -1\r\n                                              ? Number(\r\n                                                third?.previous_uei\r\n                                              ).toFixed(2)\r\n                                              : \"-\"}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {third?.current_uei > -1\r\n                                              ? Number(\r\n                                                third?.current_uei\r\n                                              ).toFixed(2)\r\n                                              : \"-\"}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {third?.mitigation_status &&\r\n                                              third?.mitigation_status !== \"NULL\"\r\n                                              ? third?.mitigation_status\r\n                                              : \"-\"}\r\n                                          </TableCell>\r\n                                        </TableRow>\r\n                                      );\r\n                                    }\r\n                                  )\r\n                                ) : (\r\n                                  <p>{!loader3 && data?.mitigationThirdList.length == 0 ? \"No Data Found\" : \"\"}</p>\r\n                                )}\r\n                              </Table>\r\n                            </Box>\r\n                          </Collapse>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p>{!loader && secondMitigationList.length == 0 ? \"No Data Found\" : \"\"}</p>\r\n              )}\r\n            </Table>\r\n          </TableContainer>\r\n        </Drawer>\r\n      </div>\r\n\r\n      <div className='FilterContainer'>\r\n        <Drawer\r\n          open={isAIDrawerOpen}\r\n          onClose={() => {\r\n            setAIIsDrawerOpen(false)\r\n            setMitigationAIData([])\r\n          }}\r\n          anchor={\"bottom\"}\r\n          className='drawer-postion'\r\n        >\r\n          <div className='issue-wraper'>\r\n            <div className='top-left-nav'>\r\n              <Typography\r\n                variant='h5'\r\n                style={{ fontSize: \"1.2rem\", paddingLeft: \"13px\" }}\r\n              >\r\n                {\" \"}\r\n                <span>\r\n                  <ArrowBackIcon onClick={() => {\r\n                    setAIIsDrawerOpen(false)\r\n                    setMitigationAIData([])\r\n                  }} />\r\n                </span>\r\n                <span style={{ padding: \"0px 0px 2px 17px\" }}>\r\n                  Mitigation Action ID : {data?.aiMitigation ? data?.aiMitigation[0]?.GroupMitigationID:\"\"}\r\n                </span>\r\n              </Typography>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-end\",\r\n                fontSize: \"1.2rem\",\r\n                paddingRight: \"13px\",\r\n              }}\r\n            >\r\n              <CloseIcon onClick={() => {\r\n                 setAIIsDrawerOpen(false)\r\n                 setMitigationAIData([])\r\n              }} />\r\n            </div>\r\n          </div>\r\n          {data?.aiMitigation && data?.aiMitigation?.length>0 ? <div className=\"mitigationai\">\r\n            \r\n            <div style={{ margin: '12px 0 0 2rem' }}>\r\n              <h3>Plan Name</h3>\r\n              <p>{data?.aiMitigation[0]?.Planname}</p>\r\n              <h3>Recepient List</h3>\r\n              <div className=\"recepient\">\r\n                <ul>\r\n                  {data?.aiMitigation[0]?.Recipient_List?.map(res => {\r\n                   return <li>{res}</li>\r\n                  })}\r\n\r\n                </ul>\r\n              </div>\r\n              <h3>Body</h3>\r\n              <div className=\"body\">\r\n                {data?.aiMitigation[0]?.Body}\r\n              </div>\r\n              <p><span className=\"spanText\">Number of Records : </span> <span>{data?.aiMitigation[0]?.NumOfRecords}</span></p>\r\n              <p><span className=\"spanText\">Created Date : </span><span>{moment(Math.floor(new Date(data?.aiMitigation[0]?.Created_At).getTime() * 1000.0)).format(\"DD-MM-YYYY\")}</span></p>\r\n\r\n            </div>\r\n\r\n          </div>:<p style={{margin: \"11px 0px 0 83px\"}}>No Data Found</p>}\r\n        </Drawer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default MitigationTable;\r\n","/*eslint react-hooks/exhaustive-deps: \"off\"*/\r\nimport * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createFileName } from \"use-react-screenshot\";\r\nimport AppliedFilters from \"Components/QualityExperience/AppliedFilters\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport FilterLayout from \"Components/QualityExperience/FilterLayout\";\r\nimport LeftMenu from \"Components/QualityExperience/LeftMenu\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport CameraAltOutlinedIcon from \"@mui/icons-material/CameraAltOutlined\";\r\nimport FileDownloadOutlinedIcon from \"@mui/icons-material/FileDownloadOutlined\";\r\nimport FullscreenOutlinedIcon from \"@mui/icons-material/FullscreenOutlined\";\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport moment from \"moment\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport {\r\n  getFavoriteMetrics,\r\n  getMitigationAnalyticsPage,\r\n  getUniqueFilters,\r\n  setMetricType,\r\n  setMetricTypeFullName,\r\n} from \"Store/Actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport RctPageLoader from \"Components/RctPageLoader/RctPageLoader\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport Button from \"@mui/material/Button\";\r\n// import exportFromJSON from 'export-from-json'\r\nimport Histogram from \"./Histogram\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport { array } from \"@amcharts/amcharts4/core\";\r\n\r\nconst Analytics = () => {\r\n  const dispatch = useDispatch();\r\n  const realdata = useSelector((state) => state.qoeReducer);\r\n  const metric_type = realdata?.metricType;\r\n  const metric_type_fullname = realdata?.metricTypefulname;\r\n  const favorite = realdata?.favoriteMetric;\r\n  const cdnVal = realdata?.filters?.cdn;\r\n  const contentTypeVal = realdata?.filters?.content_type;\r\n  const contentPartnetVal = realdata?.filters?.content_partner;\r\n  const locationVal = realdata?.filters?.location;\r\n  const [unit, setUnit] = useState(\"\");\r\n  const [isLoadingData, setisLoadingData] = useState(false);\r\n  const [cdn, setCdn] = useState([]);\r\n  const [contentType, setContentType] = useState([]);\r\n  const [contentPartner, setContentPartner] = useState([]);\r\n  const [location, setLocation] = useState([]);\r\n  const [metric, setMetric] = useState(\r\n    metric_type ? metric_type : \"number_of_mitigations_applied\"\r\n  );\r\n  const [metricHeader, setMetricHeader] = useState(\r\n    metric_type_fullname ? metric_type_fullname : \"Number Of Mitigations Applied\"\r\n  );\r\n  const [metricsList, setMetricList] = useState([]);\r\n  const [aggregationInterval, setAggregationInterval] = useState(\"1h\");\r\n  const [devicePlatform, setDevicePlatform] = useState([\"dummy\"]);\r\n  const [fromDate, setFromDate] = useState(\r\n    Math.floor(new Date().getTime() / 1000.0) - 24 * 3600\r\n  );\r\n  const [toDate, setToDate] = useState(\r\n    Math.floor(new Date().getTime() / 1000.0)\r\n  );\r\n  const [updatedGraphData, setUpdatedGraphData] = useState();\r\n  const [allGraphPoints, setAllGraphPoints] = useState([]);\r\n  const [androidGraphPoints, setAndroidGraphPoints] = useState([]);\r\n  const [iosGraphPoints, setIosGraphPoints] = useState([]);\r\n  const [chromeGraphPoints, setChromeGraphPoints] = useState([]);\r\n  const [tvGraphPoints, setTvGraphPoints] = useState([]);\r\n  const [firestickGraphPoints, setFirestickGraphPoints] = useState([]);\r\n  const [metricGraphPoints, setMetricGraphPoints] = useState();\r\n  const [androidDataPoints, setAndroidDataPoints] = useState();\r\n  const [AndroidSmartTvDataPoints, setAndroidSmartTvDataPoints] = useState();\r\n  const [AndroidSmartTvGraphPoints, setAndroidSmartTvGraphPoints] = useState([]);\r\n\r\n  const [iosDataPoints, setIosDataPoints] = useState();\r\n  const [chromeDataPoints, setChromeDataPoints] = useState();\r\n  const [tvDataPoints, setTvDataPoints] = useState();\r\n  const [firestickDataPoints, setFirestickDataPoints] = useState();\r\n  const [selectVal, setSelectVal] = useState(\"1d\");\r\n  const [xAxis, setXAxis] = useState(\"hour\");\r\n  const [metricsListLoading, setisMetricsListLoading] = useState(false);\r\n  const [range, setRange] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  const [openModal, setModalOpen] = useState(false);\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [refresh, setRefresh] = useState(10);\r\n  const [sourceD, setSourceData] = useState([]);\r\n  useEffect(() => {\r\n    if (realdata?.device_platform.length > 0) {\r\n      setDevicePlatform(realdata?.device_platform);\r\n    }\r\n  }, [realdata?.device_platform]);\r\n\r\n  useEffect(() => {\r\n    setMetricList([\r\n      \"Number of Mitigation Applied\",\r\n      \"Improvement in UEI\",\r\n      \"Degradation in UEI\",\r\n      \"Average Startup Buffer Length\",\r\n      \"Average Rebuffering Buffer Length\",\r\n    ]);\r\n  }, []);\r\n\r\n  const getReportValue = (reportData,totalLength) => {\r\n    if(metric.includes(\"average\") && reportData){\r\n      return Number(reportData/totalLength)\r\n    }else{\r\n      return reportData\r\n    }\r\n    \r\n  };\r\n\r\n  const getCdn = (val) => {\r\n    setCdn(val);\r\n  };\r\n  const getContentType = (val) => {\r\n    setContentType(val);\r\n  };\r\n  const getContentPartner = (val) => {\r\n    setContentPartner(val);\r\n  };\r\n  const getLocation = (val) => {\r\n    setLocation(val);\r\n  };\r\n\r\n\r\n  const getSourceData = (val) => {\r\n    setSourceData(val);\r\n  };\r\n  // useEffect(() => {\r\n  //   setSourceData(sourceD);\r\n  // }, [sourceD]);\r\n\r\n  const getLocationWithoutState = (val) => {\r\n    let temparray = [];\r\n    val.forEach((element) => {\r\n      temparray.push(element.split(\"(\")[0]);\r\n    });\r\n    return temparray;\r\n  };\r\n  const updateMetricHeader = (data) => {\r\n    setMetricHeader(data)\r\n  }\r\n  const updateMetric = (metricName) => {\r\n    setXAxis(\"hour\");\r\n    setDevicePlatform(realdata?.device_platform);\r\n    setMetric(metricName);\r\n    setStartDate();\r\n    setEndDate();\r\n    setRange([\r\n      {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: \"selection\",\r\n      },\r\n    ]);\r\n    setFromDate(Math.floor(new Date().getTime() / 1000.0) - 24 * 3600);\r\n    setToDate(Math.floor(new Date().getTime() / 1000.0));\r\n    setAggregationInterval(\"1h\")\r\n    setRefresh(10)\r\n    setSelectVal('1d')\r\n    setIosDataPoints([])\r\n    setAndroidDataPoints([])\r\n    setChromeDataPoints([])\r\n    setFirestickDataPoints([])\r\n    setTvDataPoints([])\r\n    setAndroidSmartTvDataPoints([])\r\n  };\r\n\r\n  const updatePlatformData = (layout, itemsToRemove) => {\r\n    let dpl = devicePlatform;\r\n\r\n    if (layout === \"AppliedFilters\") {\r\n      // remove the elemets you got\r\n      for (var j = 0; j < itemsToRemove.length; j++) {\r\n        for (var i = 0; i < dpl.length; i++) {\r\n          if (dpl[i] === itemsToRemove[j]) {\r\n            dpl.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n      setDevicePlatform(dpl);\r\n    } else if (layout === \"FilterLayout\") {\r\n      // add the element you get\r\n    }\r\n  };\r\n\r\n  const savePlatformData = (val) => {\r\n    setDevicePlatform(val);\r\n  };\r\n\r\n  const removeContentPartner = (type) => {\r\n    const data = contentPartner;\r\n    const final = data.filter((d) => d !== type);\r\n    setContentPartner(final);\r\n  };\r\n\r\n  const removeSourceData = (type) => {\r\n    if(type && typeof type =='string'){\r\n      const data = sourceD;\r\n      const final = data.filter((d) => d !== type);\r\n      setSourceData(final);\r\n    }else{\r\n      setSourceData([]);\r\n    }\r\n\r\n  };\r\n\r\n  const removeContentType = (type) => {\r\n    const dataType = contentType;\r\n    const final = dataType.filter((d) => d !== type);\r\n    setContentType(final);\r\n  };\r\n\r\n  const removeLocation = (type) => {\r\n    if(Array.isArray(type)){\r\n      setLocation([]);\r\n    }\r\n    else{\r\n      const dataType = location;\r\n      const final = dataType.filter((d) => d !== type);\r\n      setLocation(final);\r\n    }\r\n  };\r\n\r\n  const removeDevicePlatform = (platform) => {\r\n    if (Array.isArray(platform)) {\r\n      setDevicePlatform([]);\r\n      setContentPartner([]);\r\n      setContentType([]);\r\n      localStorage.removeItem(\"contentPartner\");\r\n    } else {\r\n      const dpa = devicePlatform;\r\n      const final = dpa.filter((d) => d !== platform);\r\n      setDevicePlatform(final);\r\n    }\r\n  };\r\n  const changeRefresh = (e) => {\r\n    setRefresh(e.target.value);\r\n  };\r\n  const setDataRange = (e) => {\r\n    setStartDate();\r\n    setEndDate();\r\n    setRange([\r\n      {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: \"selection\",\r\n      },\r\n    ]);\r\n    setSelectVal(e.target.value);\r\n    let aggrInterval = \"\";\r\n    switch (e.target.value) {\r\n      case \"1min\": {\r\n        aggrInterval = \"10s\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"sec\");\r\n        calculateDateRange(\"1min\");\r\n        return;\r\n      }\r\n      case \"5min\": {\r\n        aggrInterval = \"10s\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"sec\");\r\n        calculateDateRange(\"5min\");\r\n        return;\r\n      }\r\n      case \"1h\": {\r\n        aggrInterval = \"1m\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"hour\");\r\n        calculateDateRange(\"1h\");\r\n        return;\r\n      }\r\n      case \"1d\": {\r\n        aggrInterval = \"1h\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"hour\");\r\n        calculateDateRange(\"1d\");\r\n        return;\r\n      }\r\n      case \"1w\": {\r\n        aggrInterval = \"1d\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"date\");\r\n        calculateDateRange(\"1w\");\r\n        return;\r\n      }\r\n      case \"1m\": {\r\n        aggrInterval = \"2d\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"date\");\r\n        calculateDateRange(\"1m\");\r\n        return;\r\n      }\r\n      case \"1y\": {\r\n        aggrInterval = \"30d\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"date\");\r\n        calculateDateRange(\"1y\");\r\n        return;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const calculateDateRange = (timestamp) => {\r\n    let sd = new Date(); //current system date\r\n    let toDate = Math.floor(sd.getTime() / 1000.0);\r\n    setToDate(toDate);\r\n    // let ts = Math.floor(new Date().getTime() / 1000);\r\n    let ts = Math.floor(moment().endOf(\"date\")._d.getTime() / 1000.0);\r\n    let fromDateRange;\r\n\r\n    switch (timestamp) {\r\n      case \"1min\": {\r\n        fromDateRange = ts - 60;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"5min\": {\r\n        fromDateRange = ts - 300;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1h\": {\r\n        fromDateRange = ts - 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1d\": {\r\n        fromDateRange = ts - 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1w\": {\r\n        fromDateRange = ts - 7 * 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1m\": {\r\n        fromDateRange = ts - 30 * 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1y\": {\r\n        fromDateRange = ts - 12 * 30 * 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (realdata && realdata.mitigationAnalysis) {\r\n      setisLoadingData(false);\r\n      setUpdatedGraphData(realdata.mitigationAnalysis);\r\n    }\r\n  }, [realdata.mitigationAnalysis]);\r\n\r\n  const fetchTheRequest = (\r\n    cdn,\r\n    contentType,\r\n    contentPartner,\r\n    location,\r\n    metric,\r\n    toDate,\r\n    fromDate,\r\n    aggregationInterval,\r\n    devicePlatform,\r\n    sourceD\r\n  ) => {\r\n    setAndroidGraphPoints([]);\r\n    setAndroidDataPoints([]);\r\n    setIosGraphPoints([]);\r\n    setIosDataPoints([]);\r\n    setChromeGraphPoints([]);\r\n    setChromeDataPoints([]);\r\n    setAllGraphPoints([]);\r\n    setMetricGraphPoints([]);\r\n    setTvGraphPoints([]);\r\n    setTvDataPoints([]);\r\n    setFirestickGraphPoints([]);\r\n    setFirestickDataPoints([]);\r\n    setAndroidSmartTvDataPoints([])\r\n    setAndroidSmartTvGraphPoints([])\r\n    setisLoadingData(true);\r\n    if (devicePlatform[0] === \"dummy\") {\r\n      return null;\r\n    }\r\n    dispatch(\r\n      getMitigationAnalyticsPage(\r\n        dispatch,\r\n        cdn,\r\n        contentType,\r\n        contentPartner,\r\n        getLocationWithoutState(location), //  location,,\r\n        metric,\r\n        toDate,\r\n        fromDate,\r\n        aggregationInterval,\r\n        devicePlatform,\r\n        sourceD\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleReload = () => {\r\n    let ts = Math.floor(new Date().getTime() / 1000);\r\n    let fromDateInfo;\r\n    switch (selectVal) {\r\n      case \"1min\": {\r\n        fromDateInfo = ts - 60;\r\n        break;\r\n      }\r\n      case \"5min\": {\r\n        fromDateInfo = ts - 300;\r\n        break;\r\n      }\r\n      case \"1h\": {\r\n        fromDateInfo = ts - 3600;\r\n        break;\r\n      }\r\n      case \"1d\": {\r\n        fromDateInfo = ts - 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1w\": {\r\n        fromDateInfo = ts - 7 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1m\": {\r\n        fromDateInfo = ts - 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1y\": {\r\n        fromDateInfo = ts - 12 * 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    fetchTheRequest(\r\n      cdn,\r\n      contentType,\r\n      contentPartner,\r\n      getLocationWithoutState(location), //  location,,\r\n      metric,\r\n      startDate ? toDate : ts,\r\n      endDate ? fromDate : fromDateInfo,\r\n      aggregationInterval,\r\n      devicePlatform,\r\n      sourceD\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    let ts = Math.floor(new Date().getTime() / 1000);\r\n    let fromDateInfo;\r\n    switch (selectVal) {\r\n      case \"1min\": {\r\n        fromDateInfo = ts - 60;\r\n        break;\r\n      }\r\n      case \"5min\": {\r\n        fromDateInfo = ts - 300;\r\n        break;\r\n      }\r\n      case \"1h\": {\r\n        fromDateInfo = ts - 3600;\r\n        break;\r\n      }\r\n      case \"1d\": {\r\n        fromDateInfo = ts - 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1w\": {\r\n        fromDateInfo = ts - 7 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1m\": {\r\n        fromDateInfo = ts - 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1y\": {\r\n        fromDateInfo = ts - 12 * 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    fetchTheRequest(\r\n      cdn,\r\n      contentType,\r\n      contentPartner,\r\n      getLocationWithoutState(location), //  location,,\r\n      metric,\r\n      toDate,\r\n      startDate && endDate?fromDate:fromDateInfo,\r\n      aggregationInterval,\r\n      devicePlatform,\r\n      sourceD\r\n    );\r\n  }, [\r\n    cdn,\r\n    contentType,\r\n    contentPartner,\r\n    location,\r\n    metric,\r\n    toDate,\r\n    fromDate,\r\n    aggregationInterval,\r\n    devicePlatform,\r\n    sourceD\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (updatedGraphData) {\r\n      //   setisLoadingData(true);\r\n      let datas = [];\r\n      let time = [];\r\n      const monthNames = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ];\r\n      if (devicePlatform) {\r\n        if (devicePlatform.length === 0) {\r\n          datas =\r\n            updatedGraphData.length > 0\r\n              ? metric && metric.length !== 0\r\n                ? updatedGraphData[0].all[metric]\r\n                : updatedGraphData[0].all.rebuffering_percentage\r\n              : [];\r\n          let timestampArr =\r\n            updatedGraphData.length > 0 && updatedGraphData[0].all.TimeStamp;\r\n          setUnit(\r\n            updatedGraphData.length > 0 ? updatedGraphData[0].all.unit : \"\"\r\n          );\r\n          for (let i = 0; i < timestampArr.length; i++) {\r\n            if (xAxis === \"hour\")\r\n              time.push(\r\n                monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                  \" \" +\r\n                  new Date(timestampArr[i]).getDate() +\r\n                  \",\" +\r\n                  moment(timestampArr[i]).format(\"hh:mm\")\r\n              );\r\n            else if (xAxis === \"date\")\r\n              time.push(\r\n                monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                  \" \" +\r\n                  new Date(timestampArr[i]).getDate()\r\n              );\r\n            else if (xAxis === \"sec\")\r\n              time.push(\r\n                monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                  \" \" +\r\n                  new Date(timestampArr[i]).getDate() +\r\n                  \",\" +\r\n                  new Date(timestampArr[i]).getHours() +\r\n                  \":\" +\r\n                  new Date(timestampArr[i]).getMinutes() +\r\n                  \":\" +\r\n                  new Date(timestampArr[i]).getSeconds()\r\n              );\r\n          }\r\n          setAllGraphPoints(time);\r\n          setMetricGraphPoints(datas);\r\n        } else {\r\n          let androidData;\r\n          let iosData;\r\n          let chromeData;\r\n          let tvData;\r\n          let firestickData;\r\n          let AndroidSmartTvData;\r\n          if (updatedGraphData.message == \"Internal server error.\") {\r\n            return;\r\n          }\r\n          if (devicePlatform.includes(\"Android\")) {\r\n            androidData = updatedGraphData?.find((item) => item.android);\r\n            if (androidData) {\r\n              let datas = [];\r\n              let time = [];\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? androidData.android[metric]\r\n                  : androidData.android.rebuffering_percentage;\r\n\r\n              let timestampArr = androidData.android.TimeStamp;\r\n              setUnit(androidData.android.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      new Date(timestampArr[i]).getHours() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getMinutes() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n\r\n              setAndroidGraphPoints(time);\r\n              setAndroidDataPoints(datas);\r\n            }\r\n          }\r\n          if (devicePlatform.includes(\"iOS\")) {\r\n            iosData = updatedGraphData?.find((item) => item.ios);\r\n            if (iosData) {\r\n              let datas = [];\r\n              let time = [];\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? iosData.ios[metric]\r\n                  : iosData.ios.rebuffering_percentage;\r\n              let timestampArr = iosData.ios.TimeStamp;\r\n              setUnit(iosData.ios.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      new Date(timestampArr[i]).getHours() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getMinutes() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setIosGraphPoints(time);\r\n              setIosDataPoints(datas);\r\n            }\r\n          }\r\n          if (devicePlatform.includes(\"Web\")) {\r\n            chromeData = updatedGraphData?.find((item) => item.web);\r\n            if (chromeData) {\r\n              let datas = [];\r\n              let time = [];\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? chromeData.web[metric]\r\n                  : chromeData.web.rebuffering_percentage;\r\n              let timestampArr = chromeData.web.TimeStamp;\r\n              setUnit(chromeData.web.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      new Date(timestampArr[i]).getHours() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getMinutes() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setChromeGraphPoints(time);\r\n              setChromeDataPoints(datas);\r\n            }\r\n          }\r\n          if (devicePlatform.includes(\"FireTV\")) {\r\n            tvData = updatedGraphData?.find((item) => item.tv);\r\n            if (tvData) {\r\n              let datas = [];\r\n              let time = [];\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? tvData.tv[metric]\r\n                  : tvData.tv.rebuffering_percentage;\r\n              let timestampArr = tvData.tv.TimeStamp;\r\n              setUnit(tvData.tv.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      new Date(timestampArr[i]).getHours() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getMinutes() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setTvGraphPoints(time);\r\n              setTvDataPoints(datas);\r\n            }\r\n          }\r\n          if (devicePlatform.includes(\"Firestick\")) {\r\n            firestickData = updatedGraphData?.find((item) => item.firestick);\r\n            if (firestickData) {\r\n              let datas = [];\r\n              let time = [];\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? firestickData.firestick[metric]\r\n                  : firestickData.firestick.rebuffering_percentage;\r\n              let timestampArr = firestickData.firestick.TimeStamp;\r\n              setUnit(firestickData.firestick.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      new Date(timestampArr[i]).getHours() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getMinutes() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setFirestickGraphPoints(time);\r\n              setFirestickDataPoints(datas);\r\n            }\r\n          }\r\n          if (devicePlatform.includes(\"AndroidSmartTv\")) {\r\n            AndroidSmartTvData = updatedGraphData?.find((item) => item.androidsmarttv);\r\n            if (AndroidSmartTvData) {\r\n              let datas = [];\r\n              let time = [];\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? AndroidSmartTvData.androidsmarttv[metric]\r\n                  : AndroidSmartTvData.androidsmarttv.rebuffering_percentage;\r\n              let timestampArr = AndroidSmartTvData.androidsmarttv.TimeStamp;\r\n              setUnit(AndroidSmartTvData.androidsmarttv.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                      \" \" +\r\n                      new Date(timestampArr[i]).getDate() +\r\n                      \",\" +\r\n                      new Date(timestampArr[i]).getHours() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getMinutes() +\r\n                      \":\" +\r\n                      new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setAndroidSmartTvGraphPoints(time);\r\n              setAndroidSmartTvDataPoints(datas);\r\n            }\r\n          }\r\n          \r\n        }\r\n      }\r\n    }\r\n  }, [updatedGraphData]);\r\n\r\n  useEffect(() => {\r\n    const isEmpty = Object.keys(realdata?.filters).length === 0;\r\n    if (isEmpty) {\r\n      setisMetricsListLoading(true);\r\n      dispatch(getUniqueFilters(dispatch));\r\n      setisMetricsListLoading(false);\r\n    }\r\n  }, [dispatch, realdata?.filters]);\r\n\r\n  useEffect(() => {\r\n    if (!favorite) {\r\n      dispatch(getFavoriteMetrics(dispatch));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const getImage = () => {\r\n    var node = document.querySelector(\".take-screenshot\");\r\n    var options = {\r\n      quality: 1,\r\n      bgcolor: \"#ffffff\",\r\n    };\r\n    domtoimage\r\n      .toPng(node, options)\r\n      .then(function (dataUrl) {\r\n        const a = document.createElement(\"a\");\r\n        a.href = dataUrl;\r\n        a.download = createFileName(\r\n          \"png\",\r\n          `${metric}-${moment().format(\"DD/MM/YYYY\")}`\r\n        );\r\n        a.click();\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong!\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setMetricType(\"\"));\r\n      dispatch(setMetricTypeFullName(\"\"));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      let ts = Math.floor(new Date().getTime() / 1000);\r\n      let fromDateInfo;\r\n      switch (selectVal) {\r\n        case \"1min\": {\r\n          fromDateInfo = ts - 60;\r\n          break;\r\n        }\r\n        case \"5min\": {\r\n          fromDateInfo = ts - 300;\r\n          break;\r\n        }\r\n        case \"1h\": {\r\n          fromDateInfo = ts - 3600;\r\n          break;\r\n        }\r\n        case \"1d\": {\r\n          fromDateInfo = ts - 24 * 3600;\r\n          break;\r\n        }\r\n        case \"1w\": {\r\n          fromDateInfo = ts - 7 * 24 * 3600;\r\n          break;\r\n        }\r\n        case \"1m\": {\r\n          fromDateInfo = ts - 30 * 24 * 3600;\r\n          break;\r\n        }\r\n        case \"1y\": {\r\n          fromDateInfo = ts - 12 * 30 * 24 * 3600;\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n        fetchTheRequest(\r\n          cdn,\r\n          contentType,\r\n          contentPartner,\r\n          getLocationWithoutState(location), //  location,,\r\n          metric,\r\n          startDate ? toDate : ts,\r\n          endDate ? fromDate : fromDateInfo,\r\n          aggregationInterval,\r\n          devicePlatform,\r\n          sourceD\r\n        );\r\n    }, refresh * 1000);\r\n    return () => clearInterval(interval);\r\n  }, [\r\n    refresh,\r\n    cdn,\r\n    contentType,\r\n    contentPartner,\r\n    location,\r\n    metric,\r\n    toDate,\r\n    fromDate,\r\n    aggregationInterval,\r\n    devicePlatform,\r\n    sourceD\r\n  ]);\r\n\r\n  const handle = useFullScreenHandle();\r\n\r\n  let timeGraphDataPoints;\r\n  let fullCombinationGraphPoints = [];\r\n  fullCombinationGraphPoints.push(\r\n    androidGraphPoints,\r\n    iosGraphPoints,\r\n    chromeGraphPoints,\r\n    tvGraphPoints,\r\n    firestickGraphPoints,\r\n    allGraphPoints,\r\n    AndroidSmartTvGraphPoints\r\n  );\r\n  const lengths = fullCombinationGraphPoints.map((a) => a.length);\r\n  const index = lengths.indexOf(Math.max(...lengths));\r\n  timeGraphDataPoints = fullCombinationGraphPoints[index];\r\n  const submit = () => {\r\n    // setSelectVal('')\r\n    setXAxis(\"date\");\r\n    setStartDate(range[0].startDate);\r\n    setEndDate(range[0].endDate);\r\n    setModalOpen(false);\r\n    setToDate(\r\n      Math.floor(moment(range[0].endDate).endOf(\"date\")._d.getTime() / 1000.0)\r\n    );\r\n    setAggregationInterval(\"1d\");\r\n   // setFromDate(Math.floor(range[0].startDate.getTime() / 1000.0));\r\n    // setFromDate(Math.floor(moment(range[0].startDate).endOf(\"date\")._d.getTime() / 1000.0));\r\n\r\n    if (Math.floor(moment(range[0].endDate).endOf(\"date\")._d.getTime() / 1000.0) == Math.floor(moment(range[0].startDate).endOf(\"date\")._d.getTime() / 1000.0)) {\r\n      setFromDate(Math.floor((moment(range[0].startDate).endOf(\"date\")._d.getTime() / 1000.0) - (24 * 3600) + 60))\r\n\r\n    } else {\r\n      setFromDate(Math.floor((moment(range[0].startDate).endOf(\"date\")._d.getTime() / 1000.0) - (24 * 3600) + 60))\r\n    }\r\n  };\r\n\r\n  const getExcelDownload = () => {\r\n    const data = [];\r\n    realdata.mitigationAnalysis.map((aa) => {\r\n      if (Object.keys(aa).includes(\"android\")) {\r\n        return aa[Object.keys(aa)[0]].TimeStamp.map((d, index) => {\r\n          let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n            (f) => f === gettitle\r\n          );\r\n          const heading = key.toString().replace(/_/g, \" \");\r\n          return data.push({\r\n            Platform: Object.keys(aa)[0],\r\n            Timestamp: aa[Object.keys(aa)[0]].TimeStamp[index],\r\n            [heading]: aa[Object.keys(aa)[0]][key][index],\r\n            Unit: aa[Object.keys(aa)[0]].unit,\r\n          });\r\n        });\r\n      } else if (Object.keys(aa).includes(\"ios\")) {\r\n        return aa[Object.keys(aa)[0]].TimeStamp.map((d, index) => {\r\n          let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n            (f) => f === gettitle\r\n          );\r\n          const heading = key.toString().replace(/_/g, \" \");\r\n          return data.push({\r\n            Platform: Object.keys(aa)[0],\r\n            Timestamp: aa[Object.keys(aa)[0]].TimeStamp[index],\r\n            [heading]: aa[Object.keys(aa)[0]][key][index],\r\n            Unit: aa[Object.keys(aa)[0]].unit,\r\n          });\r\n        });\r\n      } else if (Object.keys(aa).includes(\"web\")) {\r\n        return aa[Object.keys(aa)[0]].TimeStamp.map((d, index) => {\r\n          let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n            (f) => f === gettitle\r\n          );\r\n          const heading = key.toString().replace(/_/g, \" \");\r\n          return data.push({\r\n            Platform: Object.keys(aa)[0],\r\n            Timestamp: aa[Object.keys(aa)[0]].TimeStamp[index],\r\n            [heading]: aa[Object.keys(aa)[0]][key][index],\r\n            Unit: aa[Object.keys(aa)[0]].unit,\r\n          });\r\n        });\r\n      } else if (Object.keys(aa).includes(\"tv\")) {\r\n        return aa[Object.keys(aa)[0]].TimeStamp.map((d, index) => {\r\n          let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n            (f) => f === gettitle\r\n          );\r\n          const heading = key.toString().replace(/_/g, \" \");\r\n          return data.push({\r\n            Platform: Object.keys(aa)[0],\r\n            Timestamp: aa[Object.keys(aa)[0]].TimeStamp[index],\r\n            [heading]: aa[Object.keys(aa)[0]][key][index],\r\n            Unit: aa[Object.keys(aa)[0]].unit,\r\n          });\r\n        });\r\n      } else if (Object.keys(aa).includes(\"firestick\")) {\r\n        return aa[Object.keys(aa)[0]].TimeStamp.map((d, index) => {\r\n          let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n            (f) => f === gettitle\r\n          );\r\n          const heading = key.toString().replace(/_/g, \" \");\r\n          return data.push({\r\n            Platform: Object.keys(aa)[0],\r\n            Timestamp: aa[Object.keys(aa)[0]].TimeStamp[index],\r\n            [heading]: aa[Object.keys(aa)[0]][key][index],\r\n            Unit: aa[Object.keys(aa)[0]].unit,\r\n          });\r\n        });\r\n      } else if (Object.keys(aa).includes(\"androidsmarttv\")) {\r\n        return aa[Object.keys(aa)[0]].TimeStamp.map((d, index) => {\r\n          let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n            (f) => f === gettitle\r\n          );\r\n          const heading = key.toString().replace(/_/g, \" \");\r\n          return data.push({\r\n            Platform: Object.keys(aa)[0],\r\n            Timestamp: aa[Object.keys(aa)[0]].TimeStamp[index],\r\n            [heading]: aa[Object.keys(aa)[0]][key][index],\r\n            Unit: aa[Object.keys(aa)[0]].unit,\r\n          });\r\n        });\r\n      } else if (Object.keys(aa).includes(\"all\")) {\r\n        return aa[Object.keys(aa)[0]].TimeStamp.map((d, index) => {\r\n          let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n            (f) => f === gettitle\r\n          );\r\n          const heading = key.toString().replace(/_/g, \" \");\r\n          return data.push({\r\n            Platform: Object.keys(aa)[0],\r\n            Timestamp: aa[Object.keys(aa)[0]].TimeStamp[index],\r\n            [heading]: aa[Object.keys(aa)[0]][key][index],\r\n            Unit: aa[Object.keys(aa)[0]].unit,\r\n          });\r\n        });\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    const fileName = createFileName(\r\n      \"csv\",\r\n      `${metric}-${moment().format(\"DD/MM/YYYY\")}`\r\n    );\r\n    const exportType = exportFromJSON.types.csv;\r\n    exportFromJSON({ data, fileName, exportType });\r\n  };\r\n  const gettitle = metric;\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        <div className='col-md-3'>\r\n          <Paper className='SidePanel'>\r\n            <h3 className='left-menu-title'>MITIGATION ANALYSIS</h3>\r\n            {/* <div className='analysisHeaderRight search-insight-container'>\r\n\t\t\t\t\t\t<i className=\"zmdi zmdi-search\"></i>\r\n\t\t\t\t\t\t<TextField onChange={searchMetricName} id=\"outlined-basic\" className=\"search-insight\" placeholder=\"Search...\" variant=\"outlined\" fullWidth />\r\n\t\t\t\t\t</div> */}\r\n            {/* {!metricsListLoading && metricsList ? ( */}\r\n              <LeftMenu\r\n                updateMetricHeader={updateMetricHeader}\r\n                favorite={favorite}\r\n                leftMenuMetrics={metricsList}\r\n                updateMetric={updateMetric}\r\n              />\r\n            {/* ) : (\r\n              <RctPageLoader />\r\n            )} */}\r\n          </Paper>\r\n        </div>\r\n        <div className='col-md-9 right-insight'>\r\n          <Box sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\r\n            <Paper>\r\n              <div className='graphcontentHead'>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"18px\",\r\n                    fontWeight: 500,\r\n                    textTransform: \"capitalize\",\r\n                  }}\r\n                >\r\n                  {metricHeader}\r\n                </span>\r\n                <Stack direction='row' spacing={1} sx={{ float: \"right\" }}>\r\n                  <IconButton\r\n                    color='primary'\r\n                    aria-label='screenshot'\r\n                    onClick={getImage}\r\n                  >\r\n                     <Tooltip title=\"Take screenshot\" placement=\"bottom\">\r\n                    <CameraAltOutlinedIcon color='disabled' />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                  <IconButton\r\n                    color='secondary'\r\n                    aria-label='download'\r\n                    onClick={getExcelDownload}\r\n                  >\r\n                     <Tooltip title=\"Download File\" placement=\"bottom\">\r\n                    <FileDownloadOutlinedIcon color='disabled' />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                  <IconButton aria-label='fullscreen' onClick={handle.enter}>\r\n                  <Tooltip title=\"Full Screen\" placement=\"bottom\">\r\n                    <FullscreenOutlinedIcon color='disabled' />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                  <Box className='dropdownCont'>\r\n                    <div className='interval-spase'>\r\n                      <FormControl fullWidth className='intervalSelect'>\r\n                        <InputLabel id='intervalSelect'>Interval</InputLabel>\r\n                        <Select\r\n                          labelId='intervalSelect'\r\n                          id='demo-simple-select'\r\n                          value={refresh}\r\n                          label='Interval'\r\n                          onChange={changeRefresh}\r\n                          className='interSelect'\r\n                        >\r\n                          <MenuItem value={10}>10s</MenuItem>\r\n                          <MenuItem value={20}>20s</MenuItem>\r\n                          <MenuItem value={30}>30s</MenuItem>\r\n                          <MenuItem value={40}>40s</MenuItem>\r\n                          <MenuItem value={50}>50s</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n\r\n                      <FormControl fullWidth className='intervalSelect'>\r\n                        <InputLabel id='intervalSelect'>Interval</InputLabel>\r\n                        <Select\r\n                          labelId='intervalSelect'\r\n                          id='demo-simple-select'\r\n                          value={selectVal}\r\n                          label='Interval'\r\n                          onChange={setDataRange}\r\n                          className='interSelect'\r\n                        >\r\n                          {/* <MenuItem value='5min'>5 Minute</MenuItem> */}\r\n                          <MenuItem value='1h'>1 Hour</MenuItem>\r\n                          <MenuItem value='1d'>Day</MenuItem>\r\n                          <MenuItem value='1w'>Week</MenuItem>\r\n                          <MenuItem value='1m'>Month</MenuItem>\r\n                          <MenuItem value='1y'>Year</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                    <div className='dateCont'>\r\n                      <span>Custom Date</span>\r\n                      <TextField\r\n                        onClick={() => setModalOpen(true)}\r\n                        contentEditable={false}\r\n                        value={\r\n                          startDate\r\n                            ? moment(startDate).format(\"DD/MM/YYYY\")\r\n                            : \"\"\r\n                        }\r\n                        placeholder='dd-mm-yyyy'\r\n                      />\r\n                      <Box style={{ \"margin-bottom\": \"0px\" }} sx={{ mx: 2 }}>\r\n                        {\" \"}\r\n                        to{\" \"}\r\n                      </Box>\r\n                      <TextField\r\n                        onClick={() => setModalOpen(true)}\r\n                        contentEditable={false}\r\n                        value={\r\n                          endDate ? moment(endDate).format(\"DD/MM/YYYY\") : \"\"\r\n                        }\r\n                        placeholder='dd-mm-yyyy'\r\n                      />\r\n                    </div>\r\n                    <Modal\r\n                      isOpen={openModal}\r\n                      toggle={() => setModalOpen(false)}\r\n                      centered\r\n                    >\r\n                      <ModalHeader>\r\n                        <h3>Date Picker</h3>\r\n                      </ModalHeader>\r\n                      <ModalBody>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <DateRange\r\n                            onChange={(item) => setRange([item.selection])}\r\n                            ranges={range}\r\n                            editableDateInputs={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            maxDate={new Date()}\r\n                          />\r\n                        </div>\r\n                      </ModalBody>\r\n                      <ModalFooter>\r\n                        <div>\r\n                          <Button\r\n                            onClick={() => setModalOpen(false)}\r\n                            variant='contained'\r\n                            className='btn-danger text-white bg-danger'\r\n                            \r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            onClick={submit}\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className='text-white bg-primary'\r\n                            style={{ marginLeft: 10 }}\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </div>\r\n                      </ModalFooter>\r\n                    </Modal>\r\n                  </Box>\r\n                  <FilterLayout\r\n                    metric={metric}\r\n                    getCdn={getCdn}\r\n                    getContentPartner={getContentPartner}\r\n                    getContentType={getContentType}\r\n                    getLocation={getLocation}\r\n                    getSourceData={getSourceData}\r\n                    savePlatformData={savePlatformData}\r\n                    cdnVal={cdnVal}\r\n                    contentTypeVal={contentTypeVal}\r\n                    contentPartnetVal={contentPartnetVal}\r\n                    locationVal={locationVal}\r\n                    devicePlatform={devicePlatform}\r\n                    contentPartner={contentPartner}\r\n                    contentType={contentType}\r\n                    location={location}\r\n                    sourceData={sourceD}\r\n                    updatePlatformData={updatePlatformData}\r\n                  />\r\n                </Stack>\r\n              </div>\r\n              <div className='take-screenshot'>\r\n                <AppliedFilters\r\n                  attemptsData={[]}\r\n                  videoStartFailuresData={[]}\r\n                  exitBeforeVideoStartsData={[]}\r\n                  succesfullPlaysData={[]}\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                  metric={metric}\r\n                  removeDevicePlatform={removeDevicePlatform}\r\n                  removeContentPartner={removeContentPartner}\r\n                  removeContentType={removeContentType}\r\n                  removeLocation={removeLocation}\r\n                  devicePlatform={devicePlatform}\r\n                  updatePlatformData={updatePlatformData}\r\n                  handleReload={handleReload}\r\n                  removeSource={removeSourceData}\r\n                  contentPartner={contentPartner}\r\n                  contentType={contentType}\r\n                  location={location}\r\n                  selectVal={selectVal}\r\n                  sourceData={sourceD}\r\n                  androidDataPoints={\r\n                    devicePlatform?.includes(\"Android\")\r\n                      ? androidDataPoints\r\n                      : [0]\r\n                  }\r\n                  iosDataPoints={\r\n                    devicePlatform?.includes(\"iOS\") ? iosDataPoints : [0]\r\n                  }\r\n                  chromeDataPoints={\r\n                    devicePlatform?.includes(\"Web\") ? chromeDataPoints : [0]\r\n                  }\r\n                  tvDataPoints={\r\n                    devicePlatform?.includes(\"FireTV\") ? tvDataPoints : [0]\r\n                  }\r\n                  firestickDataPoints={\r\n                    devicePlatform?.includes(\"Firestick\")\r\n                      ? firestickDataPoints\r\n                      : [0]\r\n                  }\r\n                  androidSmartTvDataPoints={\r\n                    devicePlatform?.includes(\"AndroidSmartTv\")\r\n                      ? AndroidSmartTvDataPoints\r\n                      : [0]\r\n                  }\r\n                  androidDataReport= {androidDataPoints ? getReportValue(androidDataPoints?.reduce((partialSum, a) => partialSum + a, 0),androidDataPoints.length):0}\r\n                  iosDataReport={iosDataPoints ? getReportValue(iosDataPoints?.reduce((partialSum, a) => partialSum + a, 0),iosDataPoints.length) : 0}\r\n                  firestickDataReport={firestickDataPoints ? getReportValue(firestickDataPoints?.reduce((partialSum, a) => partialSum + a, 0),firestickDataPoints.length):0}\r\n                  webDataReport={chromeDataPoints ? getReportValue(chromeDataPoints?.reduce((partialSum, a) => partialSum + a, 0),chromeDataPoints.length):0}\r\n                  androidSmartTvReport={AndroidSmartTvDataPoints ? getReportValue(AndroidSmartTvDataPoints?.reduce((partialSum, a) => partialSum + a, 0),AndroidSmartTvDataPoints.length):0}\r\n                  totalDataReport={\r\n                    (androidDataPoints ? getReportValue(androidDataPoints?.reduce((partialSum, a) => partialSum + a, 0),androidDataPoints.length):0)\r\n                    +(iosDataPoints ?  getReportValue(iosDataPoints?.reduce((partialSum, a) => partialSum + a, 0),iosDataPoints.length) : 0)\r\n                    +(firestickDataPoints ? getReportValue(firestickDataPoints?.reduce((partialSum, a) => partialSum + a, 0),firestickDataPoints.length):0)\r\n                    +(chromeDataPoints ? getReportValue(chromeDataPoints?.reduce((partialSum, a) => partialSum + a, 0),chromeDataPoints.length):0)\r\n                    +(AndroidSmartTvDataPoints ? getReportValue(AndroidSmartTvDataPoints?.reduce((partialSum, a) => partialSum + a, 0),AndroidSmartTvDataPoints.length):0)\r\n                  }\r\n\r\n                />\r\n                <FullScreen handle={handle}>\r\n                  <div\r\n                    style={{\r\n                      padding: \"10px\",\r\n                      backgroundColor: \"white\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    {isLoadingData && <RctPageLoader />}\r\n                    <Histogram\r\n                      devicePlatform={devicePlatform}\r\n                      timeGraphDataPoints={timeGraphDataPoints}\r\n                      androidDataPoints={androidDataPoints}\r\n                      iosDataPoints={iosDataPoints}\r\n                      chromeDataPoints={chromeDataPoints}\r\n                      tvDataPoints={tvDataPoints}\r\n                      firestickDataPoints={firestickDataPoints}\r\n                      AndroidSmartTvDataPoints={AndroidSmartTvDataPoints}\r\n                      metricGraphPoints={metricGraphPoints}\r\n                      unit={unit}\r\n                    />\r\n                  </div>\r\n                </FullScreen>\r\n              </div>\r\n            </Paper>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n","import React from \"react\";\r\nimport { Dialog, DialogTitle } from \"@material-ui/core\";\r\n\r\nconst MitigationDialogue = props => {\r\n  const {\r\n    isOpen = false,\r\n    onClose = () => {},\r\n    title = \"\",\r\n    children,\r\n    ...rest\r\n  } = props;\r\n\r\n  const handleClose = event => {\r\n    onClose(event);\r\n  };\r\n\r\n  return (\r\n    \r\n    <div className=\"status-model\"> \r\n    <Dialog className=\"paperDialoge\" onClose={handleClose} open={isOpen}>\r\n      <DialogTitle style={{\"padding\": \"16px 24px 0 21px\"}}>{title}</DialogTitle>\r\n      {children}\r\n    </Dialog>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default MitigationDialogue;\r\n","import React, { useState } from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n} from \"@mui/material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Close, ContactlessOutlined } from \"@material-ui/icons\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport {\r\n  applyManualMitigation,\r\n  getAllMitigation,\r\n  getValidate,\r\n} from \"Store/Actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport MitigationDialogue from \"./mitigationDialogue\";\r\n//import TextField from \"@mui/material/TextField\";\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport { adminMessage, isValidPermission } from \"Constants/constant\";\r\nconst filter = createFilterOptions();\r\n\r\n\r\nconst AnnualMitigation = () => {\r\n  var inputtag = \"\"\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.qoeReducer);\r\n  const [tags, setTags] = useState([]);\r\n  const [platform, setPlatform] = useState([]);\r\n  const [location, setLocation] = useState(null);\r\n\r\n  const [mitigation_status, setMitigation_status] = useState(\"\");\r\n\r\n  const [bufferLength, setBufferLength] = useState(0);\r\n  const [rebufferDuration, setRebufferDuration] = useState(0);\r\n  const [bitrate, setBitrate] = useState(0);\r\n\r\n  const [bottom, setBottom] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [ids, setIds] = useState([]);\r\n  const [apply, setApply] = useState(false);\r\n  const [configure, setConfigure] = useState(false);\r\n  const [selectAllCheckbox, setSelectAllCheckbox] = useState(false);\r\n  const [clickOnValidate, setClickOnValidate] = useState(false);\r\n  const [uei_conditionDd, setuei_conditionDd] = useState(\"\");\r\n  const [uei_condition, setuei_condition] = useState(\"\");\r\n  const [rebufferDurationFilterDd, setRebufferDurationFilterDd] = useState(\"\");\r\n  const [rebufferDurationFilter, setRebufferDurationFilter] = useState(\"\");\r\n  const [startBufferLengthFilterDd, setstartBufferLengthFilterDd] = useState(\"\");\r\n  const [startBufferLengthFilter, setstartBufferLengthFilter] = useState(\"\");\r\n  const [startBitrateFilterDd, setstartBitrateFilterDd] = useState(\"\");\r\n  const [startBitrateFilter, setstartBitrateFilter] = useState(\"\");\r\n  const [stallCountFilterDd, setstallCountFilterDd] = useState(\"\");\r\n  const [stallCountFilter, setstallCountFilter] = useState(\"\");\r\n\r\n  const exceptThisSymbols = [\"e\", \"E\", \"+\", \"-\", \".\"];\r\n  const KeyCodes = {\r\n    comma: 188,\r\n    enter: 13,\r\n  };\r\n  const delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n  const [mobileMenu, setFilterMenu] = useState(false);\r\n  const stylee = {\r\n    color: \"white\",\r\n    background: \"#1992fb\",\r\n    width: \"100px\",\r\n    height: \"28px\",\r\n    fontSize: \"1rem\",\r\n    fontWeigth: \"600\",\r\n  };\r\n\r\n  const handleDelete = (i) => {\r\n    setTags(tags.filter((tag, index) => index !== i));\r\n  };\r\n  const handleAddition = (tag) => {\r\n    setTags([...tags, tag]);\r\n  };\r\n  const handleTagClick = (index) => {\r\n\r\n  };\r\n  const handleInputChange = (val) => {\r\n    inputtag = val\r\n  }\r\n\r\n  const cityarray = [];\r\n  for (var key in data?.cities) {\r\n    if (data?.cities.hasOwnProperty(key)) {\r\n      if (data?.cities[key] != NaN) {\r\n        var nameabcd = data?.cities[key].toString();\r\n        var nameed = ([] = nameabcd.split(\",\"));\r\n        for (let j of nameed) {\r\n          //cityarray.push(j+\"(\"+key+\")\")\r\n          cityarray.push(j);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const validate = () => {\r\n    setIds([]);\r\n    setSelectAllCheckbox(false);\r\n    //  setRebufferDuration();\r\n    //  setBitrate();\r\n    //  setBufferLength();\r\n    // setClickOnValidate(true);\r\n    // if (mitigation_status && uei_condition) {\r\n    //setFilterMenu(false)\r\n    // setConfigure(false)\r\n\r\n    if (\r\n      inputtag ||\r\n      tags.length ||\r\n      platform.length ||\r\n      location ||\r\n      mitigation_status ||\r\n      uei_condition ||\r\n      rebufferDurationFilterDd ||\r\n      startBufferLengthFilterDd ||\r\n      startBitrateFilterDd ||\r\n      stallCountFilterDd\r\n    ) {\r\n     // setFilterMenu(false);\r\n\r\n      setLoading(true);\r\n      let totalTag = [];\r\n      tags.length > 0 &&\r\n        tags.map((t) => {\r\n          return totalTag.push(t.text);\r\n        });\r\n      let uei_conditionss = uei_conditionDd + \" \" + uei_condition;\r\n      let rebuffering_duration =\r\n        rebufferDurationFilterDd + \" \" + rebufferDurationFilter;\r\n      let startup_buffer_length =\r\n        startBufferLengthFilterDd + \" \" + startBufferLengthFilter;\r\n      let start_bitrate = startBitrateFilterDd + \" \" + startBitrateFilter;\r\n      let stall_count = stallCountFilterDd + \" \" + stallCountFilter;\r\n\r\n      dispatch(\r\n        getValidate(\r\n          totalTag.length == 0 ? (inputtag == \"\" ? [] : [inputtag]) : totalTag,\r\n          platform,\r\n          location,\r\n          mitigation_status,\r\n          uei_conditionss.trim(),\r\n          rebuffering_duration.trim(),\r\n          startup_buffer_length.trim(),\r\n          start_bitrate.trim(),\r\n          stall_count.trim(),\r\n          dispatch,\r\n          (val) => {\r\n            if (!val.error) {\r\n              setTags([]);\r\n              setFilterMenu(false);\r\n              setLoading(false);\r\n              setBottom(true);\r\n              localStorage.setItem(\"mitigation_status\", mitigation_status);\r\n              localStorage.setItem(\"uei_condition\", uei_conditionss);\r\n            } else {\r\n              NotificationManager.error(val.message, \"\", 400);\r\n              setLoading(false);\r\n            }\r\n          }\r\n        )\r\n      );\r\n    } else {\r\n      NotificationManager.error(\"Please Enter UEID/PLATFORM/LOCATION\", '', 2000);\r\n    }\r\n    // }\r\n  };\r\n  const selectPlatform = (type) => {\r\n    if (platform.indexOf(type) >= 0) {\r\n      const info = platform.filter((p) => p !== type);\r\n      setPlatform(info);\r\n    } else {\r\n      setPlatform((p) => p.concat(type));\r\n    }\r\n  };\r\n  const locationHandler = (e) => {\r\n    setLocation(e.target.value);\r\n  };\r\n  const Mitigation_statusHandler = (e) => {\r\n    setMitigation_status(e.target.value);\r\n  };\r\n  const UEIHandler = (e) => {\r\n    setuei_conditionDd(e.target.value);\r\n  };\r\n  const RebufferingHandler = (e) => {\r\n    setRebufferDurationFilterDd(e.target.value);\r\n  };\r\n  const StartBufferHandler = (e) => {\r\n    setstartBufferLengthFilterDd(e.target.value);\r\n  };\r\n  const StartBitrateHandler = (e) => {\r\n    setstartBitrateFilterDd(e.target.value);\r\n  };\r\n  const StallCountHandler = (e) => {\r\n    setstallCountFilterDd(e.target.value);\r\n  };\r\n  const clearAll = () => {\r\n    setClickOnValidate(false);\r\n    setLocation(\"\");\r\n    setMitigation_status(\"\");\r\n    setuei_conditionDd(\"\");\r\n    setuei_condition(\"\");\r\n    setTags([]);\r\n    setPlatform([]);\r\n    setRebufferDurationFilterDd(\"\");\r\n    setstartBufferLengthFilterDd(\"\");\r\n    setstartBitrateFilterDd(\"\");\r\n    setstallCountFilterDd(\"\");\r\n    setRebufferDurationFilter(\"\");\r\n    setstartBufferLengthFilter(\"\");\r\n    setstartBitrateFilter(\"\");\r\n    setstallCountFilter(\"\");\r\n  };\r\n  const onChangeCheckbox = (data) => {\r\n    setSelectAllCheckbox(false);\r\n    const currentIndex = ids.indexOf(data.device_id);\r\n    const newChecked = [...ids];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(data.device_id);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setIds(newChecked);\r\n  };\r\n  const applyManualMiti = () => {\r\n    //  ids.length > 0 && setApply(true)\r\n    setClickOnValidate(false);\r\n    ids.length > 0 && setConfigure(true);\r\n  };\r\n  const clickOnConfirm = async () => {\r\n    dispatch(\r\n      applyManualMitigation(ids, () => {\r\n        setTimeout(() => {\r\n          dispatch(\r\n            getAllMitigation(\r\n              dispatch,\r\n              Math.floor(new Date().getTime() / 1000.0),\r\n              Math.floor(new Date().getTime() / 1000.0) - 24 * 3600\r\n            )\r\n          );\r\n        }, 1000*60*2);\r\n        dispatch(\r\n          getAllMitigation(\r\n            dispatch,\r\n            Math.floor(new Date().getTime() / 1000.0),\r\n            Math.floor(new Date().getTime() / 1000.0) - 24 * 3600\r\n          )\r\n        );\r\n\r\n\r\n      })\r\n    );\r\n    setApply(false);\r\n    //setConfigure(false)\r\n    setBottom(false);\r\n    setConfigure(false);\r\n\r\n    localStorage.setItem(\"startup_buffer_length\", \"\");\r\n    localStorage.setItem(\"start_bit_rate\", \"\");\r\n    localStorage.setItem(\"rebuffer_duration\", \"\");\r\n    setBitrate(0);\r\n    setRebufferDuration(0);\r\n    setBufferLength(0);\r\n  };\r\n\r\n  const clickOnApply = () => {\r\n   // validation of 2 to the power 62..reference--https://www.meracalculator.com/math/exponents.php\r\n    if(bufferLength >= 4611686018427388000 || rebufferDuration >= 4611686018427388000 || bitrate >= 4611686018427388000){\r\n      NotificationManager.error(\"Please Enter valide number its too large\");\r\n      return ;\r\n    }\r\n    \r\n    if (bufferLength && rebufferDuration && bitrate) {\r\n      localStorage.setItem(\"startup_buffer_length\", bufferLength);\r\n      localStorage.setItem(\"start_bit_rate\", bitrate);\r\n      localStorage.setItem(\"rebuffer_duration\", rebufferDuration);\r\n      setApply(true);\r\n\r\n      // setIds([]);\r\n    } else {\r\n      setClickOnValidate(true);\r\n      NotificationManager.error(\"Please Enter all the data\");\r\n    }\r\n  };\r\n\r\n  const manualStyle = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const manualStylee = {\r\n    color: \"white\",\r\n    background: \"#1992fb\",\r\n    width: \"83px\",\r\n    height: \"28px\",\r\n    fontSize: \"1rem\",\r\n    fontWeigth: \"100\",\r\n  };\r\n  const manualStyleeCancele = {\r\n    color: \"#020202\",\r\n    width: \"83px\",\r\n    height: \"28px\",\r\n    fontSize: \"1rem\",\r\n    border: \"1px solid #1992fb\",\r\n    marginRight: \"10px\",\r\n  };\r\n\r\n  //To handle selecting and removing  all filtered results\r\n  const selectAll = () => {\r\n    setSelectAllCheckbox(!selectAllCheckbox);\r\n    let all = [];\r\n    if (!selectAllCheckbox) {\r\n      data?.mitigation?.map((m) => {\r\n        return all.push(m.device_id);\r\n      });\r\n      setIds(all);\r\n    } else if (selectAllCheckbox) {\r\n      all = [];\r\n      setIds([]);\r\n    }\r\n  };\r\n\r\n  const preventMinus = (e) => {\r\n    if (e.code === \"Minus\" || e.code == \"e\" || e.code == \"E\") {\r\n      e.preventDefault();\r\n    } else {\r\n      exceptThisSymbols.includes(e.key) && e.preventDefault();\r\n    }\r\n  };\r\n  const preventPasteNegative = (e) => {\r\n    const clipboardData = e.clipboardData || window.clipboardData;\r\n    const pastedData = parseFloat(clipboardData.getData(\"text\"));\r\n\r\n    if (pastedData < 0) {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n  \r\n  const openMenuFIlter=()=>{\r\n    if(isValidPermission(\"WRITE_MITIGATION\")){\r\n      setFilterMenu(true)\r\n    }else{\r\n      NotificationManager.error(adminMessage.message)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='FilterContainer'>\r\n      <Grid  item xs={12} md={12} onClick={() => openMenuFIlter()}>\r\n        <h5>\r\n          APPLY MANUAL MITIGATION <i className='zmdi zmdi-plus'></i>\r\n        </h5>\r\n      </Grid>\r\n      <Drawer\r\n        open={mobileMenu}\r\n        onClose={() => setFilterMenu(false)}\r\n        anchor={\"right\"}\r\n      >\r\n        <div style={{ width: \"480px\" }}>\r\n          <div className='SideBarHeader' style={{ marginBottom: \"-10px\" }}>\r\n            <h3>MITIGATION</h3>\r\n            <IconButton onClick={() => setFilterMenu(false)}>\r\n              {\" \"}\r\n              <Close />\r\n            </IconButton>\r\n          </div>\r\n          <div\r\n            style={{ padding: \"10px\" }}\r\n            sx={{\r\n              \"& .MuiTextField-root\": { m: 1, height: \"25px\" },\r\n            }}\r\n          >\r\n            <Box\r\n              component='form'\r\n              sx={{\r\n                \"& .MuiTextField-root\": { m: 1, width: \"25px\" },\r\n              }}\r\n              noValidate\r\n              autoComplete='off'\r\n              style={{ marginBottom: \"2px\" }}\r\n            >\r\n              <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n                <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                  {\" \"}\r\n                  Enter UEID/RMN, Single or Multiple and (<b>Press Enter</b>)\r\n                </h3>\r\n                <ReactTags\r\n                  classNames={{\r\n                    tags: \"tagsClass\",\r\n                    tagInput: \"tagInputClass\",\r\n                    tagInputField: \"tagInputFieldClass\",\r\n                    selected: \"selectedClass\",\r\n                    tag: \"tagClass\",\r\n                    remove: \"removeClass\",\r\n                    suggestions: \"suggestionsClass\",\r\n                    activeSuggestion: \"activeSuggestionClass\",\r\n                    editTagInput: \"editTagInputClass\",\r\n                    editTagInputField: \"editTagInputField\",\r\n                    clearAll: \"clearAllClass\",\r\n                  }}\r\n                  tags={tags}\r\n                  delimiters={delimiters}\r\n                  handleDelete={handleDelete}\r\n                  handleAddition={handleAddition}\r\n                  handleTagClick={handleTagClick}\r\n                  handleInputChange={handleInputChange}\r\n                  autocomplete\r\n                  allowDragDrop={false}\r\n                  placeholder='Enter UEID or RMN and Press Enter'\r\n                  inputFieldPosition='inline'\r\n                />\r\n              </ListItem>\r\n            </Box>\r\n            <List dense className='filtersCont'>\r\n              <ListItem style={{ display: \"block\", marginTop: \"7px\" }}>\r\n                <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>Platform</h3>\r\n                <div className='filter-wrap'>\r\n                  {/* <Button onClick={() => selectPlatform('Chrome')} className={platform.indexOf('Chrome') >= 0 ? 'Filter-active' : 'Filter-inactive'} variant=\"outlined\" size=\"small\" value=\"Chrome\" >Chrome</Button> */}\r\n                  {/* <Button onClick={() => selectPlatform('Windows')} className={platform.indexOf('Windows') >= 0 ? 'Filter-active' : 'Filter-inactive'} variant=\"outlined\" size=\"small\" value=\"Windows\" >Windows</Button> */}\r\n                  <Button\r\n                    onClick={() => selectPlatform(\"Android\")}\r\n                    className={\r\n                      platform.indexOf(\"Android\") >= 0\r\n                        ? \"Filter-active\"\r\n                        : \"Filter-inactive\"\r\n                    }\r\n                    variant='outlined'\r\n                    size='small'\r\n                    value='Android'\r\n                  >\r\n                    Android\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => selectPlatform(\"iOS\")}\r\n                    className={\r\n                      platform.indexOf(\"iOS\") >= 0\r\n                        ? \"Filter-active\"\r\n                        : \"Filter-inactive\"\r\n                    }\r\n                    variant='outlined'\r\n                    size='small'\r\n                    value='iOS'\r\n                  >\r\n                    IOS\r\n                  </Button>\r\n                  {/* <Button\r\n                    onClick={() => selectPlatform(\"TV\")}\r\n                    className={\r\n                      platform.indexOf(\"TV\") >= 0\r\n                        ? \"Filter-active\"\r\n                        : \"Filter-inactive\"\r\n                    }\r\n                    variant='outlined'\r\n                    size='small'\r\n                    value='TV'\r\n                  >\r\n                    TV\r\n                  </Button> */}\r\n                  <Button\r\n                    onClick={() => selectPlatform(\"Firestick\")}\r\n                    className={\r\n                      platform.indexOf(\"Firestick\") >= 0\r\n                        ? \"Filter-active\"\r\n                        : \"Filter-inactive\"\r\n                    }\r\n                    variant='outlined'\r\n                    size='small'\r\n                    value='Firestick'\r\n                  >\r\n                    Firestick\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => selectPlatform(\"Web\")}\r\n                    className={\r\n                      platform.indexOf(\"Web\") >= 0\r\n                        ? \"Filter-active\"\r\n                        : \"Filter-inactive\"\r\n                    }\r\n                    variant='outlined'\r\n                    size='small'\r\n                    value='Web'\r\n                  >\r\n                    Web\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => selectPlatform(\"AndroidSmartTv\")}\r\n                    className={\r\n                      platform.indexOf(\"AndroidSmartTv\") >= 0\r\n                        ? \"Filter-active\"\r\n                        : \"Filter-inactive\"\r\n                    }\r\n                    variant='outlined'\r\n                    size='small'\r\n                    value='Web'\r\n                  >\r\n                    AndroidSmartTv\r\n                  </Button>\r\n                </div>\r\n              </ListItem>\r\n              <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n                <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                  {\" \"}\r\n                  Location\r\n                </h3>\r\n\r\n                <FormControl fullWidth>\r\n                 \r\n                  <Autocomplete\r\n                    value={location}\r\n                    onChange={(event, newValue) => {\r\n                      const results = cityarray.filter((a) =>\r\n                      a.toLowerCase().includes(newValue.toLowerCase())\r\n                    );\r\n                      if (typeof newValue === 'string') {\r\n                        setLocation(\r\n                          results,\r\n                        );\r\n                      } else if (newValue && newValue.inputValue) {\r\n                        // Create a new value from the user input\r\n                        setLocation(\r\n                          results,\r\n                        );\r\n                      } else {\r\n                        setLocation(results);\r\n                      }\r\n                    }}\r\n                    filterOptions={(options, params) => {\r\n                      const filtered = filter(options, params);\r\n\r\n                      const { inputValue } = params;\r\n                      // Suggest the creation of a new value\r\n                      const isExisting = options.some((option) => inputValue === option.title);\r\n                      if (inputValue !== '' && !isExisting) {\r\n                        filtered.push(inputValue);\r\n                      }\r\n                      return filtered;\r\n                    }}\r\n                    selectOnFocus\r\n                    clearOnBlur\r\n                    handleHomeEndKeys\r\n                    id=\"free-solo-with-text-demo\"\r\n                    className='add-border-location'\r\n                    options={cityarray}\r\n                    getOptionLabel={(option) => {\r\n                      // Value selected with enter, right from the input\r\n                      if (typeof option === 'string') {\r\n                        return option;\r\n                      }\r\n                      // Add \"xxx\" option created dynamically\r\n                      if (option.inputValue) {\r\n                        return option.inputValue;\r\n                      }\r\n                      // Regular option\r\n                      return option;\r\n                    }}\r\n                    renderOption={(props, option) =>\r\n                    //   const results = cityarray.filter((a) =>\r\n                    //   a.toLowerCase().includes(option.toLowerCase())\r\n                    // );\r\n                       <li {...props}>{option}</li>\r\n                      }\r\n                    freeSolo\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} label=\"\" \r\n                      style={{\r\n                        paddingLeft: \"0px\",\r\n                        fontSize: \"15px\",\r\n                        paddingRight: \"0px\",\r\n\r\n                      }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </FormControl>\r\n              </ListItem>\r\n\r\n              <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n                <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                  Mitigation status\r\n                </h3>\r\n                <FormControl fullWidth>\r\n                  <Select\r\n                    value={mitigation_status}\r\n                    labelId='demo-simple-select-label'\r\n                    id='demo-simple-select'\r\n                    variant='outlined'\r\n                    style={{ height: \"40px\" }}\r\n                    onChange={Mitigation_statusHandler}\r\n                  >\r\n                    <MenuItem key='DISPATCHED' value='DISPATCHED'>\r\n                      DISPATCHED\r\n                    </MenuItem>\r\n                    <MenuItem key='MISSED' value='MISSED'>\r\n                      MISSED\r\n                    </MenuItem>\r\n                    <MenuItem key='FIXED' value='FIXED'>\r\n                      FIXED\r\n                    </MenuItem>\r\n                    <MenuItem key='PENDING' value='Pending'>\r\n                      PENDING\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </ListItem>\r\n\r\n              <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n                <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                  {\" \"}\r\n                  UEI Condition\r\n                </h3>\r\n\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <Select\r\n                        value={uei_conditionDd}\r\n                        labelId='demo-simple-select-label'\r\n                        id='demo-simple-select'\r\n                        variant='outlined'\r\n                        style={{ height: \"40px\" }}\r\n                        onChange={UEIHandler}\r\n                      >\r\n                        <MenuItem key='>=' value='>='>\r\n                          &gt;=\r\n                        </MenuItem>\r\n                        <MenuItem key='<=' value='<='>\r\n                          &#60;=\r\n                        </MenuItem>\r\n                        <MenuItem key='>' value='>'>\r\n                          &gt;\r\n                        </MenuItem>\r\n                        <MenuItem key='<' value='<'>\r\n                          {\" \"}\r\n                          &#60;\r\n                        </MenuItem>\r\n                        <MenuItem key='=' value='='>\r\n                          =\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={6}>\r\n                    <TextField\r\n                      value={uei_condition}\r\n                      id='outlined-basic'\r\n                      label=''\r\n                      variant='outlined'\r\n                      size='small'\r\n                      type={\"number\"}\r\n                      style={{\r\n                        background: \"#f7f7f7\",\r\n                        border: \"1\",\r\n                        borderRadius: \"4px\",\r\n                        width: \"100%\",\r\n                      }}\r\n                      onChange={(e) => setuei_condition(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n              <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n                <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                  {\" \"}\r\n                  Rebufferring Duration\r\n                </h3>\r\n\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <Select\r\n                        value={rebufferDurationFilterDd}\r\n                        labelId='demo-simple-select-label'\r\n                        id='demo-simple-select'\r\n                        variant='outlined'\r\n                        style={{ height: \"40px\" }}\r\n                        onChange={RebufferingHandler}\r\n                      >\r\n                        <MenuItem key='>=' value='>='>\r\n                          &gt;=\r\n                        </MenuItem>\r\n                        <MenuItem key='<=' value='<='>\r\n                          &#60;=\r\n                        </MenuItem>\r\n                        <MenuItem key='>' value='>'>\r\n                          &gt;\r\n                        </MenuItem>\r\n                        <MenuItem key='<' value='<'>\r\n                          {\" \"}\r\n                          &#60;\r\n                        </MenuItem>\r\n                        <MenuItem key='=' value='='>\r\n                          =\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={6}>\r\n                    <TextField\r\n                      value={rebufferDurationFilter}\r\n                      id='outlined-basic'\r\n                      label=''\r\n                      variant='outlined'\r\n                      size='small'\r\n                      type={\"number\"}\r\n                      style={{\r\n                        background: \"#f7f7f7\",\r\n                        border: \"1\",\r\n                        borderRadius: \"4px\",\r\n                        width: \"100%\",\r\n                      }}\r\n                      onChange={(e) =>\r\n                        setRebufferDurationFilter(e.target.value)\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n                <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                  Startup Buffer Length\r\n                </h3>\r\n\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <Select\r\n                        value={startBufferLengthFilterDd}\r\n                        labelId='demo-simple-select-label'\r\n                        id='demo-simple-select'\r\n                        variant='outlined'\r\n                        style={{ height: \"40px\" }}\r\n                        onChange={StartBufferHandler}\r\n                      >\r\n                        <MenuItem key='>=' value='>='>\r\n                          &gt;=\r\n                        </MenuItem>\r\n                        <MenuItem key='<=' value='<='>\r\n                          &#60;=\r\n                        </MenuItem>\r\n                        <MenuItem key='>' value='>'>\r\n                          &gt;\r\n                        </MenuItem>\r\n                        <MenuItem key='<' value='<'>\r\n                          {\" \"}\r\n                          &#60;\r\n                        </MenuItem>\r\n                        <MenuItem key='=' value='='>\r\n                          =\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={6}>\r\n                    <TextField\r\n                      value={startBufferLengthFilter}\r\n                      id='outlined-basic'\r\n                      label=''\r\n                      variant='outlined'\r\n                      size='small'\r\n                      type={\"number\"}\r\n                      style={{\r\n                        background: \"#f7f7f7\",\r\n                        border: \"1\",\r\n                        borderRadius: \"4px\",\r\n                        width: \"100%\",\r\n                      }}\r\n                      onChange={(e) =>\r\n                        setstartBufferLengthFilter(e.target.value)\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n              <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n                <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                  Startup Bitrate\r\n                </h3>\r\n\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <Select\r\n                        value={startBitrateFilterDd}\r\n                        labelId='demo-simple-select-label'\r\n                        id='demo-simple-select'\r\n                        variant='outlined'\r\n                        style={{ height: \"40px\" }}\r\n                        onChange={StartBitrateHandler}\r\n                      >\r\n                        <MenuItem key='>=' value='>='>\r\n                          &gt;=\r\n                        </MenuItem>\r\n                        <MenuItem key='<=' value='<='>\r\n                          &#60;=\r\n                        </MenuItem>\r\n                        <MenuItem key='>' value='>'>\r\n                          &gt;\r\n                        </MenuItem>\r\n                        <MenuItem key='<' value='<'>\r\n                          {\" \"}\r\n                          &#60;\r\n                        </MenuItem>\r\n                        <MenuItem key='=' value='='>\r\n                          =\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={6}>\r\n                    <TextField\r\n                      value={startBitrateFilter}\r\n                      id='outlined-basic'\r\n                      label=''\r\n                      variant='outlined'\r\n                      size='small'\r\n                      type={\"number\"}\r\n                      style={{\r\n                        background: \"#f7f7f7\",\r\n                        border: \"1\",\r\n                        borderRadius: \"4px\",\r\n                        width: \"100%\",\r\n                      }}\r\n                      onChange={(e) => setstartBitrateFilter(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n              <ListItem style={{ display: \"block\", marginTop: \"10px\" }}>\r\n                <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                  Stall Count\r\n                </h3>\r\n\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <Select\r\n                        value={stallCountFilterDd}\r\n                        labelId='demo-simple-select-label'\r\n                        id='demo-simple-select'\r\n                        variant='outlined'\r\n                        style={{ height: \"40px\" }}\r\n                        onChange={StallCountHandler}\r\n                      >\r\n                        <MenuItem key='>=' value='>='>\r\n                          &gt;=\r\n                        </MenuItem>\r\n                        <MenuItem key='<=' value='<='>\r\n                          &#60;=\r\n                        </MenuItem>\r\n                        <MenuItem key='>' value='>'>\r\n                          &gt;\r\n                        </MenuItem>\r\n                        <MenuItem key='<' value='<'>\r\n                          {\" \"}\r\n                          &#60;\r\n                        </MenuItem>\r\n                        <MenuItem key='=' value='='>\r\n                          =\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={6}>\r\n                    <TextField\r\n                      value={stallCountFilter}\r\n                      id='outlined-basic'\r\n                      label=''\r\n                      variant='outlined'\r\n                      size='small'\r\n                      type={\"number\"}\r\n                      style={{\r\n                        background: \"#f7f7f7\",\r\n                        border: \"1\",\r\n                        borderRadius: \"4px\",\r\n                        width: \"100%\",\r\n                      }}\r\n                      onChange={(e) => setstallCountFilter(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"flex-end\",\r\n                  alignItems: \"center\",\r\n                  marginTop: \"10px\",\r\n                  marginRight: \"14px\",\r\n                }}\r\n              >\r\n                <MatButton\r\n                  onClick={clearAll}\r\n                  className='Status-btn'\r\n                  style={{\r\n                    fontSize: \"0.875rem\",\r\n                    color: \"#008eff\",\r\n                    width: \"100px\",\r\n                    height: \"28px\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  {\"CLEAR ALL\"}\r\n                </MatButton>\r\n                {loading ? (\r\n                  <h4>Loading...</h4>\r\n                ) : (\r\n                  <MatButton onClick={validate} style={stylee}>\r\n                    {\"Validate\"}\r\n                  </MatButton>\r\n                )}\r\n              </div>\r\n            </List>\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n\r\n      <Drawer\r\n        anchor='bottom'\r\n        open={bottom}\r\n        onClose={() => setBottom(false)}\r\n        className='drawer-mitigation'\r\n      >\r\n        <div className='drawer-header'>\r\n          <span>\r\n            {\" \"}\r\n            <i\r\n              onClick={() => setBottom(false)}\r\n              className='zmdi zmdi-arrow-left'\r\n            ></i>{\" \"}\r\n            Manual Mitigation Impacted Devices ({data?.mitigation?.length})\r\n          </span>\r\n          <i onClick={() => setBottom(false)} className='zmdi zmdi-close'></i>\r\n        </div>\r\n        <TableContainer>\r\n          <Table sx={{ minWidth: 650 }}>\r\n            <TableHead\r\n              style={{ backgroundColor: \"#ffffff\", borderBottom: \"#ffffff\" }}\r\n            >\r\n              <TableRow\r\n                style={{\r\n                  borderBottom: \"1px solid white\",\r\n                  color: \"rgb(151 151 151 / 87%)\",\r\n                }}\r\n                sx={{ border: 0 }}\r\n              >\r\n                <TableCell></TableCell>\r\n                <TableCell>Device</TableCell>\r\n                <TableCell>UEI</TableCell>\r\n                <TableCell>Rebuffering Duration</TableCell>\r\n                <TableCell>Stall</TableCell>\r\n                <TableCell>Startup Buffer Length</TableCell>\r\n                <TableCell>Start Bitrate</TableCell>\r\n                <TableCell>Location</TableCell>\r\n                <TableCell>Platform</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            {data?.mitigation &&\r\n              data?.mitigation?.length > 0 &&\r\n              data?.mitigation?.map((data, index) => {\r\n                return (\r\n                  <TableRow\r\n                    key={index}\r\n                    style={{ backgroundColor: \"#ffffff\", borderBottom: \"0px\" }}\r\n                  >\r\n                    <TableCell>\r\n                      <Checkbox\r\n                        onChange={() => onChangeCheckbox(data)}\r\n                        edge='start'\r\n                        checked={ids.indexOf(data.device_id) !== -1}\r\n                        disableRipple\r\n                        size='small'\r\n                        sx={{ minWidth: \"18px\" }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{data?.device_id}</TableCell>\r\n                    <TableCell>{parseFloat(data?.current_uei)}</TableCell>\r\n                    <TableCell>{data?.rebuffering_duration}</TableCell>\r\n                    <TableCell>{data?.stall_count}</TableCell>\r\n                    <TableCell>\r\n                      {data?.startup_buffer_length == \"\"\r\n                        ? \"NA\"\r\n                        : data?.startup_buffer_length}\r\n                    </TableCell>\r\n                    <TableCell>{data?.start_bitrate}</TableCell>\r\n                    <TableCell>{data?.location}</TableCell>\r\n                    <TableCell>{data?.platform}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <div className='apply-container'>\r\n          <Checkbox\r\n            onChange={() => selectAll()}\r\n            checked={selectAllCheckbox}\r\n            edge='start'\r\n            disableRipple\r\n            size='small'\r\n            sx={{ minWidth: \"18px\" }}\r\n          />\r\n          <MatButton className='apply-filter-btn'> Select All </MatButton>\r\n          {/* <MatButton\r\n            onClick={() => {\r\n              setIds([])\r\n              setSelectAllCheckbox(false)\r\n            }}\r\n            className=\"apply-filter-btn\">\r\n            Remove\r\n          </MatButton> */}\r\n\r\n          <MatButton\r\n            onClick={applyManualMiti}\r\n            className='apply-btn'\r\n            style={{\r\n              fontSize: \"0.875rem\",\r\n              color: \"#008eff\",\r\n              width: \"100px\",\r\n              height: \"28px\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            Configure\r\n          </MatButton>\r\n        </div>\r\n      </Drawer>\r\n\r\n      <Modal\r\n        open={apply}\r\n        onClose={() => {\r\n          setApply(false);\r\n          setRebufferDuration(0);\r\n          setBitrate(0);\r\n          setBufferLength(0);\r\n        }}\r\n        aria-labelledby='modal-modal-title'\r\n        aria-describedby='modal-modal-description'\r\n      >\r\n        <Box sx={manualStyle}>\r\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n            Are you sure you want to apply Mitigations?\r\n          </Typography>\r\n          <p>Number of session : {ids.length}</p>\r\n          <p>\r\n            Start Buffer Length :{\" \"}\r\n            {localStorage.getItem(\"startup_buffer_length\")}\r\n          </p>\r\n          <p>\r\n            Rebuffering Duration : {localStorage.getItem(\"rebuffer_duration\")}\r\n          </p>\r\n          <p>Start Bitrate : {localStorage.getItem(\"start_bit_rate\")}</p>\r\n          <div style={{ float: \"right\", marginTop: \"10px\" }}>\r\n            <MatButton\r\n              onClick={() => {\r\n                setApply(false);\r\n                // setBitrate(0);\r\n                // setRebufferDuration(0);\r\n                // setBufferLength(0);\r\n              }}\r\n              className='Status-btn'\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                color: \"#008eff\",\r\n                width: \"83px\",\r\n                height: \"28px\",\r\n                fontWeight: \"100\",\r\n              }}\r\n            >\r\n              {\"No\"}\r\n            </MatButton>\r\n            <MatButton onClick={clickOnConfirm} style={manualStylee}>\r\n              {\"Yes\"}\r\n            </MatButton>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n\r\n      <MitigationDialogue\r\n        assetid=''\r\n        title='Mitigations'\r\n        isOpen={configure}\r\n        onClose={() => {\r\n          setConfigure(false);\r\n          setBitrate(0);\r\n          setRebufferDuration(0);\r\n          setBufferLength(0);\r\n        }}\r\n      >\r\n        <Paper style={{ padding: \"0 2em 2em 2em\" }}>\r\n          <div>\r\n            <ListItem style={{ display: \"block\", marginTop: \"15px\" }}>\r\n              <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                {\" \"}\r\n                Startup Buffer Length\r\n              </h3>\r\n              <TextField\r\n                value={bufferLength}\r\n                id='outlined-basic'\r\n                label=''\r\n                variant='outlined'\r\n                size='small'\r\n                type={\"number\"}\r\n                min='0'\r\n                style={{\r\n                  background: \"#f7f7f7\",\r\n                  border: \"1\",\r\n                  borderRadius: \"4px\",\r\n                  width: \"100%\",\r\n                }}\r\n                onChange={(e) => {\r\n                  const re = /^[0-9\\b]+$/;\r\n                  if (e.target.value >= 0 || re.test(e.target.value)) {\r\n                    setBufferLength(e.target.value);\r\n                    \r\n                  }\r\n                }}\r\n                onPaste={preventPasteNegative}\r\n                onKeyPress={preventMinus}\r\n                onKeyDown={(e) => {\r\n                  if (e.keyCode === 38 || e.keyCode === 40) {\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              />\r\n              {clickOnValidate && !bufferLength && (\r\n                <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                  Please Enter Buffer Length\r\n                </p>\r\n              )}\r\n               {bufferLength >=4611686018427388000 && (\r\n                <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                  You have Enter the maximum number\r\n                </p>\r\n              )}\r\n            </ListItem>\r\n            <ListItem style={{ display: \"block\", marginTop: \"15px\" }}>\r\n              <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                {\" \"}\r\n                Rebuffering Duration\r\n              </h3>\r\n              <TextField\r\n                value={rebufferDuration}\r\n                id='outlined-basic'\r\n                label=''\r\n                variant='outlined'\r\n                size='small'\r\n                type={\"number\"}\r\n                style={{\r\n                  background: \"#f7f7f7\",\r\n                  border: \"1\",\r\n                  borderRadius: \"4px\",\r\n                  width: \"100%\",\r\n                }}\r\n                onChange={(e) => {\r\n                  const re = /^[0-9\\b]+$/;\r\n                  if (e.target.value >= 0 || re.test(e.target.value)) {\r\n                    setRebufferDuration(e.target.value);\r\n                  }\r\n                }}\r\n                onPaste={preventPasteNegative}\r\n                onKeyPress={preventMinus}\r\n                onKeyDown={(e) => {\r\n                  if (e.keyCode === 38 || e.keyCode === 40) {\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              />\r\n              {clickOnValidate && !rebufferDuration && (\r\n                <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                  Please Enter Rebuffer Duration\r\n                </p>\r\n              )}\r\n               {rebufferDuration >=4611686018427388000 && (\r\n                <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                  You have Enter the maximum number\r\n                </p>\r\n              )}\r\n            </ListItem>\r\n            <ListItem style={{ display: \"block\", marginTop: \"15px\" }}>\r\n              <h3 style={{ fontSize: \"15px\", color: \"#404040\" }}>\r\n                {\" \"}\r\n                Start Bitrate\r\n              </h3>\r\n              <TextField\r\n                value={bitrate}\r\n                id='outlined-basic'\r\n                label=''\r\n                variant='outlined'\r\n                size='small'\r\n                type={\"number\"}\r\n                style={{\r\n                  background: \"#f7f7f7\",\r\n                  border: \"1\",\r\n                  borderRadius: \"4px\",\r\n                  width: \"100%\",\r\n                }}\r\n                onChange={(e) => {\r\n                  const re = /^[0-9\\b]+$/;\r\n                  if (e.target.value >= 0 || re.test(e.target.value)) {\r\n                    setBitrate(e.target.value);\r\n                  }\r\n                }}\r\n                onPaste={preventPasteNegative}\r\n                onKeyPress={preventMinus}\r\n                onKeyDown={(e) => {\r\n                  if (e.keyCode === 38 || e.keyCode === 40) {\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              />\r\n              {clickOnValidate && !bitrate && (\r\n                <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                  Please Enter Bitrate\r\n                </p>\r\n              )}\r\n              {bitrate >=4611686018427388000 && (\r\n                <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                  You have Enter the maximum number\r\n                </p>\r\n              )}\r\n            </ListItem>\r\n            <div style={{ float: \"right\", marginTop: \"10px\" }}>\r\n              <MatButton\r\n                onClick={() => {\r\n                  setConfigure(false);\r\n                  setBitrate(0);\r\n                  setRebufferDuration(0);\r\n                  setBufferLength(0);\r\n                  // setIds([]);\r\n                }}\r\n                style={manualStyleeCancele}\r\n              >\r\n                {\"Cancel\"}\r\n              </MatButton>\r\n              <MatButton onClick={clickOnApply} style={manualStylee}>\r\n                {\"Apply\"}\r\n              </MatButton>\r\n            </div>\r\n          </div>\r\n        </Paper>\r\n      </MitigationDialogue>\r\n    </div>\r\n  );\r\n};\r\nexport default AnnualMitigation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCities, setTabValueMitigation } from 'Store/Actions';\r\nimport Analytics from \"./MitigationSummaryDashboard/Analytics\";\r\nimport MitigationDashboard from \"./MitigationSummaryDashboard/MitigationDashboard\";\r\nimport { FormControlLabel, Typography } from \"@material-ui/core\";\r\nimport Switch from \"react-switch\";\r\nimport AnnualMitigation from \"Components/MitigationSummaryDashboard/AnnualMitigation\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Modal from '@mui/material/Modal';\r\nimport { isValidPermission } from \"Constants/constant\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <>\r\n                    {children}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function SimpleTabsMitigation() {\r\n    const stylee = {\r\n        color: 'white',\r\n        background: '#1992fb',\r\n        width: '83px',\r\n        height: '28px',\r\n        fontSize: '1rem',\r\n        fontWeigth: '100',\r\n    }\r\n    const data = useSelector(state => state.qoeReducer);\r\n    const dispatch = useDispatch()\r\n    const [open, setOpen] = useState(false);\r\n    useEffect(()=>{\r\n        console.log(\"abcd--2--\",localStorage.getItem('newValue'));\r\n        if(localStorage.getItem('newValue')){\r\n            dispatch(setTabValueMitigation(Number(localStorage.getItem('newValue'))))\r\n\r\n        }\r\n\r\n        if(data?.cities?.length > 0){\r\n            return null\r\n        }else{\r\n            dispatch(getCities(dispatch))\r\n        }\r\n    }, [dispatch])\r\n    const handleChange = (event, newValue) => {\r\n        localStorage.setItem(\"newValue\",newValue)\r\n        dispatch(setTabValueMitigation(newValue))\r\n    };\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    // const enableDisableMitigation = () => {\r\n    //     dispatch(toggleMitigation(data?.mitigationStatus, dispatch, () => {\r\n    //         setOpen(false)\r\n    //     }))\r\n    // }\r\n    const manualStyle = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n      }\r\n    return (\r\n        <>\r\n            <div className=\"mitigation-summary  full-table ecom-dashboard-wrapper fixed-pagination\">\r\n                <Box\r\n                    className=\"insightTabs\"\r\n                    style={{ marginBottom: \"0px\", background: \"transparent\" }}\r\n                >\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6} md={4} className=\"tab-heading\">\r\n                            <Box\r\n                                style={{\r\n                                    background: \"transparent\",\r\n                                    paddingBottom: \"2px\",\r\n                                    marginBottom: \"0px\",\r\n                                }}\r\n                            >\r\n                                <Tabs\r\n                                    onChange={handleChange}\r\n                                    value={data?.tabValueMitigation}\r\n                                    className=\"tabs\"\r\n                                    style={{ alignItems: \"start\" }}\r\n                                >\r\n                                    <Tab  disabled={!isValidPermission(\"READ_MITIGATION\")} label=\"MITIGATION\" {...a11yProps(0)} />\r\n                                    <Tab disabled={!isValidPermission(\"READ_ANALYTICS\")} label=\"ANALYTICS\" {...a11yProps(1)} />\r\n                                </Tabs>\r\n                            </Box>\r\n                        </Grid>\r\n                        {\r\n                            data?.tabValueMitigation === 0 && (\r\n                                <>\r\n                                    {/* <Grid item xs={5} md={5} style={{ textAlign: 'end' }} className=\"switch-label\">\r\n                                        <FormControlLabel\r\n                                            label=\"AUTO MITIGATION\"\r\n                                            labelPlacement=\"start\"\r\n                                            onChange={handleOpen}\r\n                                            control={<Switch onColor=\"#E10092\" onChange={handleOpen} uncheckedIcon={false}\r\n                                                checkedIcon={false} checked={data?.mitigationStatus === 'on' ? true : false} />}\r\n                                        />\r\n                                    </Grid> */}\r\n                                    <Grid item xs={8} md={8} style={{ textAlign: 'start', paddingTop: '9px' }}>\r\n                                        <AnnualMitigation />\r\n                                    </Grid>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                </Box>\r\n                <TabPanel value={data?.tabValueMitigation} index={0}>\r\n                    <MitigationDashboard />\r\n                </TabPanel>\r\n                <TabPanel value={data?.tabValueMitigation} index={1}>\r\n                    <Analytics />\r\n                </TabPanel>\r\n                {/* <Modal onClose={handleClose} open={open}>\r\n                    <Box sx={manualStyle}>\r\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                            {\r\n                                data?.mitigationStatus === 'on' ? 'Are you sure you want to disable auto migitation ?' : 'Are you sure you want to enable auto migitation ?'\r\n                            }\r\n                            \r\n                        </Typography>\r\n                        <div style={{ float: 'right', marginTop: '10px' }}>\r\n                            <MatButton\r\n                                onClick={() => setOpen(false)}\r\n                                className=\"Status-btn\"\r\n                                style={{ fontSize: \"1rem\", color: \"#008eff\", width: '83px', height: '28px', fontWeight: '100' }}>\r\n                                {\"No\"}\r\n                            </MatButton>\r\n                            <MatButton\r\n                                onClick={enableDisableMitigation}\r\n                                style={stylee} >\r\n                                {\"Yes\"}\r\n                            </MatButton>\r\n                        </div>\r\n                    </Box>\r\n                </Modal> */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport BasicTabMitigation from 'Components/BasicTabMitigation';\r\n\r\nexport default function Mitigation(props) {\r\n\treturn (\r\n\t\t<div className=\"ecom-dashboard-wrapper 44\">\r\n\t\t\t<BasicTabMitigation />\r\n\t\t</div>\r\n\t)\r\n}\r\n"],"sourceRoot":""}