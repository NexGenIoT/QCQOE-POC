{"version":3,"sources":["Routes/qoe/location/index.js"],"names":["Location","props","dispatch","useDispatch","data","useSelector","state","qoeReducer","useState","isLoading","setIsLoading","infoWindowPopup","setInfoWindowPopup","infoWindowCoordinate","setInfoWindowCoordinate","coordinates","setCoordinates","errorCoordinates","setErrorCoordinates","playCount","setPlayCount","errorCount","setErrorCount","isLoaded","useJsApiLoader","googleMapsApiKey","useEffect","params","errorParams","paramsConcurrent","getlocationCoordinates","getErrorlocationCoordinates","getErrorCount","getlocationConcurrentCount","interval","setInterval","window","location","href","includes","clearInterval","mappingCounts","countArray","playCountArray","Set","map","item","provider","forEach","uniqueElement","partnerObj","ios","android","firetv","firestick","web","element","platform","toLowerCase","concurrentplays","push","mappingErrorCounts","count","a","console","log","locationCoordinates","getCoordinatesArray","coordinatesArray","coordinatesObj","lat","latitude","lng","longitude","city","errorLocationCoordinates","getErrorCoordinatesArray","errorCoordinatesArray","errorCoordinatesObj","conncurrentCount","length","mouseOver","coordinate","mouseOut","style","height","display","justifyContent","alignItems","className","marginLeft","mapContainerStyle","width","center","zoom","maxZoom","position","icon","onMouseOver","e","onClick","background","cellPadding","cellSpacing","colSpan","play","index","AndroidSmartTv","error"],"mappings":"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","file":"static/js/17.a2c49616.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport { getErrorCount, getErrorlocationCoordinates, getlocationConcurrentCount, getlocationCoordinates, getPlayCount } from 'Store/Actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport RctPageLoader from 'Components/RctPageLoader/RctPageLoader';\r\n// adding comment\r\nexport default function Location(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.qoeReducer);\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [infoWindowPopup, setInfoWindowPopup] = useState(false)\r\n    const [infoWindowCoordinate, setInfoWindowCoordinate] = useState({})\r\n    const [coordinates, setCoordinates] = useState([])\r\n    const [errorCoordinates, setErrorCoordinates] = useState([])\r\n    const [playCount, setPlayCount] = useState([])\r\n    const [errorCount, setErrorCount] = useState([])\r\n    const { isLoaded } = useJsApiLoader({\r\n        googleMapsApiKey: \"AIzaSyDrr86JFplL6E731o7y_VMe5wIoHiWvnY4\" // ,\r\n        // ...otherOptions\r\n    })\r\n    const image =\r\n        \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";\r\n    const containerStyle = {\r\n        width: '100%',\r\n        height: '600px',\r\n        marginLeft: '1rem'\r\n    };\r\n    const center = {\r\n        lat: 22.9473,\r\n        lng: 79.1923\r\n    }\r\n    const divStyle = {\r\n        background: `white`,\r\n        width: \"auto\",\r\n        height: \"55px\"\r\n        // border: `1px solid #ccc`,\r\n        // padding: 15\r\n    }\r\n    useEffect(() => {\r\n        const params = { \"metric\": \"concurrent\", \"operation\": \"count\" }\r\n        const errorParams = { \"metric\": \"error\", \"operation\": \"count\" }\r\n        const paramsConcurrent = { \"metric\": \"concurrent\", \"operation\": \"count\" }\r\n        dispatch(getlocationCoordinates(dispatch, params))\r\n        dispatch(getErrorlocationCoordinates(dispatch, errorParams))\r\n       // dispatch(getPlayCount(dispatch, params))\r\n        dispatch(getErrorCount(dispatch, errorParams))\r\n        dispatch(getlocationConcurrentCount(dispatch, paramsConcurrent))\r\n        const interval = setInterval(() => {\r\n            if (window.location.href.includes('dashboard/crm/location')) {\r\n                dispatch(getlocationCoordinates(dispatch, params))\r\n                dispatch(getErrorlocationCoordinates(dispatch, errorParams))\r\n                //dispatch(getPlayCount(dispatch, params))\r\n                dispatch(getErrorCount(dispatch, errorParams))\r\n                dispatch(getlocationConcurrentCount(dispatch, paramsConcurrent))\r\n\r\n            } else {\r\n                clearInterval(interval)\r\n            }\r\n        }, 60000);\r\n        return () => clearInterval(interval);\r\n\r\n     }, [])\r\n    const mappingCounts = (countArray) => {\r\n\r\n        //conncurrentCount\r\n        let playCountArray = []\r\n        const uniquePlayCount = [...new Set(countArray.map(item => item.provider))]\r\n        uniquePlayCount.forEach(uniqueElement => {\r\n            let partnerObj = {\r\n                provider: '',\r\n                ios: '-',\r\n                android: '-',\r\n                firetv: '-',\r\n                firestick: '-',\r\n                web: '-'\r\n            }\r\n            countArray.forEach(element => {\r\n                if (element.provider === uniqueElement) {\r\n                    partnerObj.provider = element.provider\r\n                    switch (element?.platform?.toLowerCase()) {\r\n                        case \"ios\":\r\n                            partnerObj.ios = element.concurrentplays\r\n                            break;\r\n                        case \"android\":\r\n                            partnerObj.android = element.concurrentplays\r\n                            break;\r\n                        case \"firetv\":\r\n                            partnerObj.firetv = element.concurrentplays\r\n                            break;\r\n                        case \"firestick\":\r\n                            partnerObj.firestick = element.concurrentplays\r\n                            break;\r\n                        case \"web\":\r\n                            partnerObj.web = element.concurrentplays\r\n                            break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            playCountArray.push(partnerObj)\r\n        });\r\n        return playCountArray\r\n    }\r\n    const mappingErrorCounts = (countArray) => {\r\n        let playCountArray = []\r\n        const uniquePlayCount = [...new Set(countArray.map(item => item.provider))]\r\n        uniquePlayCount.forEach(uniqueElement => {\r\n            let partnerObj = {\r\n                provider: '',\r\n                ios: '-',\r\n                android: '-',\r\n                firetv: '-',\r\n                firestick: '-',\r\n                web: '-'\r\n            }\r\n            countArray.forEach(element => {\r\n                if (element.provider === uniqueElement) {\r\n                    partnerObj.provider = element.provider\r\n                    switch (element?.platform?.toLowerCase()) {\r\n                        case \"ios\":\r\n                            partnerObj.ios = element.count\r\n                            break;\r\n                        case \"android\":\r\n                            partnerObj.android = element.count\r\n                            break;\r\n                        case \"firetv\":\r\n                            partnerObj.firetv = element.count\r\n                            break;\r\n                        case \"firestick\":\r\n                            partnerObj.firestick = element.count\r\n                            break;\r\n                        case \"web\":\r\n                            partnerObj.web = element.count\r\n                            break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            playCountArray.push(partnerObj)\r\n        });\r\n        return playCountArray\r\n    }\r\n    useEffect(async () => {\r\n        console.log(\"location--\");\r\n        if (data?.locationCoordinates?.data) {\r\n            setIsLoading(false)\r\n            const getCoordinatesArray = data?.locationCoordinates?.data;\r\n            let coordinatesArray = []\r\n            getCoordinatesArray.forEach(element => {\r\n                let coordinatesObj = {\r\n                    lat: element.latitude,\r\n                    lng: element.longitude,\r\n                    city: element.city,\r\n                    count: element.count\r\n                }\r\n                coordinatesArray.push(coordinatesObj)\r\n            });\r\n            setCoordinates(coordinatesArray)\r\n        }\r\n        if (data?.errorLocationCoordinates?.data) {\r\n            setIsLoading(false)\r\n            const getErrorCoordinatesArray = data?.errorLocationCoordinates?.data;\r\n            let errorCoordinatesArray = []\r\n            getErrorCoordinatesArray.forEach(element => {\r\n                let errorCoordinatesObj = {\r\n                    lat: element.latitude,\r\n                    lng: element.longitude,\r\n                    city: element.city,\r\n                    count: element.count\r\n                }\r\n                errorCoordinatesArray.push(errorCoordinatesObj)\r\n            });\r\n            setErrorCoordinates(errorCoordinatesArray)\r\n        }\r\n        if (data?.conncurrentCount?.length > 0) {\r\n            setIsLoading(false)\r\n            const countArray = await mappingCounts(data?.conncurrentCount)\r\n            setPlayCount(countArray)\r\n        }else{\r\n            setPlayCount([])  \r\n        }\r\n        if (data?.errorCount?.length > 0) {\r\n            setIsLoading(false)\r\n            const countArray = await mappingErrorCounts(data?.errorCount)\r\n            setErrorCount(countArray)\r\n        }else{\r\n            setErrorCount([])\r\n        }\r\n\r\n    }, [data?.locationCoordinates?.data, data?.errorLocationCoordinates?.data, data?.conncurrentCount, data?.errorCount])\r\n\r\n    const mouseOver = (coordinate) => {\r\n        setInfoWindowCoordinate(coordinate)\r\n        setInfoWindowPopup(true)\r\n    }\r\n    const mouseOut = () => {\r\n        setInfoWindowPopup(false)\r\n        setInfoWindowCoordinate({})\r\n    }\r\n    if (!isLoaded) return <div>Loading...</div>\r\n    if (isLoading) return <div style={{ height: 'calc(100vh - 170px)', display: 'flex', justifyContent: 'center', alignItems: 'center' }}><RctPageLoader /></div>\r\n    else\r\n        return (\r\n            <>\r\n                <div className='map'>\r\n                    <h1>Location</h1>\r\n                    {/* <div className=\"top-left-nav\">\r\n                        <ul>\r\n                            <li className=\"active-tracker\">CONCURRENCY (320) </li>\r\n                            <li>PLAYBACK FAILURE (540)</li>\r\n                        </ul>\r\n                    </div> */}\r\n                    <div className='detail-map'>\r\n                        <div className='row'>\r\n                            <div className='col-md-7 col-xl-7 location'>\r\n                                <div  className='bliper countTable' style={{marginLeft:\"12px\"}}>\r\n                                <div>Concurrent Count <br/> <span className='concurrentDotMarker'></span></div>\r\n                                <div style={{marginLeft:\"10px\"}}>Error Count<br/><span className='ssoDotMarker'></span></div>\r\n                                </div>\r\n                               \r\n                                <GoogleMap\r\n                                    mapContainerStyle={containerStyle}\r\n                                    center={center}\r\n                                    zoom={5}\r\n                                    maxZoom={5}\r\n                                >\r\n                                   {coordinates?.length > 0 && coordinates.map((coordinate) => {\r\n                                        return (\r\n                                            <Marker position={coordinate}\r\n                                                icon={\"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\"}\r\n\r\n                                                onMouseOver={e => mouseOver(coordinate)} onClick={e => mouseOut(coordinate)} />\r\n                                        )\r\n                                    })}\r\n\r\n                                    {errorCoordinates?.length > 0 && errorCoordinates.map((coordinate) => {\r\n                                        return (\r\n                                            <Marker position={coordinate} onMouseOver={e => mouseOver(coordinate)} onClick={e => mouseOut(coordinate)} />\r\n                                        )\r\n                                    })}\r\n                                    {infoWindowPopup && <InfoWindow position={infoWindowCoordinate} >\r\n                                        <div style={divStyle}>\r\n                                        <p>{infoWindowCoordinate.city}</p>\r\n                                            <h1>{infoWindowCoordinate.count}</h1>\r\n                                        </div>\r\n                                    </InfoWindow>\r\n                                    }\r\n                            </GoogleMap>\r\n                            </div>\r\n                            <div className=' countTable' style={{\"margin-top\": \"24px\"}}>\r\n                                <div className=' playCountTable'>\r\n\r\n                                    <table className=\"table table-sm playTable\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                                        <thead>\r\n                                            <tr className='playCountMainHeader'>\r\n                                                <td colSpan=\"6\">\r\n                                                CONCURRENT COUNT\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr className='playCountHeader'>\r\n                                                <th>Partner</th>\r\n                                                <th>IOS</th>\r\n                                                <th>Android</th>\r\n                                                <th>AndroidSmartTv</th>\r\n                                                <th>FireStick</th>\r\n                                                <th>Web</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {playCount?.length > 0 && playCount.map((play, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td className='playCountSideHeader'>{play?.provider}</td>\r\n                                                        <td>{play?.ios}</td>\r\n                                                        <td>{play?.android}</td>\r\n                                                        <td>{play?.AndroidSmartTv}</td>\r\n                                                        <td>{play?.firestick}</td>\r\n                                                        <td>{play?.web}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                            )}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=' errorCountTable'>\r\n                                    <table className=\"table table-sm errorTable\">\r\n                                        <thead>\r\n                                            <tr className='errorCountMainHeader'>\r\n                                                <td colSpan=\"6\">\r\n                                                    ERROR COUNT\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr className='errorCountHeader'>\r\n                                                <th>Partner</th>\r\n                                                <th>IOS</th>\r\n                                                <th>Android</th>\r\n                                                <th>AndroidSmartTv</th>\r\n                                                <th>FireStick</th>\r\n                                                <th>Web</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {errorCount?.length > 0 && errorCount.map((error, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td className='errorCountSideHeader'>{error.provider}</td>\r\n                                                        <td>{error?.ios}</td>\r\n                                                        <td>{error?.android}</td>\r\n                                                        <td>{error?.AndroidSmartTv}</td>\r\n                                                        <td>{error?.firestick}</td>\r\n                                                        <td>{error?.web}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                            )}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n}"],"sourceRoot":""}