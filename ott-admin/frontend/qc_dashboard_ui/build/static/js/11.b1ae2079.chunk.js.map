{"version":3,"sources":["../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","Routes/qoe/location/index.js","../node_modules/@mui/icons-material/Download.js","Components/SliderContainer/VideoQCSliderContainer.js","Components/SliderContainer/MitigationSliderContainer.js","Components/SliderContainer/AIPipelineSliderContainer.js","../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","Components/DashboardAnalysis/StackedAreaChart.js","Components/DashboardAnalysis/DashboardAnalysis.js","Routes/qoe/dashboardLocation/index.js","Routes/qoe/dashboard/index.js","Routes/crm/dashboard/index.js"],"names":["TableContainer","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","width","overflowX","name","Location","dispatch","useDispatch","data","useSelector","state","qoeReducer","useState","isLoading","setIsLoading","infoWindowPopup","setInfoWindowPopup","infoWindowCoordinate","setInfoWindowCoordinate","coordinates","setCoordinates","errorCoordinates","setErrorCoordinates","playCount","setPlayCount","errorCount","setErrorCount","isLoaded","useJsApiLoader","googleMapsApiKey","useEffect","params","errorParams","paramsConcurrent","getlocationCoordinates","getErrorlocationCoordinates","getErrorCount","getlocationConcurrentCount","interval","setInterval","window","location","href","includes","clearInterval","mappingCounts","countArray","playCountArray","Set","map","item","provider","forEach","uniqueElement","partnerObj","ios","android","firetv","firestick","web","element","platform","toLowerCase","concurrentplays","push","mappingErrorCounts","count","a","console","log","locationCoordinates","getCoordinatesArray","coordinatesArray","coordinatesObj","lat","latitude","lng","longitude","city","errorLocationCoordinates","getErrorCoordinatesArray","errorCoordinatesArray","errorCoordinatesObj","conncurrentCount","length","mouseOver","coordinate","mouseOut","style","height","display","justifyContent","alignItems","marginLeft","mapContainerStyle","center","zoom","maxZoom","position","icon","onMouseOver","e","onClick","background","cellPadding","cellSpacing","colSpan","play","index","AndroidSmartTv","error","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","VideoQCSliderContainer","MitigationSliderContainer","dataGraph","numberOfMitigationApplied","number_of_mitigations_applied","all","numberOfMitigationAppliedUnit","unit","improvementInUEIGraph","improvement_in_uei","improvementInUEIUnit","degradationInUEI","degradation_in_uei","degradationInUEIUnit","averageStartupBufferLength","average_startup_buffer_length","averageStartupBufferLengthUnit","averageRebufferingBufferLength","average_rebuffering_buffer_length","averageRebufferingBufferLengthUnit","history","useHistory","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","centerMode","prevArrow","alt","src","process","nextArrow","formatDataAndTime","timestamp","partnerDetail","agr","moment","format","noOfMitigation","labels","TimeStamp","datasets","label","fill","lineTension","borderColor","backgroundColor","pointRadius","pointHitRadius","dataOne","improvementInUEI","average_data","meanStartupBitrate","getNumberOfMitigationApplied","toDate","fromDate","getImprovementInUEI","getDegradationInUEI","getAverageStartupBufferLength","getAverageRebufferingBufferLength","Array","isArray","Math","floor","Date","getTime","aggregation","clickOnMetric","type","fulname","isValidPermission","setTabValueMitigation","setMetricType","setMetricTypeFullName","NotificationManager","adminMessage","message","round","num","digits","symbol","slice","reverse","find","toFixed","replace","to","Box","Tooltip","title","arrow","total_sum","SimpleBarChart","StackedAreaChart","AIPipelineSliderContainer","getData","Button","styles","ButtonGroup","children","_props$color","color","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","size","_props$variant","variant","buttonClassName","grouped","concat","capitalize","role","contained","vertical","child","theme","borderRadius","shape","boxShadow","shadows","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","groupedTextVertical","borderBottom","groupedTextPrimary","alpha","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","borderRightColor","groupedOutlinedVertical","marginTop","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","StackedAreaChartComponent","options","elements","point","radius","tooltips","enabled","plugins","tooltip","legend","scales","x","y","allMatrics","DashboardAnalysis","realdata","yesterdayData","setYesterdayData","backupYesterdayData","setBackupYesterdayData","selectedDevices","setSelectedDevices","selectedDates","setSelectedDates","current","setCurrent","last","setLast","yesterdayDate","setYesterdayDate","setFromDate","sortMatrics","setSortMatrics","filterMetric","setFilterMetric","searchText","setSearchText","analysisBtn","setanalysisBtn","dashboardAnalysisCharData","setDashboardAnalysisCharData","agrr","setAgr","dashboardLoader","setDashboardLoader","baseURL","widgetArray","updateDate","val","setTimeout","currentDate","setMetricesDevicesData","commonApiMetrices","setTimeMetricesData","showLoader","fromDateShow","yesterdayDateShow","getWidget","currenttime","fromtime","getMetrices","metrices_name","toDateShow","requestBodyAnother","device_platform","requestOptAnother","method","headers","body","JSON","stringify","fetch","then","response","json","res","arr","metricsJsonData","reduce","prev","array","metric_key_name","keys","result","metricName","undefined","requestBody","metricname","content_partner","localStorage","getItem","device_model","content_type","cdn","aggregation_interval","url","axios","post","filters","getUniqueFilters","findChartData","change_24hrs","change_48hrs","finalchartData","assign","time_stamp","formatTime","get48HoursData","hrs","Boolean","Number","get24HoursData","RctPageLoader","TextField","onChange","target","filter","id","placeholder","InputProps","endAdornment","IconButton","cursor","select","event","option","MenuItem","node","document","querySelector","domtoimage","toPng","quality","bgcolor","dataUrl","createElement","download","createFileName","click","catch","placement","paddingLeft","paddingRight","Table","sx","TableHead","TableRow","TableCell","TableBody","i","realtime_metrices","border","hrs_change_48hrs","hrs_change_24hrs","user_metrices","qoe_metrics","DashboardLocation","playCconncurrentCountount","Dashboard","removeItem","clearAllMetrics","getWidgetDataRequest","clearAssetInfoData","parseFloat","minHeight","loading","Grid","container","widgetData","xs","percentage","RealTimeSliderContainer","UserEngagementSliderContainer","QualityOfExperienceSliderContainer","CrmDashboard"],"mappings":"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EACAF,GA/IwB,yBAiJpBG,GACJ,iBACA,GACAF,EACAC,EACAF,GAtJwB,yBAwJpBG,GACJ,iBACA,GACAF,EACAC,EACAF,GA7JwB,yBA+JpBG,GACJ,cACA,GACAF,EACAC,EACAF,GApKwB,yBAsKpBG,GACJ,iCACA,GACAF,EACAC,EACAF,GA3KwB,4CAAH,8DAoLnBF,GAAiB,uCAAG,WACxB/N,EACAiO,EACAb,EACAiB,EACAC,GALwB,SAAA7R,EAAA,6DAQxBwR,GAAc9U,IAAU,GARA,SASlBoV,GAAY,WAAYnB,EAAMpN,EAAGiO,EAAYI,EAAaC,GATxC,uBAUlBC,GACJ,kBACAnB,EACApN,EACAiO,EACAI,EACAC,GAhBsB,uBAkBlBC,GACJ,oBACAnB,EACApN,EACAiO,EACAI,EACAC,GAxBsB,uBA0BlBC,GACJ,gCACAnB,EACApN,EACAiO,EACAI,EACAC,GAhCsB,wBAkClBC,GAAY,YAAanB,EAAMpN,EAAGiO,EAAYI,EAAaC,GAlCzC,yBAmClBC,GACJ,2BACAnB,EACApN,EACAiO,EACAI,EACAC,GAzCsB,yBA2ClBC,GACJ,6BACAnB,EACApN,EACAiO,EACAI,EACAC,GAjDsB,yBAmDlBC,GACJ,yBACAnB,EACApN,EACAiO,EACAI,EACAC,GAzDsB,yBA2DlBC,GACJ,oBACAnB,EACApN,EACAiO,EACAI,EACAC,GAjEsB,yBAmElBC,GACJ,kBACAnB,EACApN,EACAiO,EACAI,EACAC,GAzEsB,yBA2ElBC,GACJ,wBACAnB,EACApN,EACAiO,EACAI,EACAC,GAjFsB,yBAmFlBC,GACJ,iBACAnB,EACApN,EACAiO,EACAI,EACAC,GAzFsB,yBA2FlBC,GACJ,0BACAnB,EACApN,EACAiO,EACAI,EACAC,GAjGsB,yBAmGlBC,GACJ,uBACAnB,EACApN,EACAiO,EACAI,EACAC,GAzGsB,yBA2GlBC,GACJ,mBACAnB,EACApN,EACAiO,EACAI,EACAC,GAjHsB,yBAmHlBC,GACJ,qBACAnB,EACApN,EACAiO,EACAI,EACAC,GAzHsB,yBA2HlBC,GACJ,oBACAnB,EACApN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","file":"static/js/11.b1ae2079.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import React, { useState, useEffect } from 'react'\r\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport { getErrorCount, getErrorlocationCoordinates, getlocationConcurrentCount, getlocationCoordinates, getPlayCount } from 'Store/Actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport RctPageLoader from 'Components/RctPageLoader/RctPageLoader';\r\n// adding comment\r\nexport default function Location(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.qoeReducer);\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [infoWindowPopup, setInfoWindowPopup] = useState(false)\r\n    const [infoWindowCoordinate, setInfoWindowCoordinate] = useState({})\r\n    const [coordinates, setCoordinates] = useState([])\r\n    const [errorCoordinates, setErrorCoordinates] = useState([])\r\n    const [playCount, setPlayCount] = useState([])\r\n    const [errorCount, setErrorCount] = useState([])\r\n    const { isLoaded } = useJsApiLoader({\r\n        googleMapsApiKey: \"AIzaSyDrr86JFplL6E731o7y_VMe5wIoHiWvnY4\" // ,\r\n        // ...otherOptions\r\n    })\r\n    const image =\r\n        \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";\r\n    const containerStyle = {\r\n        width: '100%',\r\n        height: '600px',\r\n        marginLeft: '1rem'\r\n    };\r\n    const center = {\r\n        lat: 22.9473,\r\n        lng: 79.1923\r\n    }\r\n    const divStyle = {\r\n        background: `white`,\r\n        width: \"auto\",\r\n        height: \"55px\"\r\n        // border: `1px solid #ccc`,\r\n        // padding: 15\r\n    }\r\n    useEffect(() => {\r\n        const params = { \"metric\": \"concurrent\", \"operation\": \"count\" }\r\n        const errorParams = { \"metric\": \"error\", \"operation\": \"count\" }\r\n        const paramsConcurrent = { \"metric\": \"concurrent\", \"operation\": \"count\" }\r\n        dispatch(getlocationCoordinates(dispatch, params))\r\n        dispatch(getErrorlocationCoordinates(dispatch, errorParams))\r\n       // dispatch(getPlayCount(dispatch, params))\r\n        dispatch(getErrorCount(dispatch, errorParams))\r\n        dispatch(getlocationConcurrentCount(dispatch, paramsConcurrent))\r\n        const interval = setInterval(() => {\r\n            if (window.location.href.includes('dashboard/crm/location')) {\r\n                dispatch(getlocationCoordinates(dispatch, params))\r\n                dispatch(getErrorlocationCoordinates(dispatch, errorParams))\r\n                //dispatch(getPlayCount(dispatch, params))\r\n                dispatch(getErrorCount(dispatch, errorParams))\r\n                dispatch(getlocationConcurrentCount(dispatch, paramsConcurrent))\r\n\r\n            } else {\r\n                clearInterval(interval)\r\n            }\r\n        }, 60000);\r\n        return () => clearInterval(interval);\r\n\r\n     }, [])\r\n    const mappingCounts = (countArray) => {\r\n\r\n        //conncurrentCount\r\n        let playCountArray = []\r\n        const uniquePlayCount = [...new Set(countArray.map(item => item.provider))]\r\n        uniquePlayCount.forEach(uniqueElement => {\r\n            let partnerObj = {\r\n                provider: '',\r\n                ios: '-',\r\n                android: '-',\r\n                firetv: '-',\r\n                firestick: '-',\r\n                web: '-'\r\n            }\r\n            countArray.forEach(element => {\r\n                if (element.provider === uniqueElement) {\r\n                    partnerObj.provider = element.provider\r\n                    switch (element?.platform?.toLowerCase()) {\r\n                        case \"ios\":\r\n                            partnerObj.ios = element.concurrentplays\r\n                            break;\r\n                        case \"android\":\r\n                            partnerObj.android = element.concurrentplays\r\n                            break;\r\n                        case \"firetv\":\r\n                            partnerObj.firetv = element.concurrentplays\r\n                            break;\r\n                        case \"firestick\":\r\n                            partnerObj.firestick = element.concurrentplays\r\n                            break;\r\n                        case \"web\":\r\n                            partnerObj.web = element.concurrentplays\r\n                            break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            playCountArray.push(partnerObj)\r\n        });\r\n        return playCountArray\r\n    }\r\n    const mappingErrorCounts = (countArray) => {\r\n        let playCountArray = []\r\n        const uniquePlayCount = [...new Set(countArray.map(item => item.provider))]\r\n        uniquePlayCount.forEach(uniqueElement => {\r\n            let partnerObj = {\r\n                provider: '',\r\n                ios: '-',\r\n                android: '-',\r\n                firetv: '-',\r\n                firestick: '-',\r\n                web: '-'\r\n            }\r\n            countArray.forEach(element => {\r\n                if (element.provider === uniqueElement) {\r\n                    partnerObj.provider = element.provider\r\n                    switch (element?.platform?.toLowerCase()) {\r\n                        case \"ios\":\r\n                            partnerObj.ios = element.count\r\n                            break;\r\n                        case \"android\":\r\n                            partnerObj.android = element.count\r\n                            break;\r\n                        case \"firetv\":\r\n                            partnerObj.firetv = element.count\r\n                            break;\r\n                        case \"firestick\":\r\n                            partnerObj.firestick = element.count\r\n                            break;\r\n                        case \"web\":\r\n                            partnerObj.web = element.count\r\n                            break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            playCountArray.push(partnerObj)\r\n        });\r\n        return playCountArray\r\n    }\r\n    useEffect(async () => {\r\n        console.log(\"location--\");\r\n        if (data?.locationCoordinates?.data) {\r\n            setIsLoading(false)\r\n            const getCoordinatesArray = data?.locationCoordinates?.data;\r\n            let coordinatesArray = []\r\n            getCoordinatesArray.forEach(element => {\r\n                let coordinatesObj = {\r\n                    lat: element.latitude,\r\n                    lng: element.longitude,\r\n                    city: element.city,\r\n                    count: element.count\r\n                }\r\n                coordinatesArray.push(coordinatesObj)\r\n            });\r\n            setCoordinates(coordinatesArray)\r\n        }\r\n        if (data?.errorLocationCoordinates?.data) {\r\n            setIsLoading(false)\r\n            const getErrorCoordinatesArray = data?.errorLocationCoordinates?.data;\r\n            let errorCoordinatesArray = []\r\n            getErrorCoordinatesArray.forEach(element => {\r\n                let errorCoordinatesObj = {\r\n                    lat: element.latitude,\r\n                    lng: element.longitude,\r\n                    city: element.city,\r\n                    count: element.count\r\n                }\r\n                errorCoordinatesArray.push(errorCoordinatesObj)\r\n            });\r\n            setErrorCoordinates(errorCoordinatesArray)\r\n        }\r\n        if (data?.conncurrentCount?.length > 0) {\r\n            setIsLoading(false)\r\n            const countArray = await mappingCounts(data?.conncurrentCount)\r\n            setPlayCount(countArray)\r\n        }else{\r\n            setPlayCount([])  \r\n        }\r\n        if (data?.errorCount?.length > 0) {\r\n            setIsLoading(false)\r\n            const countArray = await mappingErrorCounts(data?.errorCount)\r\n            setErrorCount(countArray)\r\n        }else{\r\n            setErrorCount([])\r\n        }\r\n\r\n    }, [data?.locationCoordinates?.data, data?.errorLocationCoordinates?.data, data?.conncurrentCount, data?.errorCount])\r\n\r\n    const mouseOver = (coordinate) => {\r\n        setInfoWindowCoordinate(coordinate)\r\n        setInfoWindowPopup(true)\r\n    }\r\n    const mouseOut = () => {\r\n        setInfoWindowPopup(false)\r\n        setInfoWindowCoordinate({})\r\n    }\r\n    if (!isLoaded) return <div>Loading...</div>\r\n    if (isLoading) return <div style={{ height: 'calc(100vh - 170px)', display: 'flex', justifyContent: 'center', alignItems: 'center' }}><RctPageLoader /></div>\r\n    else\r\n        return (\r\n            <>\r\n                <div className='map'>\r\n                    <h1>Location</h1>\r\n                    {/* <div className=\"top-left-nav\">\r\n                        <ul>\r\n                            <li className=\"active-tracker\">CONCURRENCY (320) </li>\r\n                            <li>PLAYBACK FAILURE (540)</li>\r\n                        </ul>\r\n                    </div> */}\r\n                    <div className='detail-map'>\r\n                        <div className='row'>\r\n                            <div className='col-md-7 col-xl-7 location'>\r\n                                <div  className='bliper countTable' style={{marginLeft:\"12px\"}}>\r\n                                <div>Concurrent Count <br/> <span className='concurrentDotMarker'></span></div>\r\n                                <div style={{marginLeft:\"10px\"}}>Error Count<br/><span className='ssoDotMarker'></span></div>\r\n                                </div>\r\n                               \r\n                                <GoogleMap\r\n                                    mapContainerStyle={containerStyle}\r\n                                    center={center}\r\n                                    zoom={5}\r\n                                    maxZoom={5}\r\n                                >\r\n                                   {coordinates?.length > 0 && coordinates.map((coordinate) => {\r\n                                        return (\r\n                                            <Marker position={coordinate}\r\n                                                icon={\"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\"}\r\n\r\n                                                onMouseOver={e => mouseOver(coordinate)} onClick={e => mouseOut(coordinate)} />\r\n                                        )\r\n                                    })}\r\n\r\n                                    {errorCoordinates?.length > 0 && errorCoordinates.map((coordinate) => {\r\n                                        return (\r\n                                            <Marker position={coordinate} onMouseOver={e => mouseOver(coordinate)} onClick={e => mouseOut(coordinate)} />\r\n                                        )\r\n                                    })}\r\n                                    {infoWindowPopup && <InfoWindow position={infoWindowCoordinate} >\r\n                                        <div style={divStyle}>\r\n                                        <p>{infoWindowCoordinate.city}</p>\r\n                                            <h1>{infoWindowCoordinate.count}</h1>\r\n                                        </div>\r\n                                    </InfoWindow>\r\n                                    }\r\n                            </GoogleMap>\r\n                            </div>\r\n                            <div className=' countTable' style={{\"margin-top\": \"24px\"}}>\r\n                                <div className=' playCountTable'>\r\n\r\n                                    <table className=\"table table-sm playTable\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                                        <thead>\r\n                                            <tr className='playCountMainHeader'>\r\n                                                <td colSpan=\"6\">\r\n                                                CONCURRENT COUNT\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr className='playCountHeader'>\r\n                                                <th>Partner</th>\r\n                                                <th>IOS</th>\r\n                                                <th>Android</th>\r\n                                                <th>AndroidSmartTv</th>\r\n                                                <th>FireStick</th>\r\n                                                <th>Web</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {playCount?.length > 0 && playCount.map((play, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td className='playCountSideHeader'>{play?.provider}</td>\r\n                                                        <td>{play?.ios}</td>\r\n                                                        <td>{play?.android}</td>\r\n                                                        <td>{play?.AndroidSmartTv}</td>\r\n                                                        <td>{play?.firestick}</td>\r\n                                                        <td>{play?.web}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                            )}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=' errorCountTable'>\r\n                                    <table className=\"table table-sm errorTable\">\r\n                                        <thead>\r\n                                            <tr className='errorCountMainHeader'>\r\n                                                <td colSpan=\"6\">\r\n                                                    ERROR COUNT\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr className='errorCountHeader'>\r\n                                                <th>Partner</th>\r\n                                                <th>IOS</th>\r\n                                                <th>Android</th>\r\n                                                <th>AndroidSmartTv</th>\r\n                                                <th>FireStick</th>\r\n                                                <th>Web</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {errorCount?.length > 0 && errorCount.map((error, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td className='errorCountSideHeader'>{error.provider}</td>\r\n                                                        <td>{error?.ios}</td>\r\n                                                        <td>{error?.android}</td>\r\n                                                        <td>{error?.AndroidSmartTv}</td>\r\n                                                        <td>{error?.firestick}</td>\r\n                                                        <td>{error?.web}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                            )}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5v2zM19 9h-4V3H9v6H5l7 7 7-7z\"\n}), 'Download');\n\nexports.default = _default;","import React, { useEffect, useState } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport SimpleBarChart from './SimpleBarChart'\r\nimport SpacePieChart from './SpacePieChart'\r\nimport axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction VideoQCSliderContainer(props) {\r\n   const history = useHistory()\r\n   const [dataToFetch, setDataToFetch] = useState([])\r\n   const [totalAssetsNumber, setTotalAssetsNumber] = useState(0)\r\n   const [totalAssetsPassNumber, setTotalAssetsPassNumber] = useState(0)\r\n   const [totalAssetsFailNumber, setTotalAssetsFailNumber] = useState(0)\r\n   const [totalAssetsPendingNumber, setTotalAssetsPendingNumber] = useState(0)\r\n   const colors = ['#FCE5AD', '#F3A9D4', '#72B7E2', '#C4ADF5', '#9AEDF1', '#ff6384', \"#220046\", 'red', 'brown', 'green']\r\n   const settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 300,\r\n      slidesToShow: 3,\r\n      slidesToScroll: 1,\r\n      autoplay: false,\r\n      //arrows: true,\r\n      centerMode: false,\r\n      prevArrow: <img alt='left-arrow' src={`${process.env.PUBLIC_URL}/assets/left-arrow.svg`} width=\"15\" height=\"27\" />,\r\n      nextArrow: <img alt='right-arrow' src={`${process.env.PUBLIC_URL}/assets/right-arrow.svg`} width=\"15\" height=\"27\" />\r\n   };\r\n\r\n   useEffect(() => {\r\n      const fetchData = async () => {\r\n         const response = await axios.get('/api/assets/summary')\r\n         setDataToFetch(response.data)\r\n         let totalAssets = 0\r\n         response.data.map(total => {\r\n            return totalAssets = totalAssets + total.total\r\n         })\r\n         setTotalAssetsNumber(totalAssets)\r\n         let totalPassAssets = 0\r\n         response.data.map(total => {\r\n            return total.status.map(t => {\r\n               if (t.status === 'Pass') {\r\n                  return totalPassAssets = totalPassAssets + t.count\r\n               }\r\n               else{\r\n                  return null\r\n               }\r\n            })\r\n         })\r\n         setTotalAssetsPassNumber(totalPassAssets)\r\n         let totalFailAssets = 0\r\n         response.data.map(total => {\r\n            return total.status.map(t => {\r\n               if (t.status === 'Fail') {\r\n                  return totalFailAssets = totalFailAssets + t.count\r\n               }\r\n               else{\r\n                  return null\r\n               }\r\n            })\r\n         })\r\n         setTotalAssetsFailNumber(totalFailAssets)\r\n         let totalPendingAssets = 0\r\n         response.data.map(total => {\r\n            return total.status.map(t => {\r\n               if (t.status === 'Pending') {\r\n                  return totalPendingAssets = totalPendingAssets + t.count\r\n               }\r\n               else{\r\n                  return null\r\n               }\r\n            })\r\n         })\r\n         setTotalAssetsPendingNumber(totalPendingAssets)\r\n\r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n   const getTotalAssetLabels = () => {\r\n      let allLabel = []\r\n      dataToFetch.map(d => {\r\n         return allLabel.push(d.partner)\r\n      })\r\n      return allLabel\r\n   }\r\n\r\n   const getTotalAssetDataSets = () => {\r\n      let allDataSet = []\r\n      dataToFetch.map((d, i) => {\r\n         return allDataSet.push(d.total)\r\n      })\r\n      return allDataSet\r\n   }\r\n\r\n   const getTotalAssetPassDataSets = () => {\r\n      let allPassDataSet = []\r\n      dataToFetch.map((d, i) => {\r\n         const include = d.status.find(s => s.status === 'Pass')\r\n         if (include) {\r\n            return allPassDataSet.push(include.count)\r\n         }\r\n         else {\r\n            return allPassDataSet.push(0)\r\n         }\r\n      })\r\n      return allPassDataSet\r\n   }\r\n\r\n   const getTotalAssetPendingDataSets = () => {\r\n      let allPendingDataSet = []\r\n      dataToFetch.map((d, i) => {\r\n         const include = d.status.find(s => s.status === 'Pending')\r\n         if (include) {\r\n            return allPendingDataSet.push(include.count)\r\n         }\r\n         else {\r\n            return allPendingDataSet.push(0)\r\n         }\r\n      })\r\n      return allPendingDataSet\r\n   }\r\n\r\n   const getTotalAssetFailDataSets = () => {\r\n      let allFailDataSet = []\r\n      dataToFetch.map((d, i) => {\r\n         const include = d.status.find(s => s.status === 'Fail')\r\n         if (include) {\r\n            return allFailDataSet.push(include.count)\r\n         }\r\n         else {\r\n            return allFailDataSet.push(0)\r\n         }\r\n      })\r\n      return allFailDataSet\r\n   }\r\n\r\n   const totalAssets = {\r\n      labels: getTotalAssetLabels(),\r\n      datasets: [\r\n         {\r\n            label: 'Total Assets',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: colors,\r\n            borderColor: '#220046',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            barPercentage: 0.5,\r\n            barThickness: 20,\r\n            data: getTotalAssetDataSets()\r\n         },\r\n      ],\r\n   }\r\n\r\n   const totalAssetsPass = {\r\n      labels: getTotalAssetLabels(),\r\n      datasets: [\r\n         {\r\n            label: 'Pass',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: colors,\r\n            borderColor: '#220046',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: getTotalAssetPassDataSets()\r\n         },\r\n      ]\r\n   }\r\n\r\n   const totalAssetsFail = {\r\n      labels: getTotalAssetLabels(),\r\n      datasets: [\r\n         {\r\n            label: 'Fail',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: colors,\r\n            borderColor: '#220046',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: getTotalAssetFailDataSets()\r\n         },\r\n      ]\r\n   }\r\n\r\n   const totalAssetsPending = {\r\n      labels: getTotalAssetLabels(),\r\n      datasets: [\r\n         {\r\n            label: 'Pending',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: colors,\r\n            borderColor: '#220046',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            barPercentage: 0.5,\r\n            barThickness: 20,\r\n            data: getTotalAssetPendingDataSets()\r\n         },\r\n      ],\r\n   }\r\n\r\n   const clickOnMetric = () => {\r\n      history.push('/dashboard/crm/overview')\r\n   }\r\n\r\n   return (\r\n      <div className='slideContainer'>\r\n         <div className='col-md-12'>\r\n            <div className='col-md-12'>\r\n               <h5 className=\"component_heading mb-20\">Video QC <span>Charts are showing 24hrs data</span>\r\n                  <Link to={'/dashboard/crm/overview'}>View All\r\n                     <i className=\"zmdi zmdi-chevron-right\"></i>\r\n                  </Link>\r\n               </h5>\r\n            </div>\r\n         </div>\r\n\r\n         <Slider {...settings}>\r\n            <div onClick={() => clickOnMetric()} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Asset <Tooltip title=\"Info Content...\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{totalAssetsNumber}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart isConfig={true} labels={totalAssets.labels} datasets={totalAssets.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric()} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Pass <Tooltip title=\"Info Content...\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{totalAssetsPassNumber}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart dashbord-pi-chart\">\r\n                  <SpacePieChart labels={totalAssetsPass.labels} datasets={totalAssetsPass.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric()} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Fail <Tooltip title=\"Info Content...\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{totalAssetsFailNumber}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart dashbord-pi-chart\">\r\n                  <SpacePieChart labels={totalAssetsFail.labels} datasets={totalAssetsFail.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric()} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Pending <Tooltip title=\"Info Content...\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{totalAssetsPendingNumber}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart isConfig={true} labels={totalAssetsPending.labels} datasets={totalAssetsPending.datasets} />\r\n               </div>\r\n            </div>\r\n         </Slider>\r\n         <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', marginTop: 20 }}>\r\n            {\r\n               totalAssets?.labels?.map((lab, index) => {\r\n                  return (\r\n                     <div key={index} style={{ display: 'flex', flexDirection: 'row', marginRight: 20, height: '100%', alignItems: 'center' }}>\r\n                        <span style={{ borderRadius: '16px', backgroundColor: colors[index], border: '1px solid #ccc', width: '16px', height: '16px', marginRight: 10 }}></span>\r\n                        <h5 style={{ height: '100%', marginTop: 8 }}>{lab}</h5>\r\n                     </div>\r\n                  )\r\n\r\n               })\r\n            }\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default VideoQCSliderContainer ","/*eslint react-hooks/exhaustive-deps: \"off\"*/\r\nimport React, { useEffect } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport SimpleBarChart from './SimpleBarChart'\r\nimport StackedAreaChart from './StackedAreaChart'\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAverageRebufferingBufferLength, getAverageStartupBufferLength, getDegradationInUEI, getImprovementInUEI, getNumberOfMitigationApplied, setMetricType, setMetricTypeFullName, setTabValueMitigation } from 'Store/Actions';\r\nimport moment from 'moment';\r\nimport { adminMessage, isValidPermission } from 'Constants/constant';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nfunction MitigationSliderContainer(props) {\r\n   const dispatch = useDispatch()\r\n   const dataGraph = useSelector(state => state.qoeReducer);\r\n   const numberOfMitigationApplied = dataGraph?.number_of_mitigations_applied[0]?.all;\r\n   const numberOfMitigationAppliedUnit = dataGraph?.number_of_mitigations_applied[0]?.all?.unit;\r\n   const improvementInUEIGraph = dataGraph?.improvement_in_uei[0]?.all;\r\n   const improvementInUEIUnit = dataGraph?.improvement_in_uei[0]?.all?.unit;\r\n   const degradationInUEI = dataGraph?.degradation_in_uei[0]?.all;\r\n   const degradationInUEIUnit = dataGraph?.degradation_in_uei[0]?.all?.unit;\r\n   const averageStartupBufferLength = dataGraph?.average_startup_buffer_length[0]?.all\r\n   const averageStartupBufferLengthUnit = dataGraph?.average_startup_buffer_length[0]?.all?.unit\r\n   const averageRebufferingBufferLength = dataGraph?.average_rebuffering_buffer_length[0]?.all\r\n   const averageRebufferingBufferLengthUnit = dataGraph?.average_rebuffering_buffer_length[0]?.all?.unit\r\n   \r\n   const history = useHistory()\r\n   \r\n   const settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 300,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 1,\r\n      autoplay: false,\r\n      //arrows: true,\r\n      centerMode: false,\r\n      prevArrow: <img alt='left-arrow' src={`${process.env.PUBLIC_URL}/assets/left-arrow.svg`} width=\"15\" height=\"27\" />,\r\n      nextArrow: <img alt='right-arrow' src={`${process.env.PUBLIC_URL}/assets/right-arrow.svg`} width=\"15\" height=\"27\" />\r\n   };\r\n\r\n   const formatDataAndTime = (timestamp) => {\r\n      if(props.partnerDetail){\r\n         if(props.agr === '1h'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('hh:mm A')}`);\r\n         }\r\n         else if(props.agr === '1d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n         else if(props.agr === '2d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n         else if(props.agr === '6d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n      }\r\n      else{\r\n         return timestamp && timestamp.map(name => `${moment(name).format('hh:mm A')}`);\r\n      }\r\n   }\r\n\r\n   const noOfMitigation = {\r\n      labels: formatDataAndTime(numberOfMitigationApplied?.TimeStamp),\r\n      datasets: [\r\n         {\r\n            label: 'Number Of Mitigation Applied',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: numberOfMitigationApplied?.number_of_mitigations_applied\r\n         },\r\n      ]\r\n   };\r\n\r\n   const dataOne = {\r\n      labels: formatDataAndTime(degradationInUEI?.TimeStamp),\r\n      datasets: [\r\n         {\r\n            label: 'Degradation in UEI',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: degradationInUEI?.degradation_in_uei\r\n         },\r\n      ]\r\n   };\r\n\r\n   const improvementInUEI = {\r\n      labels: formatDataAndTime(improvementInUEIGraph?.TimeStamp),\r\n      datasets: [\r\n         {\r\n            label: 'Improvement In UEI',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: improvementInUEIGraph?.improvement_in_uei\r\n         },\r\n      ]\r\n   };\r\n\r\n   const average_data = {\r\n      labels: formatDataAndTime(averageStartupBufferLength?.TimeStamp),\r\n      datasets: [\r\n         {\r\n            label: 'Average Startup Buffer Length',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: averageStartupBufferLength?.average_startup_buffer_length\r\n         },\r\n      ]\r\n   };\r\n\r\n   const meanStartupBitrate = {\r\n      labels: formatDataAndTime(averageRebufferingBufferLength?.TimeStamp),\r\n      datasets: [\r\n         {\r\n            label: 'Average Rebuffering Buffer Length',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: averageRebufferingBufferLength?.average_rebuffering_buffer_length\r\n         },\r\n      ]\r\n   };\r\n\r\n   useEffect(() => {\r\n      if (props.partnerDetail) {\r\n            dispatch(getNumberOfMitigationApplied(dispatch, props.toDate, props.fromDate, props.agr))\r\n            dispatch(getImprovementInUEI(dispatch, props.toDate, props.fromDate, props.agr))\r\n            dispatch(getDegradationInUEI(dispatch, props.toDate, props.fromDate, props.agr))\r\n            dispatch(getAverageStartupBufferLength(dispatch, props.toDate, props.fromDate, props.agr))\r\n            dispatch(getAverageRebufferingBufferLength(dispatch, props.toDate, props.fromDate, props.agr))\r\n      }\r\n   }, [props.agr])\r\n\r\n\r\n   useEffect(() => {\r\n      if (dataGraph?.number_of_mitigations_applied.length > 0 && (Array.isArray(dataGraph?.improvement_in_uei) || dataGraph?.improvement_in_uei.length > 0) && (Array.isArray(dataGraph?.degradation_in_uei) || dataGraph?.degradation_in_uei.length > 0) && dataGraph?.average_startup_buffer_length.length > 0 && dataGraph?.average_rebuffering_buffer_length.length > 0) {\r\n      }\r\n      else {\r\n         if (!props.partnerDetail) {\r\n            let toDate = Math.floor((new Date()).getTime() / 1000.0);\r\n            let fromDate = Math.floor((new Date()).getTime() / 1000.0) - (24 * 3600);\r\n            let aggregation = '1h'\r\n            dispatch(getNumberOfMitigationApplied(dispatch, toDate, fromDate, aggregation))\r\n            dispatch(getImprovementInUEI(dispatch, toDate, fromDate, aggregation))\r\n            dispatch(getDegradationInUEI(dispatch, toDate, fromDate, aggregation))\r\n            dispatch(getAverageStartupBufferLength(dispatch, toDate, fromDate, aggregation))\r\n            dispatch(getAverageRebufferingBufferLength(dispatch, toDate, fromDate, aggregation))\r\n         }\r\n      }\r\n   }, []);\r\n\r\n   const clickOnMetric = (type,fulname) => {\r\n   if(isValidPermission(\"READ_MITIGATION\")){\r\n      dispatch(setTabValueMitigation(1))\r\n      history.push('/dashboard/crm/mitigation')\r\n      dispatch(setMetricType(type))\r\n      dispatch(setMetricTypeFullName(fulname));\r\n   }else{\r\n    NotificationManager.error(adminMessage.message)\r\n   }\r\n\r\n   }\r\n\r\n   function round(num, digits) {\r\n      const lookup = [\r\n        { value: 1, symbol: \"\" },\r\n        { value: 1e3, symbol: \"k\" },\r\n        { value: 1e6, symbol: \"M\" },\r\n        { value: 1e9, symbol: \"G\" },\r\n        { value: 1e12, symbol: \"T\" },\r\n        { value: 1e15, symbol: \"P\" },\r\n        { value: 1e18, symbol: \"E\" }\r\n      ];\r\n      const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n      var item = lookup.slice().reverse().find(function(item) {\r\n        return num >= item.value;\r\n      });\r\n      return item ? (num / item.value).toFixed(digits).replace(rx, \"$1\") + item.symbol : \"0\";\r\n    }\r\n\r\n   return (\r\n      <div className='slideContainer'>\r\n         <div className='col-md-12'>\r\n            <div className='col-md-12'>\r\n               <h5 className=\"component_heading mb-20\">Mitigation <br/><span>Charts are showing 24hrs data</span>\r\n                  <Link onClick={()=> dispatch(setTabValueMitigation(1))} to={isValidPermission(\"READ_MITIGATION\")?'/dashboard/crm/mitigation':null}>View All\r\n                     <i className=\"zmdi zmdi-chevron-right\"></i>\r\n                  </Link>\r\n               </h5>\r\n            </div>\r\n         </div>\r\n\r\n         <Slider {...settings}>\r\n            <div onClick={() => clickOnMetric('number_of_mitigations_applied',\"Number Of Mitigations Applied\")} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Number Of Mitigation Applied <Tooltip title=\"Number Of Mitigation Applied of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                 \r\n                  <h2>{round(numberOfMitigationApplied?.total_sum,2)} {numberOfMitigationAppliedUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={noOfMitigation.labels} datasets={noOfMitigation.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('degradation_in_uei','Degradation In UEI')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Degradation in UEI <Tooltip title=\"Degradation in UEI of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(degradationInUEI?.total_sum,2)} {degradationInUEIUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={dataOne.labels} datasets={dataOne.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('improvement_in_uei','Improvement In UEI')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Improvement in UEI <Tooltip title=\"Improvement in UEI of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(improvementInUEIGraph?.total_sum,2)} {improvementInUEIUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={improvementInUEI.labels} datasets={improvementInUEI.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('average_startup_buffer_length','Average Startup Buffer Length')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Startup Buffer Length <Tooltip title=\"Average Startup Buffer Length of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(averageStartupBufferLength?.total_sum,2)} {averageStartupBufferLengthUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={average_data.labels} datasets={average_data.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('average_rebuffering_buffer_length','Average Rebuffering Buffer Length')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Rebuffering Buffer Length <Tooltip title=\"Average Rebuffering Buffer Length of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(averageRebufferingBufferLength?.total_sum,2)} {averageRebufferingBufferLengthUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={meanStartupBitrate.labels} datasets={meanStartupBitrate.datasets} />\r\n               </div>\r\n            </div>\r\n         </Slider>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MitigationSliderContainer","import React from 'react';\r\nimport Slider from \"react-slick\";\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport SimpleBarChart from './SimpleBarChart'\r\nimport StackedAreaChart from './StackedAreaChart'\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport { Link } from 'react-router-dom';\r\nimport { isValidPermission } from 'Constants/constant';\r\n\r\nfunction AIPipelineSliderContainer(props) {\r\n   const settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 300,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 1,\r\n      autoplay: false,\r\n      centerMode: false,\r\n      prevArrow: <img alt='left-arrow' src={`${process.env.PUBLIC_URL}/assets/left-arrow.svg`} width=\"15\" height=\"27\" />,\r\n      nextArrow: <img alt='right-arrow' src={`${process.env.PUBLIC_URL}/assets/right-arrow.svg`} width=\"15\" height=\"27\" />\r\n   };\r\n\r\n   const getData = (name) => {\r\n      return {\r\n         labels: [10, 11, 12, 13, 14, 15, 16],\r\n         datasets: [\r\n            {\r\n               label: name,\r\n               fill: false,\r\n               lineTension: 0.1,\r\n               borderColor: '#0292ED',\r\n               backgroundColor: '#FF4D7D',\r\n               pointRadius: 3,\r\n               pointHitRadius: 0,\r\n               data: [100, 240, 300, 290, 300, 440, 232]\r\n            },\r\n         ]\r\n      }\r\n   }\r\n   \r\n   return (\r\n      <div className='slideContainer'>\r\n         <div className='col-md-12'>\r\n            <div className='col-md-12'>\r\n               <h5 className=\"component_heading mb-20\">AI Pipeline Insights(Expert system dashboard) <br/><span>Charts are showing 24hrs data</span>\r\n               \r\n               <Link to={isValidPermission(\"READ_AI_PIPELINE_INSIGHT\")?'/dashboard/crm/detectedanomalies':null}>View All\r\n                     <i className=\"zmdi zmdi-chevron-right\"></i>\r\n                  </Link>\r\n               </h5>\r\n            </div>\r\n         </div>\r\n\r\n         <Slider {...settings}>\r\n            <div className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Total Anomalies Detected <Tooltip title=\"Total Anomalies Detected of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>225</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={getData('Total Anomalies Detected').labels} datasets={getData('Total Anomalies Detected').datasets} />\r\n               </div>\r\n            </div>\r\n            <div className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Total Anomalies in RCA Buckets <Tooltip title=\"Total Anomalies in RCA Buckets of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>125</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={getData('Total Anomalies in RCA Buckets').labels} datasets={getData('Total Anomalies in RCA Buckets').datasets} />\r\n               </div>\r\n            </div>\r\n            <div className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Total Mitigation Applied <Tooltip title=\"Total Mitigation Applied of last 24 hr.\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>26%</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={getData('Total Mitigation Applied').labels} datasets={getData('Total Mitigation Applied').datasets} />\r\n               </div>\r\n            </div>\r\n            <div className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Reviewed Anomalies <Tooltip title=\"Reviewed Anomalies of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>18%</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={getData('Anomalies Cluster').labels} datasets={getData('Anomalies Cluster').datasets} />\r\n               </div>\r\n            </div>\r\n         </Slider>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default AIPipelineSliderContainer","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nfunction StackedAreaChartComponent(props) {\r\n   const { labels, datasets } = props;\r\n   const data = {\r\n      labels,\r\n      datasets\r\n   };\r\n\r\n   console.log(\"abcd---\",props);\r\n   const options = {\r\n        elements: {\r\n          point:{\r\n              radius: 0\r\n          }\r\n      },\r\n      tooltips: {\r\n        enabled: false\r\n      },\r\n      plugins: {\r\n        tooltip: {\r\n          enabled: false\r\n        },\r\n        legend: {\r\n          display: false\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          display: false\r\n        },\r\n        y: {\r\n          display: false\r\n        }\r\n      }\r\n    }\r\n   return (\r\n      <Line data={data} options={options} />\r\n   );\r\n}\r\n\r\nexport default StackedAreaChartComponent;","/*eslint react-hooks/exhaustive-deps: \"off\"*/\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  MenuItem,\r\n  IconButton,\r\n  ButtonGroup,\r\n  Button,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport StackedAreaChart from \"./StackedAreaChart\";\r\nimport RctPageLoader from \"Components/RctPageLoader/RctPageLoader\";\r\n//import { getUniqueFilters, getWidgetDataRequest } from 'Store/Actions';\r\nimport {\r\n  checkVideoFailure,\r\n  getAttempts,\r\n  getAverageBitRate,\r\n  getAverageFramrate,\r\n  getAveragePercentCompletion,\r\n  getBandwith,\r\n  getConcurrentPlays,\r\n  getConnectionInducedRebufferingRatio,\r\n  getEndedPlay,\r\n  getEndedPlaysPerUniqueDevice,\r\n  getExitBeforeVideoStart,\r\n  getMinutesPerUniqueDevices,\r\n  getRebufferingPercentage,\r\n  getRebufferingRatio,\r\n  getRenderingQuality,\r\n  getTotalMinutesWatched,\r\n  getUniqueDevices,\r\n  getUniqueFilters,\r\n  getUniqueViewers,\r\n  getUserAttrition,\r\n  getVideoFailures,\r\n  getVideoPlaysAndFailure,\r\n  getVideoRestartTime,\r\n  getVideoStartTime,\r\n  getWidgetDataRequest,\r\n  successfullPlays,\r\n} from \"Store/Actions\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport { createFileName } from \"use-react-screenshot\";\r\nimport { formatTime } from \"Constants/constant\";\r\nimport metricsJsonData from \"../../Routes/qoe/dashboard/matric.json\";\r\nimport axios from \"axios\";\r\n\r\nconst allMatrics = [\r\n  {\r\n    value: \"sort\",\r\n    label: \"All\",\r\n  },\r\n  {\r\n    value: \"realtime\",\r\n    label: \"Real-Time Key Insights\",\r\n  },\r\n  {\r\n    value: \"userengagement\",\r\n    label: \"User Engagement Metrics\",\r\n  },\r\n  {\r\n    value: \"qualityexperience\",\r\n    label: \"Quality Of Experience\",\r\n  },\r\n];\r\n\r\nfunction DashboardAnalysis(props) {\r\n  const dispatch = useDispatch();\r\n  const realdata = useSelector((state) => state.qoeReducer);\r\n  const [yesterdayData, setYesterdayData] = useState([]);\r\n  const [backupYesterdayData, setBackupYesterdayData] = useState([]);\r\n  const [selectedDevices, setSelectedDevices] = useState(\"All\");\r\n  const [selectedDates, setSelectedDates] = useState(\"24hr\");\r\n  const [current, setCurrent] = useState(\"1d\");\r\n  const [last, setLast] = useState(\"7d\");\r\n  const [yesterdayDate, setYesterdayDate] = useState(\r\n    Math.floor(new Date().getTime() / 1000.0) - 48 * 3600\r\n  );\r\n  const [fromDate, setFromDate] = useState(\r\n    Math.floor(new Date().getTime() / 1000.0) - 24 * 3600\r\n  );\r\n  const [loading, isLoading] = useState(false);\r\n  const [sortMatrics, setSortMatrics] = useState(\"sort\");\r\n  const [filterMetric, setFilterMetric] = useState(\"sort\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [analysisBtn, setanalysisBtn] = useState(false);\r\n  const [dashboardAnalysisCharData, setDashboardAnalysisCharData] = useState(\r\n    []\r\n  );\r\n  const [agrr, setAgr] = useState(\"1h\");\r\n  const [dashboardLoader, setDashboardLoader] = useState(false);\r\n\r\n  let toDate = Math.floor(new Date().getTime() / 1000.0);\r\n  let baseURL = \"http://3.6.164.157:8080/\"; //\"https://qc7.qoeqoe.com/\"//\"https://qoe.qoetech.com:8005/\"--replica of dev//\"https://qc7.qoeqoe.com/\"//\"https://qcotp.qoetech.com:4444/\"//\"http://3.108.121.176:5002/\" --prev//\r\n  let widgetArray = [];\r\n\r\n  const handleChange = (event) => {\r\n    setSortMatrics(event.target.value);\r\n    if (event.target.value === \"realtime\") {\r\n      setFilterMetric(event.target.value);\r\n    } else if (event.target.value === \"userengagement\") {\r\n      setFilterMetric(event.target.value);\r\n    } else if (event.target.value === \"qualityexperience\") {\r\n      setFilterMetric(event.target.value);\r\n    } else {\r\n      setFilterMetric(event.target.value);\r\n    }\r\n  };\r\n\r\n  const updateDate = (val) => {\r\n    setDashboardLoader(true);\r\n    setFilterMetric(\"sort\");\r\n    setSortMatrics(\"sort\");\r\n    setSearchText(\"\");\r\n    setSelectedDates(val);\r\n    setanalysisBtn(true);\r\n    setTimeout(() => {\r\n      setDashboardLoader(false);\r\n    }, 5000);\r\n    switch (val) {\r\n      case \"Yearly\": {\r\n        setCurrent(\"365d\");\r\n        setLast(\"730d\");\r\n        let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n        let fromDate =\r\n          Math.floor(new Date().getTime() / 1000.0) - 12 * 30 * 24 * 3600;\r\n        let yesterdayDate =\r\n          Math.floor(new Date().getTime() / 1000.0) - 24 * 30 * 24 * 3600;\r\n        setYesterdayDate(yesterdayDate);\r\n        setFromDate(fromDate);\r\n        setAgr(\"30d\");\r\n        if (selectedDevices !== \"All\") {\r\n          setMetricesDevicesData(\r\n            selectedDevices,\r\n            \"365d\",\r\n            \"730d\",\r\n            fromDate,\r\n            yesterdayDate,\r\n            true\r\n          );\r\n          commonApiMetrices(\r\n            selectedDevices,\r\n            true,\r\n            \"30d\",\r\n            currentDate,\r\n            fromDate\r\n          );\r\n        } else {\r\n          setTimeMetricesData(\"365d\", \"730d\", fromDate, yesterdayDate, true);\r\n          commonApiMetrices(\"\", true, \"30d\", currentDate, fromDate);\r\n        }\r\n        return;\r\n      }\r\n\r\n      case \"Monthly\": {\r\n        setCurrent(\"30d\");\r\n        setLast(\"60d\");\r\n        let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n        let fromDate =\r\n          Math.floor(new Date().getTime() / 1000.0) - 30 * 24 * 3600;\r\n        let yesterdayDate =\r\n          Math.floor(new Date().getTime() / 1000.0) - 60 * 24 * 3600;\r\n        setYesterdayDate(yesterdayDate);\r\n        setFromDate(fromDate);\r\n        setAgr(\"2d\");\r\n        if (selectedDevices !== \"All\") {\r\n          setMetricesDevicesData(\r\n            selectedDevices,\r\n            \"30d\",\r\n            \"60d\",\r\n            fromDate,\r\n            yesterdayDate,\r\n            true\r\n          );\r\n          commonApiMetrices(selectedDevices, true, \"2d\", currentDate, fromDate);\r\n        } else {\r\n          setTimeMetricesData(\"30d\", \"60d\", fromDate, yesterdayDate, true);\r\n          commonApiMetrices(\"\", true, \"2d\", currentDate, fromDate);\r\n        }\r\n        return;\r\n      }\r\n      case \"15days\": {\r\n        setCurrent(\"15d\");\r\n        setLast(\"30d\");\r\n        let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n        let fromDate =\r\n          Math.floor(new Date().getTime() / 1000.0) - 15 * 24 * 3600;\r\n        let yesterdayDate =\r\n          Math.floor(new Date().getTime() / 1000.0) - 30 * 24 * 3600;\r\n        //temporary ----------\r\n        // let fromDate = Math.floor((new Date()).getTime() / 1000.0) - (15  * 3600)\r\n        // let yesterdayDate = Math.floor((new Date()).getTime() / 1000.0) - (30  * 3600);\r\n        //-------------------------------------------------------------\r\n        setYesterdayDate(yesterdayDate);\r\n        setFromDate(fromDate);\r\n        setAgr(\"2d\");\r\n        if (selectedDevices !== \"All\") {\r\n          setMetricesDevicesData(\r\n            selectedDevices,\r\n            \"15d\",\r\n            \"30d\",\r\n            fromDate,\r\n            yesterdayDate,\r\n            true\r\n          );\r\n          commonApiMetrices(selectedDevices, true, \"2d\", currentDate, fromDate);\r\n        } else {\r\n          setTimeMetricesData(\"15d\", \"30d\", fromDate, yesterdayDate, true);\r\n          commonApiMetrices(\"\", true, \"2d\", currentDate, fromDate);\r\n        }\r\n        return;\r\n      }\r\n      case \"7days\": {\r\n        setCurrent(\"7d\");\r\n        setLast(\"14d\");\r\n        let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n        let fromDate =\r\n          Math.floor(new Date().getTime() / 1000.0) - 7 * 24 * 3600;\r\n        let yesterdayDate =\r\n          Math.floor(new Date().getTime() / 1000.0) - 14 * 24 * 3600;\r\n        //temporary\r\n        // let fromDate = Math.floor((new Date()).getTime() / 1000.0) - (7 * 3600);\r\n        // let yesterdayDate = Math.floor((new Date()).getTime() / 1000.0) - (14 * 3600);\r\n        // //-------------\r\n        setYesterdayDate(yesterdayDate);\r\n        setFromDate(fromDate);\r\n        setAgr(\"1d\");\r\n\r\n        console.log(\"7d\", currentDate, fromDate);\r\n        if (selectedDevices !== \"All\") {\r\n          setMetricesDevicesData(\r\n            selectedDevices,\r\n            \"7d\",\r\n            \"14d\",\r\n            fromDate,\r\n            yesterdayDate,\r\n            true\r\n          );\r\n          commonApiMetrices(selectedDevices, true, \"1d\", currentDate, fromDate);\r\n        } else {\r\n          setTimeMetricesData(\"7d\", \"14d\", fromDate, yesterdayDate, true);\r\n          commonApiMetrices(\"\", true, \"1d\", currentDate, fromDate);\r\n        }\r\n        return;\r\n      }\r\n      case \"24hr\": {\r\n        setCurrent(\"1d\");\r\n        setLast(\"7d\");\r\n        let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n        let fromDate = Math.floor(new Date().getTime() / 1000.0) - 24 * 3600;\r\n        let yesterdayDate =\r\n          Math.floor(new Date().getTime() / 1000.0) - 48 * 3600;\r\n        setYesterdayDate(yesterdayDate);\r\n        setFromDate(fromDate);\r\n        setAgr(\"1h\");\r\n        if (selectedDevices !== \"All\") {\r\n          setMetricesDevicesData(\r\n            selectedDevices,\r\n            \"1d\",\r\n            \"7d\",\r\n            fromDate,\r\n            yesterdayDate,\r\n            true\r\n          );\r\n          commonApiMetrices(selectedDevices, true, \"1h\", currentDate, fromDate);\r\n        } else {\r\n          setTimeMetricesData(\"1d\", \"7d\", fromDate, yesterdayDate, true);\r\n          commonApiMetrices(\"\", true, \"1h\", currentDate, fromDate);\r\n        }\r\n        return;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const setTimeMetricesData = async (\r\n    current,\r\n    last,\r\n    fromDate,\r\n    yesterdayDate,\r\n    showLoader\r\n  ) => {\r\n    showLoader && isLoading(true);\r\n\r\n    // let  toDateShow = toDate\r\n    let fromDateShow = fromDate;\r\n    let yesterdayDateShow = yesterdayDate;\r\n    await getWidget(\r\n      \"attempts\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"average_bitrate\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"average_framerate\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"average_percentage_completion\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"bandwidth\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"exit_before_video_starts\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"minutes_per_unique_devices\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"rebuffering_percentage\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"rebuffering_ratio\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"succesful_plays\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"total_minutes_watched\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"user_attrition\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"video_playback_failures\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"video_start_failures\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"video_start_time\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"video_restart_time\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"rendering_quality\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"concurrent_plays\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"connection_induced_rebuffering_ratio\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"unique_devices\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"unique_viewers\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"ended_plays\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"ended_plays_per_unique_devices\",\r\n      \"\",\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    //  await getWidget(\"play_attempts\", \"\", fromDateShow, yesterdayDateShow, showLoader)\r\n    // await getWidget(\"play_attempts\", \"\", fromDateShow, yesterdayDateShow, showLoader)\r\n\r\n    // await getWidget(\"ended_plays_per_unique_devices\", \"\", fromDateShow, yesterdayDateShow, showLoader)\r\n    // await getWidget(\"ended_plays_per_unique_devices\", \"\", fromDateShow, yesterdayDateShow, showLoader)\r\n  };\r\n\r\n  const commonApiMetrices = async (\r\n    d,\r\n    showLoader,\r\n    agrr,\r\n    currenttime,\r\n    fromtime\r\n  ) => {\r\n    // setDashboardAnalysisCharData([])\r\n    showLoader && isLoading(true);\r\n    await getMetrices(\"attempts\", agrr, d, showLoader, currenttime, fromtime);\r\n    await getMetrices(\r\n      \"average_bitrate\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"average_framerate\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"average_percentage_completion\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\"bandwidth\", agrr, d, showLoader, currenttime, fromtime);\r\n    await getMetrices(\r\n      \"exit_before_video_starts\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"minutes_per_unique_devices\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"rebuffering_percentage\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"rebuffering_ratio\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"succesful_plays\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"total_minutes_watched\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"user_attrition\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"video_playback_failures\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"video_start_failures\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"video_start_time\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"video_restart_time\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"rendering_quality\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"concurrent_plays\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"connection_induced_rebuffering_ratio\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"unique_devices\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"unique_viewers\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"ended_plays\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    await getMetrices(\r\n      \"ended_plays_per_unique_devices\",\r\n      agrr,\r\n      d,\r\n      showLoader,\r\n      currenttime,\r\n      fromtime\r\n    );\r\n    //await getMetrices(\"play_attempts\", agrr, d, showLoader)\r\n  };\r\n\r\n  const getWidget = async (\r\n    metrices_name,\r\n    selectedDevices,\r\n    fromDate,\r\n    yesterdayDate,\r\n    showLoader\r\n  ) => {\r\n    showLoader && isLoading(true);\r\n    let toDateShow;\r\n    let fromDateShow;\r\n    let yesterdayDateShow;\r\n    if (metrices_name == \"concurrent_plays\" && selectedDates == \"24hr\") {\r\n      fromDateShow = Math.floor(new Date().getTime() / 1000.0) - 1 * 60;\r\n      toDateShow = Math.floor(new Date().getTime() / 1000.0);\r\n      yesterdayDateShow = Math.floor(new Date().getTime() / 1000.0) - 2 * 60;\r\n    } else {\r\n      fromDateShow = fromDate;\r\n      toDateShow = toDate;\r\n      yesterdayDateShow = yesterdayDate;\r\n    }\r\n\r\n    const requestBodyAnother = {\r\n      device_platform: selectedDevices,\r\n      metrices_name: metrices_name,\r\n    };\r\n\r\n    const requestOptAnother = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(requestBodyAnother),\r\n    };\r\n    try {\r\n      fetch(\r\n        `${baseURL}api/v2/percentage_change?to_time=${toDateShow}&from_time_24hrs=${fromDateShow}&from_time_48hrs=${yesterdayDateShow}`,\r\n        requestOptAnother\r\n      )\r\n        .then((response) => response.json())\r\n        .then((res) => {\r\n          if (res.length != 0) {\r\n            widgetArray.push(res[0]);\r\n            // var res = metricsJsonData.map(obj => data.find(o => o.metricname == obj.metricname) || obj);\r\n            var arr = metricsJsonData.concat(widgetArray).reduce(\r\n              function (prev, current, index, array) {\r\n                if (!(current?.metric_key_name in prev?.keys)) {\r\n                  prev.keys[current?.metric_key_name] = index;\r\n                  prev.result.push(current);\r\n                } else {\r\n                  prev.result[prev.keys[current?.metric_key_name]] = current;\r\n                }\r\n\r\n                return prev;\r\n              },\r\n              { result: [], keys: {} }\r\n            ).result;\r\n          }\r\n\r\n          setYesterdayData(arr);\r\n          setBackupYesterdayData(arr);\r\n          showLoader && isLoading(false);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"getWidget\", error);\r\n    }\r\n  };\r\n\r\n  const getMetrices = async (\r\n    metricName,\r\n    agr,\r\n    platform,\r\n    showLoader,\r\n    currenttime,\r\n    fromtime\r\n  ) => {\r\n    if (currenttime == undefined && fromtime == undefined) {\r\n      return;\r\n    }\r\n    showLoader && isLoading(true);\r\n    const requestBody = {\r\n      metricname: metricName,\r\n      content_partner: localStorage.getItem(\"contentPartner\")\r\n        ? [localStorage.getItem(\"contentPartner\")]\r\n        : [],\r\n      device_model: [],\r\n      device_platform: platform ? [platform] : [],\r\n      content_type: [],\r\n      cdn: [],\r\n      location: [],\r\n      aggregation_interval: agr,\r\n    };\r\n    const url = `${baseURL}api/metrics?to_time=${currenttime}&from_time=${fromtime}`;\r\n    try {\r\n      const response = await axios.post(url, requestBody);\r\n      const { data } = response;\r\n      if (platform) {\r\n        setDashboardAnalysisCharData((d) => d.concat({ [metricName]: data }));\r\n      } else {\r\n        setDashboardAnalysisCharData((d) => d.concat({ [metricName]: data }));\r\n      }\r\n      if ((metricName = \"ended_plays_per_unique_devices\"))\r\n        showLoader && isLoading(false);\r\n    } catch (error) {\r\n      console.log(\"getMetrices\", error);\r\n    }\r\n  };\r\n\r\n  const setMetricesDevicesData = async (\r\n    selectedDevices,\r\n    current,\r\n    last,\r\n    fromDate,\r\n    yesterdayDate,\r\n    showLoader\r\n  ) => {\r\n    showLoader && isLoading(true);\r\n    //let toDateShow = toDate\r\n    let fromDateShow = fromDate;\r\n    let yesterdayDateShow = yesterdayDate;\r\n    await getWidget(\r\n      \"average_bitrate\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"attempts\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"average_framerate\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"average_percentage_completion\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"bandwidth\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"exit_before_video_starts\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"minutes_per_unique_devices\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"rebuffering_percentage\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"rebuffering_ratio\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"succesful_plays\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"total_minutes_watched\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"user_attrition\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"video_playback_failures\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"video_start_failures\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"video_start_time\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"video_restart_time\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"rendering_quality\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"concurrent_plays\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"connection_induced_rebuffering_ratio\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"unique_devices\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"unique_viewers\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"ended_plays\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    await getWidget(\r\n      \"ended_plays_per_unique_devices\",\r\n      selectedDevices,\r\n      fromDateShow,\r\n      yesterdayDateShow,\r\n      showLoader\r\n    );\r\n    // await getWidget(\"play_attempts\", selectedDevices, fromDateShow, yesterdayDateShow, showLoader)\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedDevices !== \"All\") {\r\n      setMetricesDevicesData(\r\n        selectedDevices,\r\n        current,\r\n        last,\r\n        fromDate,\r\n        yesterdayDate,\r\n        true\r\n      );\r\n    } else {\r\n      setTimeMetricesData(current, last, fromDate, yesterdayDate, true);\r\n    }\r\n  }, [selectedDevices]);\r\n\r\n  useEffect(() => {\r\n    setanalysisBtn(false);\r\n    const isEmpty = Object.keys(realdata?.filters).length === 0;\r\n    if (isEmpty) {\r\n      dispatch(getUniqueFilters(dispatch));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (window.location.href.includes(\"dashboard/crm/dashboard\")) {\r\n        if (selectedDevices !== \"All\") {\r\n          setMetricesDevicesData(\r\n            selectedDevices,\r\n            current,\r\n            last,\r\n            fromDate,\r\n            yesterdayDate,\r\n            false\r\n          );\r\n          //  dispatch(getWidgetDataRequest(dispatch, false))\r\n          switch (selectedDates) {\r\n            case \"Yearly\": {\r\n              let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n              let fromDate =\r\n                Math.floor(new Date().getTime() / 1000.0) - 12 * 30 * 24 * 3600;\r\n              commonApiMetrices(\r\n                selectedDevices,\r\n                false,\r\n                \"30d\",\r\n                currentDate,\r\n                fromDate\r\n              );\r\n              return;\r\n            }\r\n\r\n            case \"Monthly\": {\r\n              let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n              let fromDate =\r\n                Math.floor(new Date().getTime() / 1000.0) - 30 * 24 * 3600;\r\n              commonApiMetrices(\r\n                selectedDevices,\r\n                false,\r\n                \"2d\",\r\n                currentDate,\r\n                fromDate\r\n              );\r\n              return;\r\n            }\r\n            case \"15days\": {\r\n              let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n              let fromDate =\r\n                Math.floor(new Date().getTime() / 1000.0) - 15 * 24 * 3600;\r\n              commonApiMetrices(\r\n                selectedDevices,\r\n                false,\r\n                \"1d\",\r\n                currentDate,\r\n                fromDate\r\n              );\r\n              return;\r\n            }\r\n            case \"7days\": {\r\n              let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n              let fromDate =\r\n                Math.floor(new Date().getTime() / 1000.0) - 7 * 24 * 3600;\r\n              commonApiMetrices(\r\n                selectedDevices,\r\n                false,\r\n                \"1d\",\r\n                currentDate,\r\n                fromDate\r\n              );\r\n              return;\r\n            }\r\n            case \"24hr\": {\r\n              let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n              let fromDate =\r\n                Math.floor(new Date().getTime() / 1000.0) - 24 * 3600;\r\n              commonApiMetrices(\r\n                selectedDevices,\r\n                false,\r\n                \"1h\",\r\n                currentDate,\r\n                fromDate\r\n              );\r\n              return;\r\n            }\r\n            default:\r\n              return;\r\n          }\r\n        } else {\r\n          setTimeMetricesData(current, last, fromDate, yesterdayDate, false);\r\n          switch (selectedDates) {\r\n            case \"Yearly\": {\r\n              let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n              let fromDate =\r\n                Math.floor(new Date().getTime() / 1000.0) - 12 * 30 * 24 * 3600;\r\n              commonApiMetrices(\"\", false, \"30d\", currentDate, fromDate);\r\n              return;\r\n            }\r\n\r\n            case \"Monthly\": {\r\n              let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n              let fromDate =\r\n                Math.floor(new Date().getTime() / 1000.0) - 30 * 24 * 3600;\r\n              commonApiMetrices(\"\", false, \"2d\", currentDate, fromDate);\r\n              return;\r\n            }\r\n            case \"15days\": {\r\n              let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n              let fromDate =\r\n                Math.floor(new Date().getTime() / 1000.0) - 15 * 24 * 3600;\r\n              commonApiMetrices(\"\", false, \"1d\", currentDate, fromDate);\r\n              return;\r\n            }\r\n            case \"7days\": {\r\n              let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n              let fromDate =\r\n                Math.floor(new Date().getTime() / 1000.0) - 7 * 24 * 3600;\r\n              commonApiMetrices(\"\", false, \"1d\", currentDate, fromDate);\r\n              return;\r\n            }\r\n            case \"24hr\": {\r\n              let currentDate = Math.floor(new Date().getTime() / 1000.0);\r\n              let fromDate =\r\n                Math.floor(new Date().getTime() / 1000.0) - 24 * 3600;\r\n              commonApiMetrices(\"\", false, \"1h\", currentDate, fromDate);\r\n              return;\r\n            }\r\n            default:\r\n              return;\r\n          }\r\n          //  dispatch(getWidgetDataRequest(dispatch, false))\r\n        }\r\n      } else {\r\n        clearInterval(interval);\r\n      }\r\n    }, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [selectedDevices, current, last, fromDate, yesterdayDate]);\r\n\r\n  const searchMetricName = (e) => {\r\n    setSearchText(e.target.value);\r\n    // setFilterMetric('sort')\r\n    // setSortMatrics('sort')\r\n    if (e.target.value !== \"\") {\r\n      const data = backupYesterdayData.filter((a) =>\r\n        a.metricname.toLowerCase().includes(e.target.value.toLowerCase())\r\n      );\r\n      setYesterdayData(data);\r\n    } else {\r\n      setYesterdayData(backupYesterdayData);\r\n    }\r\n  };\r\n\r\n  const getImage = () => {\r\n    var node = document.querySelector(\".full-table\");\r\n    var options = {\r\n      quality: 1,\r\n      bgcolor: \"#ffffff\",\r\n    };\r\n    domtoimage\r\n      .toPng(node, options)\r\n      .then(function (dataUrl) {\r\n        const a = document.createElement(\"a\");\r\n        a.href = dataUrl;\r\n        a.download = createFileName(\"png\", \"Analysis\");\r\n        a.click();\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong!\", error);\r\n      });\r\n  };\r\n\r\n  const findChartData = (name, color, change_24hrs, change_48hrs) => {\r\n    const arrayToObject3 = (arr) =>\r\n      Object.assign({}, ...arr.map((item) => item));\r\n    let finalchartData = {};\r\n    finalchartData = dashboardAnalysisCharData; //arrayToObject3(dashboardAnalysisCharData);\r\n    finalchartData = arrayToObject3(dashboardAnalysisCharData);\r\n\r\n    if (analysisBtn && Object.keys(finalchartData).length > 0) {\r\n      if (selectedDevices == \"Android\") {\r\n        // console.log(\"--chart1-android22\",finalchartData[name][selectedDevices][name]);\r\n        return (\r\n          <>\r\n            {name &&\r\n            finalchartData[name] &&\r\n            finalchartData[name][1]?.[selectedDevices]?.time_stamp.length >\r\n              0 ? (\r\n              <div className=\"chartBox\">\r\n                <StackedAreaChart\r\n                  labels={formatTime(\r\n                    finalchartData[name][1]?.[selectedDevices]?.time_stamp\r\n                  )}\r\n                  datasets={[\r\n                    {\r\n                      borderColor:\r\n                        change_24hrs == change_48hrs\r\n                          ? \"#404040\"\r\n                          : color\r\n                          ? \"#90EE90\"\r\n                          : \"#FF7F7F\",\r\n                      data: finalchartData[name][1]?.[selectedDevices][name],\r\n                    },\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <span className=\"stright-line\">na</span>\r\n            )}\r\n          </>\r\n        );\r\n      } else if (selectedDevices == \"iOS\") {\r\n        return (\r\n          <>\r\n            {name &&\r\n            finalchartData[name] &&\r\n            finalchartData[name][1]?.[selectedDevices]?.time_stamp.length >\r\n              0 ? (\r\n              <div className=\"chartBox\">\r\n                <StackedAreaChart\r\n                  labels={formatTime(\r\n                    finalchartData[name][1]?.[selectedDevices]?.time_stamp\r\n                  )}\r\n                  datasets={[\r\n                    {\r\n                      borderColor:\r\n                        change_24hrs == change_48hrs\r\n                          ? \"#404040\"\r\n                          : color\r\n                          ? \"#90EE90\"\r\n                          : \"#FF7F7F\",\r\n                      data: finalchartData[name][1]?.[selectedDevices][name],\r\n                    },\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <span className=\"stright-line\">na</span>\r\n            )}\r\n          </>\r\n        );\r\n      } else if (selectedDevices == \"Web\") {\r\n        return (\r\n          <>\r\n            {name &&\r\n            finalchartData[name] &&\r\n            finalchartData[name][1]?.[selectedDevices]?.time_stamp.length >\r\n              0 ? (\r\n              <div className=\"chartBox\">\r\n                <StackedAreaChart\r\n                  labels={formatTime(\r\n                    finalchartData[name][1]?.[selectedDevices]?.time_stamp\r\n                  )}\r\n                  datasets={[\r\n                    {\r\n                      borderColor:\r\n                        change_24hrs == change_48hrs\r\n                          ? \"#404040\"\r\n                          : color\r\n                          ? \"#90EE90\"\r\n                          : \"#FF7F7F\",\r\n                      data: finalchartData[name][1]?.[selectedDevices][name],\r\n                    },\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <span className=\"stright-line\">na</span>\r\n            )}\r\n          </>\r\n        );\r\n      } else if (selectedDevices == \"Firestick\") {\r\n        return (\r\n          <>\r\n            {name &&\r\n            finalchartData[name] &&\r\n            finalchartData[name][1]?.[selectedDevices]?.time_stamp.length >\r\n              0 ? (\r\n              <div className=\"chartBox\">\r\n                <StackedAreaChart\r\n                  labels={formatTime(\r\n                    finalchartData[name][1]?.[selectedDevices]?.time_stamp\r\n                  )}\r\n                  datasets={[\r\n                    {\r\n                      borderColor:\r\n                        change_24hrs == change_48hrs\r\n                          ? \"#404040\"\r\n                          : color\r\n                          ? \"#90EE90\"\r\n                          : \"#FF7F7F\",\r\n                      data: finalchartData[name][1]?.[selectedDevices][name],\r\n                    },\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <span className=\"stright-line\">na</span>\r\n            )}\r\n          </>\r\n        );\r\n      } else if (selectedDevices == \"AndroidSmartTv\") {\r\n        return (\r\n          <>\r\n            {name &&\r\n            finalchartData[name] &&\r\n            finalchartData[name][1]?.[selectedDevices]?.time_stamp.length >\r\n              0 ? (\r\n              <div className=\"chartBox\">\r\n                <StackedAreaChart\r\n                  labels={formatTime(\r\n                    finalchartData[name][1]?.[selectedDevices]?.time_stamp\r\n                  )}\r\n                  datasets={[\r\n                    {\r\n                      borderColor:\r\n                        change_24hrs == change_48hrs\r\n                          ? \"#404040\"\r\n                          : color\r\n                          ? \"#90EE90\"\r\n                          : \"#FF7F7F\",\r\n                      data: finalchartData[name][1]?.[selectedDevices][name],\r\n                    },\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <span className=\"stright-line\">na</span>\r\n            )}\r\n          </>\r\n        );\r\n      } else if (selectedDevices == \"All\" && finalchartData[name]) {\r\n        return (\r\n          <>\r\n            {name &&\r\n            finalchartData[name] &&\r\n            finalchartData[name][0]?.all?.time_stamp.length > 0 ? (\r\n              <div className=\"chartBox\">\r\n                <StackedAreaChart\r\n                  labels={formatTime(finalchartData[name][0]?.all?.time_stamp)}\r\n                  datasets={[\r\n                    {\r\n                      borderColor:\r\n                        change_24hrs == change_48hrs\r\n                          ? \"#404040\"\r\n                          : color\r\n                          ? \"#90EE90\"\r\n                          : \"#FF7F7F\",\r\n                      data: finalchartData[name][0]?.all[name],\r\n                    },\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <span className=\"stright-line\">na</span>\r\n            )}\r\n          </>\r\n        );\r\n      }\r\n    } else {\r\n      if (realdata[name]) {\r\n        return (\r\n          <>\r\n            {name &&\r\n            realdata[name] &&\r\n            realdata[name][0]?.all?.time_stamp.length > 0 ? (\r\n              <div className=\"chartBox\">\r\n                <StackedAreaChart\r\n                  labels={formatTime(realdata[name][0]?.all?.time_stamp)}\r\n                  datasets={[\r\n                    {\r\n                      borderColor:\r\n                        change_24hrs == change_48hrs\r\n                          ? \"#404040\"\r\n                          : color\r\n                          ? \"#90EE90\"\r\n                          : \"#FF7F7F\",\r\n                      data: realdata[name][0]?.all[name],\r\n                    },\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <span className=\"stright-line\">na</span>\r\n            )}\r\n          </>\r\n        );\r\n      } else {\r\n        return <span className=\"stright-line\">na</span>;\r\n      }\r\n    }\r\n\r\n    // console.log((finalchartData, \"--chart\"));\r\n  };\r\n\r\n  const get48HoursData = (hrs, unit) => {\r\n    if (hrs === \"-\" || typeof hrs === \"string\") {\r\n      return \"0.00\";\r\n    } else {\r\n      if (Boolean(hrs > 1000 && !unit)) {\r\n        return `${(hrs / 1000).toFixed(2)} k`;\r\n      } else {\r\n        return `${hrs ? Number(hrs) : \"0.00\"} ${unit}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  const get24HoursData = (hrs, unit) => {\r\n    if (hrs === \"-\" || typeof hrs === \"string\") {\r\n      return \"0.00\";\r\n    } else {\r\n      if (Boolean(hrs > 1000 && !unit)) {\r\n        return `${(Number(hrs) / 1000).toFixed(2)} k`;\r\n      } else {\r\n        return `${hrs ? Number(hrs).toFixed(2) : \"0.00\"} ${unit}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"analysisContainer\">\r\n      <div className=\"col-md-12\">\r\n        <div>\r\n          <h2>Analysis</h2>\r\n        </div>\r\n        {dashboardLoader ? (\r\n          <div\r\n            style={{\r\n              height: \"250px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <RctPageLoader />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"analysisHeader\">\r\n              <div className=\"analysisHeaderRight 44\">\r\n                <TextField\r\n                  value={searchText}\r\n                  onChange={searchMetricName}\r\n                  id=\"outlined-basic\"\r\n                  className=\"mr-20\"\r\n                  placeholder=\"Search...\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <IconButton>\r\n                        <i\r\n                          style={{ cursor: \"pointer\" }}\r\n                          onClick={() => {\r\n                            setSearchText(\"\");\r\n                            setYesterdayData(backupYesterdayData);\r\n                          }}\r\n                          className=\"zmdi zmdi zmdi-close\"\r\n                        ></i>\r\n                      </IconButton>\r\n                    ),\r\n                  }}\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  id=\"outlined-select-currency\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  select\r\n                  // label=\"All\"\r\n                  placeholder=\"All\"\r\n                  value={sortMatrics}\r\n                  onChange={handleChange}\r\n                >\r\n                  {allMatrics.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  aria-label=\"download\"\r\n                  onClick={getImage}\r\n                >\r\n                  <Tooltip title=\"Download Table\" placement=\"bottom\">\r\n                    <DownloadIcon />\r\n                  </Tooltip>\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n            <div className=\"analysisBtnGroup\">\r\n              <Box className=\"analysisBtnGroupCont\">\r\n                <p>Timeline</p>\r\n                <ButtonGroup\r\n                  variant=\"contained\"\r\n                  aria-label=\"outlined primary button group\"\r\n                >\r\n                  <Button\r\n                    className={selectedDates === \"Yearly\" ? \"active\" : null}\r\n                    value=\"Yearly\"\r\n                    onClick={() => updateDate(\"Yearly\")}\r\n                    disabled\r\n                    style={{ color: \"#bcb7b7 !important\" }}\r\n                  >\r\n                    Yearly\r\n                  </Button>\r\n                  <Button\r\n                    className={selectedDates === \"Monthly\" ? \"active\" : null}\r\n                    value=\"Monthly\"\r\n                    onClick={() => updateDate(\"Monthly\")}\r\n                  >\r\n                    Monthly\r\n                  </Button>\r\n                  <Button\r\n                    className={selectedDates === \"15days\" ? \"active\" : null}\r\n                    value=\"15days\"\r\n                    onClick={() => updateDate(\"15days\")}\r\n                  >\r\n                    15days\r\n                  </Button>\r\n                  <Button\r\n                    className={selectedDates === \"7days\" ? \"active\" : null}\r\n                    value=\"7days\"\r\n                    onClick={() => updateDate(\"7days\")}\r\n                  >\r\n                    7days\r\n                  </Button>\r\n                  <Button\r\n                    className={selectedDates === \"24hr\" ? \"active\" : null}\r\n                    value=\"24hr\"\r\n                    onClick={() => updateDate(\"24hr\")}\r\n                  >\r\n                    24hr\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Box>\r\n              <Box className=\"analysisBtnGroupCont\">\r\n                <p>Device</p>\r\n                <ButtonGroup variant=\"contained\">\r\n                  <Button\r\n                    className={selectedDevices === \"All\" ? \"active\" : null}\r\n                    onClick={() => {\r\n                      setDashboardLoader(true);\r\n                      setTimeout(() => {\r\n                        setDashboardLoader(false);\r\n                      }, 5000);\r\n                      // setSelectedDates(\"24hr\")\r\n                      setSelectedDevices(\"All\");\r\n                      setFilterMetric(\"sort\");\r\n                      setSortMatrics(\"sort\");\r\n                      setSearchText(\"\");\r\n                      setCurrent(\"1d\");\r\n                      setLast(\"7d\");\r\n                      setYesterdayDate(\r\n                        Math.floor(new Date().getTime() / 1000.0) - 48 * 3600\r\n                      );\r\n                      setFromDate(\r\n                        Math.floor(new Date().getTime() / 1000.0) - 24 * 3600\r\n                      );\r\n                      setanalysisBtn(true);\r\n                      switch (selectedDates) {\r\n                        case \"Yearly\": {\r\n                          let currentDate = Math.floor(\r\n                            new Date().getTime() / 1000.0\r\n                          );\r\n                          let fromDate =\r\n                            Math.floor(new Date().getTime() / 1000.0) -\r\n                            12 * 30 * 24 * 3600;\r\n                          commonApiMetrices(\r\n                            \"\",\r\n                            true,\r\n                            \"30d\",\r\n                            currentDate,\r\n                            fromDate\r\n                          );\r\n                          return;\r\n                        }\r\n\r\n                        case \"Monthly\": {\r\n                          let currentDate = Math.floor(\r\n                            new Date().getTime() / 1000.0\r\n                          );\r\n                          let fromDate =\r\n                            Math.floor(new Date().getTime() / 1000.0) -\r\n                            30 * 24 * 3600;\r\n                          commonApiMetrices(\r\n                            \"\",\r\n                            true,\r\n                            \"2d\",\r\n                            currentDate,\r\n                            fromDate\r\n                          );\r\n                          return;\r\n                        }\r\n                        case \"15days\": {\r\n                          let currentDate = Math.floor(\r\n                            new Date().getTime() / 1000.0\r\n                          );\r\n                          let fromDate =\r\n                            Math.floor(new Date().getTime() / 1000.0) -\r\n                            15 * 24 * 3600;\r\n                          commonApiMetrices(\r\n                            \"\",\r\n                            true,\r\n                            \"1d\",\r\n                            currentDate,\r\n                            fromDate\r\n                          );\r\n                          return;\r\n                        }\r\n                        case \"7days\": {\r\n                          let currentDate = Math.floor(\r\n                            new Date().getTime() / 1000.0\r\n                          );\r\n                          let fromDate =\r\n                            Math.floor(new Date().getTime() / 1000.0) -\r\n                            7 * 24 * 3600;\r\n                          commonApiMetrices(\r\n                            \"\",\r\n                            true,\r\n                            \"1d\",\r\n                            currentDate,\r\n                            fromDate\r\n                          );\r\n                          return;\r\n                        }\r\n                        case \"24hr\": {\r\n                          let currentDate = Math.floor(\r\n                            new Date().getTime() / 1000.0\r\n                          );\r\n                          let fromDate =\r\n                            Math.floor(new Date().getTime() / 1000.0) -\r\n                            24 * 3600;\r\n                          commonApiMetrices(\r\n                            \"\",\r\n                            true,\r\n                            \"1h\",\r\n                            currentDate,\r\n                            fromDate\r\n                          );\r\n                          return;\r\n                        }\r\n                        default:\r\n                          return;\r\n                      }\r\n                      //  commonApiMetrices(\"\", true, agrr,)\r\n                    }}\r\n                  >\r\n                    All\r\n                  </Button>\r\n                  {realdata?.device_platform &&\r\n                    realdata?.device_platform.length > 0 &&\r\n                    realdata?.device_platform?.map((d, index) => {\r\n                      return (\r\n                        <Button\r\n                          className={selectedDevices === d ? \"active\" : null}\r\n                          key={index}\r\n                          onClick={() => {\r\n                            setDashboardLoader(true);\r\n                            setTimeout(() => {\r\n                              setDashboardLoader(false);\r\n                            }, 5000);\r\n                            //setSelectedDates(\"24hr\")\r\n                            setDashboardAnalysisCharData([]);\r\n                            setSelectedDevices(d);\r\n                            setFilterMetric(\"sort\");\r\n                            setSortMatrics(\"sort\");\r\n                            setSearchText(\"\");\r\n                            setCurrent(\"1d\");\r\n                            setLast(\"7d\");\r\n                            setYesterdayDate(\r\n                              Math.floor(new Date().getTime() / 1000.0) -\r\n                                48 * 3600\r\n                            );\r\n                            setFromDate(\r\n                              Math.floor(new Date().getTime() / 1000.0) -\r\n                                24 * 3600\r\n                            );\r\n                            setanalysisBtn(true);\r\n                            commonApiMetrices(d, true, agrr);\r\n                            console.log(\"selectedDates--\", selectedDates);\r\n\r\n                            switch (selectedDates) {\r\n                              case \"Yearly\": {\r\n                                let currentDate = Math.floor(\r\n                                  new Date().getTime() / 1000.0\r\n                                );\r\n                                let fromDate =\r\n                                  Math.floor(new Date().getTime() / 1000.0) -\r\n                                  12 * 30 * 24 * 3600;\r\n                                commonApiMetrices(\r\n                                  d,\r\n                                  true,\r\n                                  \"30d\",\r\n                                  currentDate,\r\n                                  fromDate\r\n                                );\r\n                                return;\r\n                              }\r\n\r\n                              case \"Monthly\": {\r\n                                let currentDate = Math.floor(\r\n                                  new Date().getTime() / 1000.0\r\n                                );\r\n                                let fromDate =\r\n                                  Math.floor(new Date().getTime() / 1000.0) -\r\n                                  30 * 24 * 3600;\r\n                                commonApiMetrices(\r\n                                  d,\r\n                                  true,\r\n                                  \"2d\",\r\n                                  currentDate,\r\n                                  fromDate\r\n                                );\r\n                                return;\r\n                              }\r\n                              case \"15days\": {\r\n                                let currentDate = Math.floor(\r\n                                  new Date().getTime() / 1000.0\r\n                                );\r\n                                let fromDate =\r\n                                  Math.floor(new Date().getTime() / 1000.0) -\r\n                                  15 * 24 * 3600;\r\n                                commonApiMetrices(\r\n                                  d,\r\n                                  true,\r\n                                  \"1d\",\r\n                                  currentDate,\r\n                                  fromDate\r\n                                );\r\n                                return;\r\n                              }\r\n                              case \"7days\": {\r\n                                let currentDate = Math.floor(\r\n                                  new Date().getTime() / 1000.0\r\n                                );\r\n                                let fromDate =\r\n                                  Math.floor(new Date().getTime() / 1000.0) -\r\n                                  7 * 24 * 3600;\r\n                                commonApiMetrices(\r\n                                  d,\r\n                                  true,\r\n                                  \"1d\",\r\n                                  currentDate,\r\n                                  fromDate\r\n                                );\r\n                                return;\r\n                              }\r\n                              case \"24hr\": {\r\n                                let currentDate = Math.floor(\r\n                                  new Date().getTime() / 1000.0\r\n                                );\r\n                                let fromDate =\r\n                                  Math.floor(new Date().getTime() / 1000.0) -\r\n                                  24 * 3600;\r\n                                commonApiMetrices(\r\n                                  d,\r\n                                  true,\r\n                                  \"1h\",\r\n                                  currentDate,\r\n                                  fromDate\r\n                                );\r\n                                return;\r\n                              }\r\n                              default:\r\n                                return;\r\n                            }\r\n                          }}\r\n                        >\r\n                          {d}\r\n                        </Button>\r\n                      );\r\n                    })}\r\n                </ButtonGroup>\r\n              </Box>\r\n            </div>\r\n            <div className=\"full-table\">\r\n              <div style={{ paddingLeft: \"15px\", paddingRight: \"10px\" }}>\r\n                {dashboardLoader ? (\r\n                  <div\r\n                    style={{\r\n                      height: \"250px\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <RctPageLoader />\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    {Boolean(\r\n                      filterMetric === \"realtime\" || filterMetric === \"sort\"\r\n                    ) && (\r\n                      <div className=\"tableCont\">\r\n                        <TableContainer>\r\n                          <Table sx={{ minWidth: 650 }}>\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Real-Time Key Insights</TableCell>\r\n                                <TableCell>Last Analysis</TableCell>\r\n                                <TableCell>{selectedDates}</TableCell>\r\n                                <TableCell>Charts</TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n\r\n                            {selectedDevices !== \"All\" ? (\r\n                              <TableBody>\r\n                                {yesterdayData.length > 0 &&\r\n                                  yesterdayData.map((item, i) => {\r\n                                    if (\r\n                                      realdata?.filters?.realtime_metrices.includes(\r\n                                        item?.metric_key_name\r\n                                      )\r\n                                    ) {\r\n                                      return (\r\n                                        <TableRow\r\n                                          key={item.metricname}\r\n                                          sx={{\r\n                                            \"&:last-child td, &:last-child th\":\r\n                                              { border: 0 },\r\n                                          }}\r\n                                        >\r\n                                          {/* item?.color ? { color: 'green' } : { color: 'red' } */}\r\n                                          <TableCell>\r\n                                            {item.metricname}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {get48HoursData(\r\n                                              item?.hrs_change_48hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell\r\n                                            style={\r\n                                              item?.hrs_change_24hrs ==\r\n                                              item?.hrs_change_48hrs\r\n                                                ? { color: \"grey\" }\r\n                                                : item?.color\r\n                                                ? { color: \"green\" }\r\n                                                : { color: \"red\" }\r\n                                            }\r\n                                          >\r\n                                            {get24HoursData(\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {findChartData(\r\n                                              item.metric_key_name,\r\n                                              item?.color,\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.hrs_change_48hrs\r\n                                            )}\r\n                                          </TableCell>\r\n                                        </TableRow>\r\n                                      );\r\n                                    } else {\r\n                                      return null;\r\n                                    }\r\n                                  })}\r\n                              </TableBody>\r\n                            ) : (\r\n                              <TableBody>\r\n                                {yesterdayData?.length > 0 &&\r\n                                  yesterdayData.map((item, i) => {\r\n                                    if (\r\n                                      realdata?.filters?.realtime_metrices?.includes(\r\n                                        item?.metric_key_name\r\n                                      )\r\n                                    ) {\r\n                                      return (\r\n                                        <TableRow\r\n                                          key={item.metricname}\r\n                                          sx={{\r\n                                            \"&:last-child td, &:last-child th\":\r\n                                              { border: 0 },\r\n                                          }}\r\n                                        >\r\n                                          <TableCell>\r\n                                            {item.metricname}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {get48HoursData(\r\n                                              item?.hrs_change_48hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell\r\n                                            style={\r\n                                              item?.hrs_change_24hrs ==\r\n                                              item?.hrs_change_48hrs\r\n                                                ? { color: \"grey\" }\r\n                                                : item?.color\r\n                                                ? { color: \"green\" }\r\n                                                : { color: \"red\" }\r\n                                            }\r\n                                          >\r\n                                            {get24HoursData(\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {findChartData(\r\n                                              item.metric_key_name,\r\n                                              item?.color,\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.hrs_change_48hrs\r\n                                            )}\r\n                                          </TableCell>\r\n                                        </TableRow>\r\n                                      );\r\n                                    } else {\r\n                                      return null;\r\n                                    }\r\n                                  })}\r\n                              </TableBody>\r\n                            )}\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n                {dashboardLoader ? (\r\n                  <div\r\n                    style={{\r\n                      height: \"250px\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <RctPageLoader />\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    {Boolean(\r\n                      filterMetric === \"userengagement\" ||\r\n                        filterMetric === \"sort\"\r\n                    ) && (\r\n                      <div className=\"tableCont\">\r\n                        <TableContainer>\r\n                          <Table sx={{ minWidth: 650 }}>\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>User Engagement Matrics</TableCell>\r\n                                <TableCell>Last Analysis</TableCell>\r\n                                <TableCell>{selectedDates}</TableCell>\r\n                                <TableCell>Charts</TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            {selectedDevices !== \"All\" ? (\r\n                              <TableBody>\r\n                                {yesterdayData.length > 0 &&\r\n                                  yesterdayData.map((item, i) => {\r\n                                    if (\r\n                                      realdata?.filters?.user_metrices?.includes(\r\n                                        item?.metric_key_name\r\n                                      )\r\n                                    ) {\r\n                                      return (\r\n                                        <TableRow\r\n                                          key={item.metricname}\r\n                                          sx={{\r\n                                            \"&:last-child td, &:last-child th\":\r\n                                              { border: 0 },\r\n                                          }}\r\n                                        >\r\n                                          <TableCell>\r\n                                            {item.metricname}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {get48HoursData(\r\n                                              item?.hrs_change_48hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell\r\n                                            style={\r\n                                              item?.hrs_change_24hrs ==\r\n                                              item?.hrs_change_48hrs\r\n                                                ? { color: \"grey\" }\r\n                                                : item?.color\r\n                                                ? { color: \"green\" }\r\n                                                : { color: \"red\" }\r\n                                            }\r\n                                          >\r\n                                            {get24HoursData(\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {findChartData(\r\n                                              item.metric_key_name,\r\n                                              item?.color,\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.hrs_change_48hrs\r\n                                            )}\r\n                                          </TableCell>\r\n                                        </TableRow>\r\n                                      );\r\n                                    } else {\r\n                                      return null;\r\n                                    }\r\n                                  })}\r\n                              </TableBody>\r\n                            ) : (\r\n                              <TableBody>\r\n                                {yesterdayData?.length > 0 &&\r\n                                  yesterdayData?.map((item, i) => {\r\n                                    if (\r\n                                      realdata?.filters?.user_metrices?.includes(\r\n                                        item?.metric_key_name\r\n                                      )\r\n                                    ) {\r\n                                      return (\r\n                                        <TableRow\r\n                                          key={item.metricname}\r\n                                          sx={{\r\n                                            \"&:last-child td, &:last-child th\":\r\n                                              { border: 0 },\r\n                                          }}\r\n                                        >\r\n                                          <TableCell>\r\n                                            {item.metricname}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {get48HoursData(\r\n                                              item?.hrs_change_48hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell\r\n                                            style={\r\n                                              item?.hrs_change_24hrs ==\r\n                                              item?.hrs_change_48hrs\r\n                                                ? { color: \"grey\" }\r\n                                                : item?.color\r\n                                                ? { color: \"green\" }\r\n                                                : { color: \"red\" }\r\n                                            }\r\n                                          >\r\n                                            {get24HoursData(\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {findChartData(\r\n                                              item.metric_key_name,\r\n                                              item?.color,\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.hrs_change_48hrs\r\n                                            )}\r\n                                          </TableCell>\r\n                                        </TableRow>\r\n                                      );\r\n                                    } else {\r\n                                      return null;\r\n                                    }\r\n                                  })}\r\n                              </TableBody>\r\n                            )}\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n                {dashboardLoader ? (\r\n                  <div\r\n                    style={{\r\n                      height: \"250px\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <RctPageLoader />\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    {Boolean(\r\n                      filterMetric === \"qualityexperience\" ||\r\n                        filterMetric === \"sort\"\r\n                    ) && (\r\n                      <div className=\"tableCont\">\r\n                        <TableContainer>\r\n                          <Table sx={{ minWidth: 650 }}>\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>\r\n                                  Quality of Experience (QoE)\r\n                                </TableCell>\r\n                                <TableCell>Last Analysis</TableCell>\r\n                                <TableCell>{selectedDates}</TableCell>\r\n                                <TableCell>Charts</TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            {selectedDevices !== \"All\" ? (\r\n                              <TableBody>\r\n                                {yesterdayData.length > 0 &&\r\n                                  yesterdayData.map((item, i) => {\r\n                                    if (\r\n                                      realdata?.filters?.qoe_metrics?.includes(\r\n                                        item?.metric_key_name\r\n                                      )\r\n                                    ) {\r\n                                      return (\r\n                                        <TableRow\r\n                                          key={item.metricname}\r\n                                          sx={{\r\n                                            \"&:last-child td, &:last-child th\":\r\n                                              { border: 0 },\r\n                                          }}\r\n                                        >\r\n                                          <TableCell>\r\n                                            {item.metricname}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {get48HoursData(\r\n                                              item?.hrs_change_48hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell\r\n                                            style={\r\n                                              item?.hrs_change_24hrs ==\r\n                                              item?.hrs_change_48hrs\r\n                                                ? { color: \"grey\" }\r\n                                                : item?.color\r\n                                                ? { color: \"green\" }\r\n                                                : { color: \"red\" }\r\n                                            }\r\n                                          >\r\n                                            {get24HoursData(\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {findChartData(\r\n                                              item.metric_key_name,\r\n                                              item?.color,\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.hrs_change_48hrs\r\n                                            )}\r\n                                          </TableCell>\r\n                                        </TableRow>\r\n                                      );\r\n                                    } else {\r\n                                      return null;\r\n                                    }\r\n                                  })}\r\n                              </TableBody>\r\n                            ) : (\r\n                              <TableBody>\r\n                                {yesterdayData?.length > 0 &&\r\n                                  yesterdayData.map((item, i) => {\r\n                                    if (\r\n                                      realdata?.filters?.qoe_metrics?.includes(\r\n                                        item?.metric_key_name\r\n                                      )\r\n                                    ) {\r\n                                      return (\r\n                                        <TableRow\r\n                                          key={item.metricname}\r\n                                          sx={{\r\n                                            \"&:last-child td, &:last-child th\":\r\n                                              { border: 0 },\r\n                                          }}\r\n                                        >\r\n                                          <TableCell>\r\n                                            {item.metricname}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {get48HoursData(\r\n                                              item?.hrs_change_48hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell\r\n                                            style={\r\n                                              item?.hrs_change_24hrs ==\r\n                                              item?.hrs_change_48hrs\r\n                                                ? { color: \"grey\" }\r\n                                                : item?.color\r\n                                                ? { color: \"green\" }\r\n                                                : { color: \"red\" }\r\n                                            }\r\n                                          >\r\n                                            {get24HoursData(\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.unit\r\n                                            )}\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            {findChartData(\r\n                                              item.metric_key_name,\r\n                                              item?.color,\r\n                                              item?.hrs_change_24hrs,\r\n                                              item?.hrs_change_48hrs\r\n                                            )}\r\n                                          </TableCell>\r\n                                        </TableRow>\r\n                                      );\r\n                                    } else {\r\n                                      return null;\r\n                                    }\r\n                                  })}\r\n                              </TableBody>\r\n                            )}\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardAnalysis;","import React, { useState, useEffect } from 'react'\r\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport { getErrorCount, getErrorlocationCoordinates, getlocationConcurrentCount, getlocationCoordinates, getPlayCount } from 'Store/Actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport RctPageLoader from 'Components/RctPageLoader/RctPageLoader';\r\n\r\nexport default function DashboardLocation(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.qoeReducer);\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [infoWindowPopup, setInfoWindowPopup] = useState(false)\r\n    const [infoWindowCoordinate, setInfoWindowCoordinate] = useState({})\r\n    const [coordinates, setCoordinates] = useState([])\r\n    const [errorCoordinates, setErrorCoordinates] = useState([])\r\n    const [playCount, setPlayCount] = useState([])\r\n    const [errorCount, setErrorCount] = useState([])\r\n    const { isLoaded } = useJsApiLoader({\r\n        googleMapsApiKey: \"AIzaSyDrr86JFplL6E731o7y_VMe5wIoHiWvnY4\" // ,\r\n        // ...otherOptions\r\n    })\r\n    const image =\r\n        \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";\r\n    const containerStyle = {\r\n        width: '90%',\r\n        height: '600px',\r\n        marginLeft: '1rem'\r\n    };\r\n    const center = {\r\n        lat: 22.9473,\r\n        lng: 79.1923\r\n    }\r\n    const divStyle = {\r\n        background: `white`,\r\n        width: \"auto\",\r\n        height: \"55px\"\r\n        // border: `1px solid #ccc`,\r\n        // padding: 15\r\n    }\r\n    useEffect(() => {\r\n        const params = { \"metric\": \"concurrent\", \"operation\": \"count\" }\r\n        const errorParams = { \"metric\": \"error\", \"operation\": \"count\" }\r\n        const paramsConcurrent = { \"metric\": \"concurrent\", \"operation\": \"count\" }\r\n        dispatch(getlocationCoordinates(dispatch, params))\r\n        dispatch(getErrorlocationCoordinates(dispatch, errorParams))\r\n        // dispatch(getPlayCount(dispatch, params))\r\n        dispatch(getErrorCount(dispatch, errorParams))\r\n        dispatch(getlocationConcurrentCount(dispatch, paramsConcurrent))\r\n        const interval = setInterval(() => {\r\n            if (window.location.href.includes('dashboard/crm/dashboard')) {\r\n                dispatch(getlocationCoordinates(dispatch, params))\r\n                dispatch(getErrorlocationCoordinates(dispatch, errorParams))\r\n                //dispatch(getPlayCount(dispatch, params))\r\n                dispatch(getErrorCount(dispatch, errorParams))\r\n                dispatch(getlocationConcurrentCount(dispatch, paramsConcurrent))\r\n            } else {\r\n                clearInterval(interval)\r\n            }\r\n        }, 60000);\r\n        return () => clearInterval(interval);\r\n\r\n    }, [])\r\n    const mappingCounts = (countArray) => {\r\n        let playCountArray = []\r\n        const uniquePlayCount = [...new Set(countArray.map(item => item.provider))]\r\n        uniquePlayCount.forEach(uniqueElement => {\r\n            let partnerObj = {\r\n                provider: '',\r\n                ios: '-',\r\n                android: '-',\r\n                firetv: '-',\r\n                firestick: '-',\r\n                web: '-'\r\n            }\r\n            countArray.forEach(element => {\r\n                if (element.provider === uniqueElement) {\r\n                    partnerObj.provider = element.provider\r\n                    switch (element?.platform?.toLowerCase()) {\r\n                        case \"ios\":\r\n                            partnerObj.ios = element.concurrentplays\r\n                            break;\r\n                        case \"android\":\r\n                            partnerObj.android = element.concurrentplays\r\n                            break;\r\n                        case \"firetv\":\r\n                            partnerObj.firetv = element.concurrentplays\r\n                            break;\r\n                        case \"firestick\":\r\n                            partnerObj.firestick = element.concurrentplays\r\n                            break;\r\n                        case \"web\":\r\n                            partnerObj.web = element.concurrentplays\r\n                            break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            playCountArray.push(partnerObj)\r\n        });\r\n        return playCountArray\r\n    }\r\n    const mappingErrorCounts = (countArray) => {\r\n        let playCountArray = []\r\n        const uniquePlayCount = [...new Set(countArray.map(item => item.provider))]\r\n        uniquePlayCount.forEach(uniqueElement => {\r\n            let partnerObj = {\r\n                provider: '',\r\n                ios: '-',\r\n                android: '-',\r\n                firetv: '-',\r\n                firestick: '-',\r\n                web: '-'\r\n            }\r\n            countArray.forEach(element => {\r\n                if (element.provider === uniqueElement) {\r\n                    partnerObj.provider = element.provider\r\n                    switch (element?.platform?.toLowerCase()) {\r\n                        case \"ios\":\r\n                            partnerObj.ios = element.count\r\n                            break;\r\n                        case \"android\":\r\n                            partnerObj.android = element.count\r\n                            break;\r\n                        case \"firetv\":\r\n                            partnerObj.firetv = element.count\r\n                            break;\r\n                        case \"firestick\":\r\n                            partnerObj.firestick = element.count\r\n                            break;\r\n                        case \"web\":\r\n                            partnerObj.web = element.count\r\n                            break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            playCountArray.push(partnerObj)\r\n        });\r\n        return playCountArray\r\n    }\r\n    useEffect(async () => {\r\n        if (data?.locationCoordinates?.data) {\r\n            setIsLoading(false)\r\n            const getCoordinatesArray = data?.locationCoordinates?.data;\r\n            let coordinatesArray = []\r\n            getCoordinatesArray.forEach(element => {\r\n                let coordinatesObj = {\r\n                    lat: element.latitude,\r\n                    lng: element.longitude,\r\n                    city: element.city,\r\n                    count: element.count\r\n                }\r\n                coordinatesArray.push(coordinatesObj)\r\n            });\r\n            setCoordinates(coordinatesArray)\r\n        }\r\n        if (data?.errorLocationCoordinates?.data) {\r\n            setIsLoading(false)\r\n            const getErrorCoordinatesArray = data?.errorLocationCoordinates?.data;\r\n            let errorCoordinatesArray = []\r\n            getErrorCoordinatesArray.forEach(element => {\r\n                let errorCoordinatesObj = {\r\n                    lat: element.latitude,\r\n                    lng: element.longitude,\r\n                    city: element.city,\r\n                    count: element.count\r\n                }\r\n                errorCoordinatesArray.push(errorCoordinatesObj)\r\n            });\r\n            setErrorCoordinates(errorCoordinatesArray)\r\n        }\r\n        if (data?.conncurrentCount?.length > 0) {\r\n            setIsLoading(false)\r\n            const countArray = await mappingCounts(data?.conncurrentCount)\r\n            setPlayCount(countArray)\r\n        }else{\r\n            setPlayCount([]) \r\n        }\r\n        if (data?.errorCount?.length > 0) {\r\n            setIsLoading(false)\r\n            const countArray = await mappingErrorCounts(data?.errorCount)\r\n            setErrorCount(countArray)\r\n        }else{\r\n            setErrorCount([])  \r\n        }\r\n\r\n        setTimeout(() => {\r\n            setIsLoading(false)   \r\n        }, 10000);\r\n\r\n    }, [data?.locationCoordinates?.data, data?.errorLocationCoordinates?.data, data?.playCconncurrentCountount, data?.errorCount])\r\n\r\n    const mouseOver = (coordinate) => {\r\n        setInfoWindowCoordinate(coordinate)\r\n        setInfoWindowPopup(true)\r\n    }\r\n    const mouseOut = () => {\r\n        setInfoWindowPopup(false)\r\n        setInfoWindowCoordinate({})\r\n    }\r\n    if (!isLoaded) return <div>Loading...</div>\r\n    if (isLoading) return <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}><RctPageLoader /></div>\r\n    else\r\n        return (\r\n            <>\r\n            {data?.errorLocationCoordinates || data?.locationCoordinates || data?.conncurrentCount ?<div className='map'>\r\n                    <h1>Location</h1>\r\n                    {/* <div className=\"top-left-nav\">\r\n                        <ul>\r\n                            <li className=\"active-tracker\">CONCURRENCY (320) </li>\r\n                            <li>PLAYBACK FAILURE (540)</li>\r\n                        </ul>\r\n                    </div> */}\r\n                    <div className='detail-map'>\r\n                        <div className='row'>\r\n                            <div className='col-md-12 col-xl-12 location'>\r\n                            <div  className='bliper countTable' style={{marginLeft:\"13px\"}}>\r\n                                <div>Concurrent Count <br/> <span className='concurrentDotMarker'></span></div>\r\n                                <div style={{marginLeft:\"10px\"}}>Error Count<br/><span className='ssoDotMarker'></span></div>\r\n                                </div>\r\n                                <GoogleMap\r\n                                    mapContainerStyle={containerStyle}\r\n                                    center={center}\r\n                                    zoom={5}\r\n                                >\r\n                                    {coordinates?.length > 0 && coordinates.map((coordinate) => {\r\n                                        return (\r\n                                            <Marker position={coordinate}\r\n                                                icon={\"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\"}\r\n\r\n                                                onMouseOver={e => mouseOver(coordinate)} onClick={e => mouseOut(coordinate)} />\r\n                                        )\r\n                                    })}\r\n\r\n                                    {errorCoordinates?.length > 0 && errorCoordinates.map((coordinate) => {\r\n                                        return (\r\n                                            <Marker position={coordinate} onMouseOver={e => mouseOver(coordinate)} onClick={e => mouseOut(coordinate)} />\r\n                                        )\r\n                                    })}\r\n                                    {infoWindowPopup && infoWindowCoordinate && <InfoWindow position={infoWindowCoordinate} >\r\n                                        <div style={divStyle}>\r\n                                        <p>{infoWindowCoordinate.city}</p>\r\n                                            <h1>{infoWindowCoordinate.count}</h1>\r\n                                        </div>\r\n                                    </InfoWindow>\r\n                                    }\r\n                                </GoogleMap>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row countTable'>\r\n                            <div className='col-md-6 col-lg-5 col-xl-5 playCountTable2'>\r\n\r\n                                <table className=\"table table-sm playTable\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                                    <thead>\r\n                                        <tr className='playCountMainHeader'>\r\n                                            <td colSpan=\"6\">\r\n                                                CONCURRENT COUNT\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr className='playCountHeader'>\r\n                                            <th>Partner</th>\r\n                                            <th>IOS</th>\r\n                                            <th>Android</th>\r\n                                            <th>AndroidSmartTv</th>\r\n                                            <th>FireStick</th>\r\n                                            <th>Web</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {playCount?.length > 0 && playCount.map((play, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td className='playCountSideHeader'>{play?.provider}</td>\r\n                                                    <td>{play?.ios}</td>\r\n                                                    <td>{play?.android}</td>\r\n                                                    <td>{play?.AndroidSmartTv}</td>\r\n                                                    <td>{play?.firestick}</td>\r\n                                                    <td>{play?.web}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                        )}\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className='col-md-6 col-lg-5 col-xl-5 errorCountTable'>\r\n                                <table className=\"table table-sm errorTable\">\r\n                                    <thead>\r\n                                        <tr className='errorCountMainHeader'>\r\n                                            <td colSpan=\"6\">\r\n                                                ERROR COUNT\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr className='errorCountHeader'>\r\n                                            <th>Partner</th>\r\n                                            <th>IOS</th>\r\n                                            <th>Android</th>\r\n                                            <th>AndroidSmartTv</th>\r\n                                            <th>FireStick</th>\r\n                                            <th>Web</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {errorCount?.length > 0 && errorCount.map((error, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td className='errorCountSideHeader'>{error.provider}</td>\r\n                                                    <td>{error?.ios}</td>\r\n                                                    <td>{error?.android}</td>\r\n                                                    <td>{error?.AndroidSmartTv}</td>\r\n                                                    <td>{error?.firestick}</td>\r\n                                                    <td>{error?.web}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                        )}\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>:null\r\n             }\r\n            </>\r\n        )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport RealTimeSliderContainer from 'Components/SliderContainer/RealTimeSliderContainer';\r\nimport UserEngagementSliderContainer from 'Components/SliderContainer/UserEngagementSliderContainer';\r\nimport QualityOfExperienceSliderContainer from 'Components/SliderContainer/QualityOfExperienceSliderContainer';\r\nimport VideoQCSliderContainer from 'Components/SliderContainer/VideoQCSliderContainer';\r\nimport MitigationSliderContainer from 'Components/SliderContainer/MitigationSliderContainer';\r\nimport AIPipelineSliderContainer from 'Components/SliderContainer/AIPipelineSliderContainer';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DashboardAnalysis from 'Components/DashboardAnalysis/DashboardAnalysis';\r\nimport RctPageLoader from 'Components/RctPageLoader/RctPageLoader';\r\nimport { clearAllMetrics, clearAssetInfoData, getWidgetDataRequest, setMetricType, setMetricTypeFullName } from 'Store/Actions';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport DashboardLocation from '../dashboardLocation';\r\nimport Location from '../location';\r\n\r\nexport default function Dashboard(props) {\r\n\r\n   const dispatch = useDispatch()\r\n   localStorage.removeItem('contentPartner')\r\n   useEffect(() => {\r\n      return () => {\r\n         dispatch(clearAllMetrics())\r\n      }\r\n   }, [dispatch])\r\n\r\n   useEffect(() => {\r\n\r\n      const interval = setInterval(() => {\r\n         // localStorage.removeItem('contentPartner')\r\n         // console.log(\"abcd--\",window.location.href,window.location.href.includes('dashboard/crm/dashboard')+\"--\"+window.location.origin);\r\n         if (window.location.href.includes('dashboard/crm/dashboard')) {\r\n            dispatch(setMetricType(''))\r\n            dispatch(setMetricTypeFullName(''));\r\n            dispatch(getWidgetDataRequest(\"attempts\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"average_bitrate\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"average_framerate\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"average_percentage_completion\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"bandwidth\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"exit_before_video_starts\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"minutes_per_unique_devices\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"rebuffering_percentage\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"rebuffering_ratio\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"succesful_plays\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"total_minutes_watched\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"user_attrition\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"video_playback_failures\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"video_start_failures\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"video_start_time\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"video_restart_time\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"rendering_quality\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"concurrent_plays\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"connection_induced_rebuffering_ratio\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"unique_devices\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"unique_viewers\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"ended_plays\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"ended_plays_per_unique_devices\", dispatch, false))\r\n            dispatch(getWidgetDataRequest(\"play_attempts\", dispatch, false))\r\n\r\n            dispatch(clearAssetInfoData())\r\n         } else {\r\n            clearInterval(interval)\r\n         }\r\n         return () => clearInterval(interval)\r\n      }, 60000);\r\n\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      localStorage.removeItem('contentPartner')\r\n      dispatch(setMetricType(''))\r\n      dispatch(setMetricTypeFullName(''));\r\n      dispatch(getWidgetDataRequest(\"attempts\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"average_bitrate\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"average_framerate\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"average_percentage_completion\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"bandwidth\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"exit_before_video_starts\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"minutes_per_unique_devices\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"rebuffering_percentage\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"rebuffering_ratio\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"succesful_plays\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"total_minutes_watched\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"user_attrition\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"video_playback_failures\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"video_start_failures\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"video_start_time\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"video_restart_time\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"rendering_quality\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"concurrent_plays\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"connection_induced_rebuffering_ratio\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"unique_devices\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"unique_viewers\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"ended_plays\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"ended_plays_per_unique_devices\", dispatch, true))\r\n      dispatch(getWidgetDataRequest(\"play_attempts\", dispatch, true))\r\n\r\n      dispatch(clearAssetInfoData())\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      localStorage.removeItem('contentPartner')\r\n      dispatch(setMetricType(''))\r\n      dispatch(setMetricTypeFullName(''));\r\n   }, [dispatch])\r\n\r\n\r\n   const data = useSelector(state => state.qoeReducer);\r\n   // function round(num, digits, metricname) {\r\n   //    // if (num > 1000) {\r\n   //    //    const lookup = [\r\n   //    //       { value: 1, symbol: \"\" },\r\n   //    //       { value: 1e3, symbol: \"k\" },\r\n   //    //       { value: 1e6, symbol: \"M\" },\r\n   //    //       { value: 1e9, symbol: \"G\" },\r\n   //    //       { value: 1e12, symbol: \"T\" },\r\n   //    //       { value: 1e15, symbol: \"P\" },\r\n   //    //       { value: 1e18, symbol: \"E\" }\r\n   //    //    ];\r\n   //    //    const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n   //    //    var item = lookup.slice().reverse().find(function (item) {\r\n   //    //       return num >= item.value;\r\n   //    //    });\r\n   //    //    return item ? (num / item.value).toFixed(digits).replace(rx, \"$1\") + item.symbol : \"0\";\r\n   //    // } else if (num < 0) {\r\n   //    //    if (metricname === \"CIRR\") {\r\n   //    //       return num.toPrecision(3);//= Math.floor((Math.random()*1000000)+1);\r\n   //    //    } else {\r\n   //    //       return num.toPrecision(2);//= Math.floor((Math.random()*1000000)+1);\r\n   //    //    }\r\n\r\n   //    // } else {\r\n   //    //    if (num == \"-\") {\r\n   //    //       return num\r\n   //    //    } else {\r\n\r\n   //    //       return Number(num).toFixed(2)\r\n\r\n   //    //    }\r\n   //    // }\r\n   //    return num;\r\n   // }\r\n\r\n   function round(num, digits) {\r\n      const lookup = [\r\n         { value: 1, symbol: \"\" },\r\n         { value: 1e3, symbol: \"k\" },\r\n         { value: 1e6, symbol: \"M\" },\r\n         { value: 1e9, symbol: \"G\" },\r\n         { value: 1e12, symbol: \"T\" },\r\n         { value: 1e15, symbol: \"P\" },\r\n         { value: 1e18, symbol: \"E\" }\r\n      ];\r\n      const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n      var item = lookup.slice().reverse().find(function (item) {\r\n         return num >= item.value;\r\n      });\r\n      return item ? (num / item.value).toFixed(digits).replace(rx, \"$1\") + item.symbol : parseFloat(num).toFixed(digits);\r\n   }\r\n\r\n   return (\r\n\r\n      <div className=\"dashboard-wrapper numberofMetrices\" style={{ minHeight: 'calc(100vh - 170px)' }}>\r\n         {data?.loading ? <div style={{ height: 'calc(100vh - 170px)', display: 'flex', justifyContent: 'center', alignItems: 'center' }}><RctPageLoader /></div> :\r\n            <>\r\n               <Grid container>\r\n                  {data?.widgetData?.length > 0 && data?.widgetData.map((item, index) =>\r\n                     <Grid key={index} item xs={2} className=\"count-grid\">\r\n                        <div className=\"summaryVal card bg-light p-2 m-2 border-0 shadow rounded min-vh-24\">\r\n                           {/* {item?.hrs_change_24hrs && item?.hrs_change_24hrs === \"-\" ? <div style={{ height: 'calc(60vh - 130px)' }}><RctPageLoader /></div> : */}\r\n                           <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                              {\r\n                                 item?.hrs_change_24hrs && (item?.hrs_change_24hrs) % 1 !== 0 ?\r\n                                    <h3> {item?.hrs_change_24hrs ? round(item?.hrs_change_24hrs, 2, item?.metricname) : 0.00}</h3> :\r\n                                    <h3>{item?.hrs_change_24hrs ? round(item?.hrs_change_24hrs, 2, item?.metricname) : 0}</h3>\r\n                              }\r\n                              <h4>{item?.unit}</h4>\r\n\r\n                           </div>\r\n                           {/* } */}\r\n                           {/* {item?.metricname === \"Video Playback Failures\" || item?.metricname === \"Video Start Failures\"\r\n                              || item?.metricname === \"User Attrition\" || item?.metricname === \"Video Start Time\" || item?.metricname === \"Video Restart Time\"\r\n                              || item?.metricname === \"EBVS\" || item?.metricname === \"ReBuff. Ratio\" || item?.metricname === \"Ended Plays\" ||\r\n                              item?.metricname === \"Ended Plays/ Unique Devices\" || item?.metricname === \"CIRR\" ?\r\n                              <div className={item?.percentage > 0 ?\r\n                                 'text-danger' : item?.percentage === 0 ? \"text-grey\" : \"text-success\"}>{round(item?.percentage, 1, item?.metricname) + '%'}\r\n\r\n                                 {item?.percentage > 0 || item?.percentage === 0 ? item?.percentage === 0 ? '' : <div className='triangleDown' /> : <div className='triangle' />}</div> : */}\r\n                               {/* <div className={item?.percentage > 0 || item?.percentage === 0 ? item?.percentage === 0 ? \"text-grey\" : \"text-success\" : 'text-danger'}>\r\n                                  {round(item?.percentage, 1, item?.metricname) + '%'}  {item?.percentage > 0 || item?.percentage === 0 ? item?.percentage === 0 ? '' : <div className='triangle' /> :\r\n                                     <div className='triangleDown' />}</div> */}\r\n                                    \r\n                                    <div className ={item?.color == true && item?.percentage > 0 ?\"text-success\":item?.percentage==0?\"text-grey\":\"text-danger\"}>\r\n                                    {round(item?.percentage, 1, item?.metricname) + '%'}\r\n                                    {item?.color == true && item?.percentage > 0 ? <div className='triangle' /> : item?.percentage==0?\"\":<div className='triangleDown' />}\r\n                                  </div>\r\n                                    \r\n                           \r\n                                \r\n\r\n                           {item?.metric_key_name == \"rebuffering_ratio\" ? <p>Rebuffering Ratio</p> : item?.metric_key_name == \"total_minutes_watched\" ? <p>Total Mins Watched</p> :\r\n                              item?.metric_key_name == \"video_start_time\" ? <p>Video Startup Time</p> : item?.metric_key_name == \"rebuffering_percentage\" ? <p>Rebuffering %</p> :\r\n                                 item?.metric_key_name == \"minutes_per_unique_devices\" ? <p>Mins/Unique Devices</p> : item?.metric_key_name == \"bandwidth\" ? <p>Avg Bandwidth</p> :\r\n                                    item?.metric_key_name == \"average_percentage_completion\" ? <p>Avg % Completion</p> : <p>{item?.metricname}</p>}\r\n\r\n                        </div>\r\n                     </Grid>\r\n                  )}\r\n               </Grid>\r\n               <DashboardLocation />\r\n               {/* <Location dashboardRow={true}/> */}\r\n               <RealTimeSliderContainer partnerDetail={false} />\r\n               <UserEngagementSliderContainer partnerDetail={false} />\r\n               <QualityOfExperienceSliderContainer partnerDetail={false} />\r\n               {/* <VideoQCSliderContainer /> */}\r\n               <MitigationSliderContainer partnerDetail={false} />\r\n               <AIPipelineSliderContainer />\r\n               <DashboardAnalysis />\r\n            </>\r\n         }\r\n      </div>\r\n\r\n   )\r\n}\r\n","import React from 'react'  \r\nimport Dashboard from 'Routes/qoe/dashboard/index'\r\n\r\nexport default function CrmDashboard(props){\r\n   return (\r\n      <div className=\"ecom-dashboard-wrapper\">\r\n         <Dashboard/>\r\n      </div>\r\n   )\r\n}\r\n"],"sourceRoot":""}