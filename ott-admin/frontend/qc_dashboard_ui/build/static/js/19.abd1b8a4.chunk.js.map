{"version":3,"sources":["Components/QualityExperience/RealTimeMetrics.js","Routes/qoe/realtime/index.js"],"names":["RealTimeMetrics","dispatch","useDispatch","realdata","useSelector","state","qoeReducer","metric_type","metricType","metric_type_fullname","metricTypefulname","favorite","favoriteMetric","cdnVal","filters","cdn","contentTypeVal","content_type","contentPartnetVal","content_partner","locationVal","location","useState","unit","setUnit","metricsList","setMetricList","isLoadingData","setisLoadingData","setCdn","contentType","setContentType","contentPartner","setContentPartner","setLocation","metric","setMetric","metricHeader","setMetricHeader","aggregationInterval","setAggregationInterval","devicePlatform","setDevicePlatform","Math","floor","Date","getTime","fromDate","setFromDate","toDate","setToDate","updatedGraphData","setUpdatedGraphData","allGraphPoints","setAllGraphPoints","androidGraphPoints","setAndroidGraphPoints","iosGraphPoints","setIosGraphPoints","chromeGraphPoints","setChromeGraphPoints","tvGraphPoints","setTvGraphPoints","firestickGraphPoints","setFirestickGraphPoints","metricGraphPoints","setMetricGraphPoints","androidDataPoints","setAndroidDataPoints","iosDataPoints","setIosDataPoints","chromeDataPoints","setChromeDataPoints","tvDataPoints","setTvDataPoints","firestickDataPoints","setFirestickDataPoints","graphPointsUpdated","setGraphPointsUpdated","selectVal","setSelectVal","xAxis","setXAxis","setisMetricsListLoading","startDate","endDate","key","range","setRange","openModal","setModalOpen","setStartDate","setEndDate","refresh","setRefresh","androidDataReport","setAndroidDataReport","iosDataReport","setIosDataReport","webDataReport","setWebDataReport","firestickDataReport","setFirestickDataReport","totalDataReport","setTotalDataReport","attemptsData","setAttemptsData","videoStartFailuresData","setVideoStartFailuresData","exitBeforeVideoStartsData","setExitBeforeVideoStartsData","succesfullPlaysData","setSuccesfullPlaysData","AndroidSmartTvGraphPoints","setAndroidSmartTvGraphPoints","AndroidSmartTvDataPoints","setAndroidSmartTvDataPoints","AndroidSmartTvDataReport","setAndroidSmartTvDataReport","useEffect","realtime_metrices_name","device_platform","length","getLocationWithoutState","val","temparray","forEach","element","push","split","updatePlatformData","layout","itemsToRemove","dpl","j","i","splice","calculateDateRange","timestamp","sd","ts","moment","endOf","_d","realTimePageData","fetchTheRequest","clearRealTimeDataCombine","getRealTimePage","undefined","fromDateInfo","Object","keys","datas","time","monthNames","all","rebuffering_percentage","timestampArr","time_stamp","getMonth","getDate","format","getHours","getMinutes","getSeconds","androidData","iosData","chromeData","tvData","firestickData","AndroidSmartTvData","includes","find","item","Android","datasReport","iOS","Web","FireTV","Firestick","AndroidSmartTv","total_minutes_watched","totalData","error","realTimePageDataCombine","information","f","total_sum","getUniqueFilters","getFavoriteMetrics","dataToShow","options","legend","display","labels","fontColor","ChartConfig","legendFontColor","scales","yAxes","title","text","replace","toUpperCase","font","size","ticks","precision","xAxes","map","c","getCombineLabels","datasets","label","data","attempts","getAttemptsData","fill","borderColor","backgroundColor","video_start_failures","videStartFailuresData","exit_before_video_starts","exitBeforeVideoStarts","succesful_plays","succesfullPlays","setMetricType","setMetricTypeFullName","interval","setInterval","clearInterval","timeGraphDataPoints","handle","useFullScreenHandle","settitle","fullCombinationGraphPoints","lengths","a","indexOf","max","className","Paper","TextField","onChange","e","fullData","target","value","filter","toLowerCase","id","placeholder","variant","fullWidth","LeftMenu","updateMetricHeader","updateParentMetric","leftMenuMetrics","updateMetric","metricName","Box","sx","width","bgcolor","style","fontSize","fontWeight","textTransform","Stack","direction","spacing","float","IconButton","color","onClick","node","document","querySelector","domtoimage","toPng","quality","then","dataUrl","createElement","href","download","createFileName","click","catch","console","Tooltip","placement","aa","index","d","toString","Metrice","Timestamp","heading","Platform","fileName","exportType","exportFromJSON","types","csv","enter","FormControl","InputLabel","Select","labelId","MenuItem","disabled","contentEditable","mx","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","flexDirection","justifyContent","selection","ranges","editableDateInputs","moveRangeOnFirstSelection","maxDate","ModalFooter","Button","NotificationManager","log","marginLeft","FilterLayout","getCdn","getContentPartner","getContentType","getLocation","savePlatformData","AppliedFilters","removeDevicePlatform","platform","Array","isArray","localStorage","removeItem","final","removeContentPartner","type","removeContentType","removeLocation","handleReload","androidSmartTvReport","androidSmartTvDataPoints","timeGraphPoints","RctPageLoader","CrmRealTime","props"],"mappings":"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","file":"static/js/19.abd1b8a4.chunk.js","sourcesContent":["/*eslint react-hooks/exhaustive-deps: \"off\"*/\r\nimport * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createFileName } from \"use-react-screenshot\";\r\nimport LineChartComponent from \"./line-chart\";\r\nimport AppliedFilters from \"./AppliedFilters\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport FilterLayout from \"./FilterLayout\";\r\nimport LeftMenu from \"./LeftMenu\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport CameraAltOutlinedIcon from \"@mui/icons-material/CameraAltOutlined\";\r\nimport FileDownloadOutlinedIcon from \"@mui/icons-material/FileDownloadOutlined\";\r\nimport FullscreenOutlinedIcon from \"@mui/icons-material/FullscreenOutlined\";\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\nimport RctPageLoader from \"Components/RctPageLoader/RctPageLoader\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport moment from \"moment\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport {\r\n  clearRealTimeDataCombine,\r\n  getFavoriteMetrics,\r\n  getRealTimePage,\r\n  getUniqueFilters,\r\n  setMetricType,\r\n  setMetricTypeFullName,\r\n} from \"Store/Actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ChartConfig from \"Constants/chart-config\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n// import exportFromJSON from 'export-from-json'\r\n\r\nconst RealTimeMetrics = () => {\r\n  const dispatch = useDispatch();\r\n  const realdata = useSelector((state) => state.qoeReducer);\r\n  const metric_type = realdata?.metricType;\r\n  const metric_type_fullname = realdata?.metricTypefulname;\r\n  const favorite = realdata?.favoriteMetric;\r\n  const cdnVal = realdata?.filters?.cdn;\r\n  const contentTypeVal = realdata?.filters?.content_type;\r\n  const contentPartnetVal = realdata?.filters?.content_partner;\r\n  const locationVal = realdata?.filters?.location;\r\n  const [unit, setUnit] = useState(\"\");\r\n  const [metricsList, setMetricList] = useState([]);\r\n  const [isLoadingData, setisLoadingData] = useState(false);\r\n  const [cdn, setCdn] = useState([]);\r\n  const [contentType, setContentType] = useState([]);\r\n  const [contentPartner, setContentPartner] = useState([]);\r\n  const [location, setLocation] = useState([]);\r\n  const [metric, setMetric] = useState(\r\n    metric_type ? metric_type : \"average_bitrate\"\r\n  );\r\n  const [metricHeader, setMetricHeader] = useState(\r\n    metric_type_fullname ? metric_type_fullname : \"Average Bitrate\"\r\n  );\r\n  const [aggregationInterval, setAggregationInterval] = useState(\"1h\");\r\n  const [devicePlatform, setDevicePlatform] = useState([\"dummy\"]);\r\n  const [fromDate, setFromDate] = useState(\r\n    Math.floor(new Date().getTime() / 1000.0) - 24 * 3600\r\n  );\r\n  const [toDate, setToDate] = useState(\r\n    Math.floor(new Date().getTime() / 1000.0)\r\n  );\r\n  const [updatedGraphData, setUpdatedGraphData] = useState();\r\n  const [allGraphPoints, setAllGraphPoints] = useState([]);\r\n  const [androidGraphPoints, setAndroidGraphPoints] = useState([]);\r\n  const [iosGraphPoints, setIosGraphPoints] = useState([]);\r\n  const [chromeGraphPoints, setChromeGraphPoints] = useState([]);\r\n  const [tvGraphPoints, setTvGraphPoints] = useState([]);\r\n  const [firestickGraphPoints, setFirestickGraphPoints] = useState([]);\r\n  const [metricGraphPoints, setMetricGraphPoints] = useState();\r\n  const [androidDataPoints, setAndroidDataPoints] = useState();\r\n  const [iosDataPoints, setIosDataPoints] = useState();\r\n  const [chromeDataPoints, setChromeDataPoints] = useState();\r\n  const [tvDataPoints, setTvDataPoints] = useState();\r\n  const [firestickDataPoints, setFirestickDataPoints] = useState();\r\n  const [graphPointsUpdated, setGraphPointsUpdated] = useState(true);\r\n  const [selectVal, setSelectVal] = useState(\"1d\");\r\n  const [xAxis, setXAxis] = useState(\"hour\");\r\n  const [metricsListLoading, setisMetricsListLoading] = useState(false);\r\n  const [range, setRange] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  const [openModal, setModalOpen] = useState(false);\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [refresh, setRefresh] = useState(10);\r\n  //f0r drop down-------------------\r\n  const [androidDataReport, setAndroidDataReport] = useState();\r\n  const [iosDataReport, setIosDataReport] = useState();\r\n  const [webDataReport, setWebDataReport] = useState();\r\n  const [firestickDataReport, setFirestickDataReport] = useState();\r\n  const [totalDataReport, setTotalDataReport] = useState();\r\n  //for Video Plays And Failures\r\n  const [attemptsData, setAttemptsData] = useState();\r\n  const [videoStartFailuresData, setVideoStartFailuresData] = useState();\r\n  const [exitBeforeVideoStartsData, setExitBeforeVideoStartsData] = useState();\r\n  const [succesfullPlaysData, setSuccesfullPlaysData] = useState();\r\n  //-----------------------------------\r\n  const [AndroidSmartTvGraphPoints, setAndroidSmartTvGraphPoints] = useState([]);\r\n  const [AndroidSmartTvDataPoints, setAndroidSmartTvDataPoints] = useState([]);\r\n  const [AndroidSmartTvDataReport, setAndroidSmartTvDataReport] = useState([]);\r\n//--------------------------------------------\r\n\r\n  useEffect(() => {\r\n    if (realdata) {\r\n      setMetricList(realdata?.filters?.realtime_metrices_name);\r\n    }\r\n  }, [realdata?.filters?.realtime_metrices_name]);\r\n\r\n  useEffect(() => {\r\n    if (realdata?.device_platform.length > 0) {\r\n      setDevicePlatform(realdata?.device_platform);\r\n    }\r\n  }, [realdata?.device_platform]);\r\n\r\n  const getCdn = (val) => {\r\n    setCdn(val);\r\n  };\r\n  const getContentType = (val) => {\r\n    setContentType(val);\r\n  };\r\n  const getContentPartner = (val) => {\r\n    setContentPartner(val);\r\n  };\r\n  const getLocation = (val) => {\r\n    setLocation(val);\r\n  };\r\n\r\n  const getLocationWithoutState = (val) => {\r\n    let temparray = [];\r\n    val.forEach((element) => {\r\n      temparray.push(element.split(\"(\")[0]);\r\n    });\r\n    return temparray;\r\n  };\r\n  const updateMetricHeader = (data) => {\r\n    setMetricHeader(data)\r\n  }\r\n  const updateMetric = (metricName) => {\r\n    setXAxis(\"hour\");\r\n    setDevicePlatform(realdata?.device_platform);\r\n    setMetric(metricName);\r\n    setStartDate();\r\n    setEndDate();\r\n    setSelectVal('1d')\r\n    setRange([\r\n      {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: \"selection\",\r\n      },\r\n    ]);\r\n    setFromDate(Math.floor(new Date().getTime() / 1000.0) - 24 * 3600);\r\n    setToDate(Math.floor(new Date().getTime() / 1000.0));\r\n    setAggregationInterval(\"1h\")\r\n    setRefresh(10)\r\n    setSelectVal('1d')\r\n    setIosDataPoints([])\r\n    setAndroidDataPoints([])\r\n    setChromeDataPoints([])\r\n    setFirestickDataPoints([])\r\n    setTvDataPoints([])\r\n    setAndroidSmartTvDataPoints([])\r\n    //reprt---data--------------\r\n    setIosDataReport([]);\r\n    setAndroidDataReport([]);\r\n    setWebDataReport([]);\r\n    setFirestickDataReport([]);\r\n    setTotalDataReport([]);\r\n    setAndroidSmartTvDataReport([])\r\n    //------------------------------\r\n  };\r\n\r\n  const updatePlatformData = (layout, itemsToRemove) => {\r\n    let dpl = devicePlatform;\r\n\r\n    if (layout === \"AppliedFilters\") {\r\n      // remove the elemets you got\r\n      for (var j = 0; j < itemsToRemove.length; j++) {\r\n        for (var i = 0; i < dpl.length; i++) {\r\n          if (dpl[i] === itemsToRemove[j]) {\r\n            dpl.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n      setDevicePlatform(dpl);\r\n    } else if (layout === \"FilterLayout\") {\r\n      // add the element you get\r\n    }\r\n  };\r\n\r\n  const savePlatformData = (val) => {\r\n    setDevicePlatform(val);\r\n  };\r\n\r\n  const removeContentPartner = (type) => {\r\n    const data = contentPartner;\r\n    const final = data.filter((d) => d !== type);\r\n    setContentPartner(final);\r\n  };\r\n\r\n  const removeContentType = (type) => {\r\n    const dataType = contentType;\r\n    const final = dataType.filter((d) => d !== type);\r\n    setContentType(final);\r\n  };\r\n\r\n  const removeLocation = (type) => {\r\n    if (Array.isArray(type)) {\r\n      setLocation([]);\r\n    }\r\n    else {\r\n      const dataType = location;\r\n      const final = dataType.filter((d) => d !== type);\r\n      setLocation(final);\r\n    }\r\n  };\r\n\r\n  const removeDevicePlatform = (platform) => {\r\n    if (Array.isArray(platform)) {\r\n      setDevicePlatform([]);\r\n      setContentPartner([]);\r\n      setContentType([]);\r\n      localStorage.removeItem(\"contentPartner\");\r\n    } else {\r\n      const dpa = devicePlatform;\r\n      const final = dpa.filter((d) => d !== platform);\r\n      setDevicePlatform(final);\r\n    }\r\n  };\r\n  const changeRefresh = (e) => {\r\n    setRefresh(e.target.value);\r\n  };\r\n  const setDataRange = (e) => {\r\n    setStartDate();\r\n    setEndDate();\r\n    setRange([\r\n      {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: \"selection\",\r\n      },\r\n    ]);\r\n    setSelectVal(e.target.value);\r\n    let aggrInterval = \"\";\r\n    switch (e.target.value) {\r\n      case \"1min\": {\r\n        aggrInterval = \"10s\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"sec\");\r\n        calculateDateRange(\"1min\");\r\n        return;\r\n      }\r\n      case \"5min\": {\r\n        aggrInterval = \"10s\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"sec\");\r\n        calculateDateRange(\"5min\");\r\n        return;\r\n      }\r\n      case \"1h\": {\r\n        aggrInterval = \"1m\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"hour\");\r\n        calculateDateRange(\"1h\");\r\n        return;\r\n      }\r\n      case \"1d\": {\r\n        aggrInterval = \"1h\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"hour\");\r\n        calculateDateRange(\"1d\");\r\n        return;\r\n      }\r\n      case \"1w\": {\r\n        aggrInterval = \"1d\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"date\");\r\n        calculateDateRange(\"1w\");\r\n        return;\r\n      }\r\n      case \"1m\": {\r\n        aggrInterval = \"2d\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"date\");\r\n        calculateDateRange(\"1m\");\r\n        return;\r\n      }\r\n      case \"1y\": {\r\n        aggrInterval = \"30d\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"date\");\r\n        calculateDateRange(\"1y\");\r\n        return;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const calculateDateRange = (timestamp) => {\r\n    let sd = new Date(); //current system date\r\n    let toDate = Math.floor(sd.getTime() / 1000.0);\r\n    setToDate(toDate);\r\n    // let ts = Math.floor(new Date().getTime() / 1000);\r\n    let ts = Math.floor(moment().endOf(\"date\")._d.getTime() / 1000.0);\r\n    let fromDateRange;\r\n\r\n    switch (timestamp) {\r\n      case \"1min\": {\r\n        fromDateRange = ts - 60;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"5min\": {\r\n        fromDateRange = ts - 300;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1h\": {\r\n        fromDateRange = ts - 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1d\": {\r\n        fromDateRange = ts - 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1w\": {\r\n        fromDateRange = ts - 7 * 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1m\": {\r\n        fromDateRange = ts - 30 * 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1y\": {\r\n        fromDateRange = ts - 12 * 30 * 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (realdata && realdata.realTimePageData) {\r\n      setisLoadingData(false);\r\n      setUpdatedGraphData(realdata.realTimePageData);\r\n    }\r\n  }, [realdata]);\r\n\r\n  const fetchTheRequest = (\r\n    cdn,\r\n    contentType,\r\n    contentPartner,\r\n    location,\r\n    metric,\r\n    toDate,\r\n    fromDate,\r\n    aggregationInterval,\r\n    devicePlatform\r\n  ) => {\r\n    setAndroidGraphPoints([]);\r\n    setIosGraphPoints([]);\r\n    setChromeGraphPoints([]);\r\n    setAllGraphPoints([]);\r\n    setTvGraphPoints([]);\r\n    setFirestickGraphPoints([]);\r\n    setAndroidSmartTvGraphPoints([])\r\n    setisLoadingData(true);\r\n    if (metric === \"video_plays_and_failures\") {\r\n      dispatch(clearRealTimeDataCombine());\r\n      dispatch(\r\n        getRealTimePage(\r\n          dispatch,\r\n          cdn,\r\n          contentType,\r\n          contentPartner,\r\n          getLocationWithoutState(location), //  location,\r\n          metric,\r\n          toDate,\r\n          fromDate,\r\n          aggregationInterval,\r\n          []\r\n        )\r\n      );\r\n    } else {\r\n      if (devicePlatform[0] === \"dummy\") {\r\n        return null;\r\n      }\r\n      dispatch(\r\n        getRealTimePage(\r\n          dispatch,\r\n          cdn,\r\n          contentType,\r\n          contentPartner,\r\n          getLocationWithoutState(location), //  location,\r\n          metric,\r\n          toDate,\r\n          fromDate,\r\n          aggregationInterval,\r\n          devicePlatform\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleReload = () => {\r\n    let ts = Math.floor(new Date().getTime() / 1000);\r\n    let fromDateInfo;\r\n    switch (selectVal) {\r\n      case \"1min\": {\r\n        fromDateInfo = ts - 60;\r\n        break;\r\n      }\r\n      case \"5min\": {\r\n        fromDateInfo = ts - 300;\r\n        break;\r\n      }\r\n      case \"1h\": {\r\n        fromDateInfo = ts - 3600;\r\n        break;\r\n      }\r\n      case \"1d\": {\r\n        fromDateInfo = ts - 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1w\": {\r\n        fromDateInfo = ts - 7 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1m\": {\r\n        fromDateInfo = ts - 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1y\": {\r\n        fromDateInfo = ts - 12 * 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    fetchTheRequest(\r\n      cdn,\r\n      contentType,\r\n      contentPartner,\r\n      getLocationWithoutState(location), //  location,\r\n      metric,\r\n      startDate ? toDate : ts,\r\n      endDate ? fromDate : fromDateInfo,\r\n      aggregationInterval,\r\n      devicePlatform\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (updatedGraphData == undefined) {\r\n      return;\r\n    }\r\n    let ts = Math.floor(new Date().getTime() / 1000);\r\n    let fromDateInfo;\r\n    switch (selectVal) {\r\n      case \"1min\": {\r\n        fromDateInfo = ts - 60;\r\n        break;\r\n      }\r\n      case \"5min\": {\r\n        fromDateInfo = ts - 300;\r\n        break;\r\n      }\r\n      case \"1h\": {\r\n        fromDateInfo = ts - 3600;\r\n        break;\r\n      }\r\n      case \"1d\": {\r\n        fromDateInfo = ts - 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1w\": {\r\n        fromDateInfo = ts - 7 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1m\": {\r\n        fromDateInfo = ts - 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1y\": {\r\n        fromDateInfo = ts - 12 * 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    fetchTheRequest(\r\n      cdn,\r\n      contentType,\r\n      contentPartner,\r\n      getLocationWithoutState(location), //  location,\r\n      metric,\r\n      toDate,\r\n      startDate && endDate ? fromDate : fromDateInfo,\r\n      aggregationInterval,\r\n      devicePlatform\r\n    );\r\n  }, [\r\n    cdn,\r\n    contentType,\r\n    contentPartner,\r\n    location,\r\n    metric,\r\n    toDate,\r\n    fromDate,\r\n    aggregationInterval,\r\n    devicePlatform,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (updatedGraphData == undefined) {\r\n      return;\r\n    }\r\n    if (Object.keys(updatedGraphData).length > 0) {\r\n      //   setisLoadingData(true);\r\n      let datas = [];\r\n      let time = [];\r\n      setGraphPointsUpdated(false);\r\n      const monthNames = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ];\r\n      if (devicePlatform) {\r\n        if (devicePlatform.length === 0) {\r\n          datas =\r\n            metric && metric.length !== 0\r\n              ? updatedGraphData[0]?.all[metric]\r\n              : updatedGraphData[0]?.all?.rebuffering_percentage;\r\n          let timestampArr = updatedGraphData[0]?.all?.time_stamp;\r\n          setUnit(updatedGraphData[0]?.all?.unit);\r\n          for (let i = 0; i < timestampArr.length; i++) {\r\n            if (xAxis === \"hour\")\r\n              time.push(\r\n                monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                \" \" +\r\n                new Date(timestampArr[i]).getDate() +\r\n                \",\" +\r\n                moment(timestampArr[i]).format(\"hh:mm\")\r\n              );\r\n            else if (xAxis === \"date\")\r\n              time.push(\r\n                monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                \" \" +\r\n                new Date(timestampArr[i]).getDate()\r\n              );\r\n            else if (xAxis === \"sec\")\r\n              time.push(\r\n                monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                \" \" +\r\n                new Date(timestampArr[i]).getDate() +\r\n                \",\" +\r\n                new Date(timestampArr[i]).getHours() +\r\n                \":\" +\r\n                new Date(timestampArr[i]).getMinutes() +\r\n                \":\" +\r\n                new Date(timestampArr[i]).getSeconds()\r\n              );\r\n          }\r\n          setAllGraphPoints(time);\r\n          setMetricGraphPoints(datas);\r\n        } else {\r\n          let androidData;\r\n          let iosData;\r\n          let chromeData;\r\n          let tvData;\r\n          let firestickData;\r\n          let AndroidSmartTvData;\r\n          if (devicePlatform.includes(\"Android\")) {\r\n            androidData = updatedGraphData.find((item) => item.Android);\r\n            if (androidData) {\r\n              let datas = [];\r\n              let time = [];\r\n              //report data platform wise\r\n              let datasReport = 0;\r\n              datasReport =\r\n                metric && metric.length !== 0\r\n                  ? androidData.Android[\"total_sum\"]\r\n                  : androidData.Android.total_sum;\r\n              //report data platform wise\r\n\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? androidData.Android[metric]\r\n                  : androidData.Android.rebuffering_percentage;\r\n              let timestampArr = androidData.Android.time_stamp;\r\n              setUnit(androidData.Android.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    new Date(timestampArr[i]).getHours() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getMinutes() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setAndroidGraphPoints(time);\r\n              setAndroidDataPoints(datas);\r\n              setAndroidDataReport(datasReport)\r\n            }\r\n          }\r\n          if (devicePlatform.includes(\"iOS\")) {\r\n            iosData = updatedGraphData.find((item) => item.iOS);\r\n            if (iosData) {\r\n              let datas = [];\r\n              let time = [];\r\n              //report data platform wise\r\n              let datasReport = 0;\r\n              datasReport =\r\n                metric && metric.length !== 0\r\n                  ? iosData.iOS[\"total_sum\"]\r\n                  : iosData.iOS.total_sum;\r\n              //report data platform wise\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? iosData.iOS[metric]\r\n                  : iosData.iOS.rebuffering_percentage;\r\n              let timestampArr = iosData.iOS.time_stamp;\r\n              setUnit(iosData.iOS.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    new Date(timestampArr[i]).getHours() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getMinutes() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setIosGraphPoints(time);\r\n              setIosDataPoints(datas);\r\n              setIosDataReport(datasReport)\r\n            }\r\n          }\r\n          if (devicePlatform.includes(\"Web\")) {\r\n            chromeData = updatedGraphData.find((item) => item.Web);\r\n            if (chromeData) {\r\n              let datas = [];\r\n              let time = [];\r\n              //report data platform wise\r\n              let datasReport = 0;\r\n              datasReport =\r\n                metric && metric.length !== 0\r\n                  ? chromeData.Web[\"total_sum\"]\r\n                  : chromeData.Web.total_sum;\r\n              //report data platform wise\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? chromeData.Web[metric]\r\n                  : chromeData.Web.rebuffering_percentage;\r\n              let timestampArr = chromeData.Web.time_stamp;\r\n              setUnit(chromeData.Web.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    new Date(timestampArr[i]).getHours() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getMinutes() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setChromeGraphPoints(time);\r\n              setChromeDataPoints(datas);\r\n              setWebDataReport(datasReport)\r\n            }\r\n          }\r\n          if (devicePlatform.includes(\"FireTV\")) {\r\n            tvData = updatedGraphData.find((item) => item.FireTV);\r\n\r\n            if (tvData) {\r\n              let datas = [];\r\n              let time = [];\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? tvData.FireTV[metric]\r\n                  : tvData.FireTV.rebuffering_percentage;\r\n              let timestampArr = tvData.FireTV.time_stamp;\r\n              setUnit(tvData.FireTV.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    new Date(timestampArr[i]).getHours() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getMinutes() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setTvGraphPoints(time);\r\n              setTvDataPoints(datas);\r\n            }\r\n          }\r\n          if (devicePlatform.includes(\"Firestick\")) {\r\n            firestickData = updatedGraphData.find((item) => item.Firestick);\r\n            if (firestickData) {\r\n              let datas = [];\r\n              let time = [];\r\n\r\n              //report data platform wise\r\n              let datasReport = 0;\r\n              datasReport =\r\n                metric && metric.length !== 0\r\n                  ? firestickData.Firestick[\"total_sum\"]\r\n                  : firestickData.Firestick.total_sum;\r\n              //report data platform wise\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? firestickData.Firestick[metric]\r\n                  : firestickData.Firestick.rebuffering_percentage;\r\n              let timestampArr = firestickData.Firestick.time_stamp;\r\n              setUnit(firestickData.Firestick.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    new Date(timestampArr[i]).getHours() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getMinutes() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setFirestickGraphPoints(time);\r\n              setFirestickDataPoints(datas);\r\n              setFirestickDataReport(datasReport)\r\n            }\r\n          }\r\n          if (devicePlatform.includes(\"AndroidSmartTv\")) {\r\n            AndroidSmartTvData = updatedGraphData.find((item) => item.AndroidSmartTv);\r\n            if (AndroidSmartTvData) {\r\n              let datas = [];\r\n              let time = [];\r\n              //report data platform wise\r\n              let datasReport = 0;\r\n              datasReport =\r\n                metric && metric.length !== 0\r\n                  ? AndroidSmartTvData.AndroidSmartTv[\"total_sum\"]\r\n                  : AndroidSmartTvData.AndroidSmartTv.total_sum;\r\n              //report data platform wise\r\n\r\n              datas =\r\n                metric && metric.length !== 0\r\n                  ? AndroidSmartTvData.AndroidSmartTv[metric]\r\n                  : AndroidSmartTvData.AndroidSmartTv.total_minutes_watched;\r\n              let timestampArr = AndroidSmartTvData.AndroidSmartTv.time_stamp;\r\n              setUnit(AndroidSmartTvData.AndroidSmartTv.unit);\r\n              for (let i = 0; i < timestampArr.length; i++) {\r\n                if (xAxis === \"hour\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    moment(timestampArr[i]).format(\"hh:mm\")\r\n                  );\r\n                else if (xAxis === \"date\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate()\r\n                  );\r\n                else if (xAxis === \"sec\")\r\n                  time.push(\r\n                    monthNames[new Date(timestampArr[i]).getMonth()] +\r\n                    \" \" +\r\n                    new Date(timestampArr[i]).getDate() +\r\n                    \",\" +\r\n                    new Date(timestampArr[i]).getHours() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getMinutes() +\r\n                    \":\" +\r\n                    new Date(timestampArr[i]).getSeconds()\r\n                  );\r\n              }\r\n              setAndroidSmartTvGraphPoints(time);\r\n              setAndroidSmartTvDataPoints(datas);\r\n              setAndroidSmartTvDataReport(datasReport)\r\n            }\r\n          }\r\n\r\n          try {\r\n            let totalData = updatedGraphData.find((item) => item.all);\r\n            //report data platform wise\r\n            let datasReport = 0;\r\n            datasReport =\r\n              metric && metric.length !== 0\r\n                ? totalData.all[\"total_sum\"]\r\n                : totalData.all.total_sum;\r\n            setTotalDataReport(datasReport)\r\n            //report data platform wise\r\n          } catch (error) {\r\n\r\n          }\r\n          // if()\r\n\r\n\r\n\r\n        }\r\n        setGraphPointsUpdated(true);\r\n      }\r\n    }\r\n\r\n\r\n  }, [updatedGraphData]);\r\n\r\n  useEffect(() => {\r\n    if (realdata?.realTimePageDataCombine.length > 0) {\r\n      const information = realdata?.realTimePageDataCombine?.find((f) => {\r\n        if (f?.all !== undefined) {\r\n          return Object.keys(f?.all).includes(\"video_start_failures\");\r\n        }\r\n      });\r\n      if (information) {\r\n        setVideoStartFailuresData(information?.all?.total_sum);\r\n      } else {\r\n        setVideoStartFailuresData(0);\r\n      }\r\n    }\r\n    if (realdata?.realTimePageDataCombine.length > 0) {\r\n      const information = realdata?.realTimePageDataCombine?.find((f) => {\r\n        if (f?.all !== undefined) {\r\n          return Object.keys(f?.all).includes(\"attempts\");\r\n        }\r\n      });\r\n      if (information) {\r\n        setAttemptsData(information?.all?.total_sum);\r\n      } else {\r\n        setAttemptsData(0);\r\n      }\r\n    }\r\n    if (realdata?.realTimePageDataCombine.length > 0) {\r\n      const information = realdata?.realTimePageDataCombine?.find((f) => {\r\n        if (f?.all !== undefined) {\r\n          return Object.keys(f?.all).includes(\"exit_before_video_starts\");\r\n        }\r\n      });\r\n      if (information) {\r\n        setExitBeforeVideoStartsData(information?.all?.total_sum);\r\n      } else {\r\n        setExitBeforeVideoStartsData(0);\r\n      }\r\n    }\r\n    if (realdata?.realTimePageDataCombine.length > 0) {\r\n      const information = realdata?.realTimePageDataCombine?.find((f) => {\r\n        if (f?.all !== undefined) {\r\n          return Object.keys(f?.all).includes(\"succesful_plays\");\r\n        }\r\n      });\r\n      if (information) {\r\n        setSuccesfullPlaysData(information?.all?.total_sum);\r\n      } else {\r\n        setSuccesfullPlaysData(0);\r\n      }\r\n    }\r\n\r\n  }, [realdata?.realTimePageDataCombine])\r\n\r\n  useEffect(() => {\r\n    const isEmpty = Object.keys(realdata?.filters).length === 0;\r\n    if (isEmpty) {\r\n      setisMetricsListLoading(true);\r\n      dispatch(getUniqueFilters(dispatch));\r\n      setisMetricsListLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!favorite) {\r\n      dispatch(getFavoriteMetrics(dispatch));\r\n    }\r\n  }, []);\r\n\r\n  const getCombineLabels = () => {\r\n    const monthNames = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    if (realdata.realTimePageDataCombine.length > 0) {\r\n      let labels = [];\r\n      realdata.realTimePageDataCombine[0]?.all?.time_stamp.map((c) => {\r\n        if (xAxis === \"hour\") {\r\n          return labels.push(\r\n            monthNames[new Date(c).getMonth()] +\r\n            \" \" +\r\n            new Date(c).getDate() +\r\n            \",\" +\r\n            moment(c).format(\"hh:mm\")\r\n          );\r\n        } else if (xAxis === \"date\") {\r\n          return labels.push(\r\n            monthNames[new Date(c).getMonth()] + \" \" + new Date(c).getDate()\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      });\r\n      return labels;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const getAttemptsData = () => {\r\n    if (realdata?.realTimePageDataCombine.length > 0) {\r\n      const information = realdata?.realTimePageDataCombine?.find((f) => {\r\n        if (f?.all !== undefined) {\r\n          return Object.keys(f?.all).includes(\"attempts\");\r\n        }\r\n      });\r\n      if (information) {\r\n        //  setAttemptsData(information?.all?.total_sum);\r\n        return information?.all?.attempts;\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  };\r\n\r\n  const videStartFailuresData = () => {\r\n    if (realdata?.realTimePageDataCombine.length > 0) {\r\n      const information = realdata?.realTimePageDataCombine?.find((f) => {\r\n        if (f?.all !== undefined) {\r\n          return Object.keys(f?.all).includes(\"video_start_failures\");\r\n        }\r\n      });\r\n      if (information) {\r\n        // setVideoStartFailuresData(information?.all?.total_sum);\r\n        return information?.all?.video_start_failures;\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  };\r\n\r\n  const exitBeforeVideoStarts = () => {\r\n    if (realdata?.realTimePageDataCombine.length > 0) {\r\n      const information = realdata?.realTimePageDataCombine?.find((f) => {\r\n        if (f?.all !== undefined) {\r\n          return Object.keys(f?.all).includes(\"exit_before_video_starts\");\r\n        }\r\n      });\r\n      if (information) {\r\n        //setExitBeforeVideoStartsData(information?.all?.total_sum);\r\n        return information?.all?.exit_before_video_starts;\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  };\r\n\r\n  const succesfullPlays = () => {\r\n    if (realdata?.realTimePageDataCombine.length > 0) {\r\n      const information = realdata?.realTimePageDataCombine?.find((f) => {\r\n        if (f?.all !== undefined) {\r\n          return Object.keys(f?.all).includes(\"succesful_plays\");\r\n        }\r\n      });\r\n      if (information) {\r\n        //setSuccesfullPlaysData(information?.all?.total_sum);\r\n        return information?.all?.succesful_plays;\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  };\r\n  const xAxesTitle = () => {\r\n    if (selectVal === \"5m\") {\r\n      return `DURATION (In 5 Minutes)`;\r\n    }\r\n    if (selectVal === \"1h\") {\r\n      return `DURATION (In 1 Hour)`;\r\n    } else if (selectVal === \"1d\") {\r\n      return `DURATION (In 1 Day)`;\r\n    } else if (selectVal === \"1w\") {\r\n      return `DURATION (In 1 Week)`;\r\n    } else if (selectVal === \"1m\") {\r\n      return `DURATION (In 1 Month)`;\r\n    } else if (selectVal === \"1y\") {\r\n      return `DURATION (In 1 Year)`;\r\n    } else if (selectVal === \"date-range\") {\r\n      return `DURATION (In Days)`;\r\n    }\r\n  };\r\n  const dataToShow = {\r\n    options: {\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n          fontColor: ChartConfig.legendFontColor,\r\n        },\r\n      },\r\n      scales: {\r\n        yAxes: {\r\n          title: {\r\n            display: true,\r\n            text: `${metric.replace(/_/g, \" \")\r\n                ? `${metric.replace(/_/g, \" \").toUpperCase()}`\r\n                : \"In Ratio\"\r\n              }`,\r\n            font: {\r\n              size: 12,\r\n            },\r\n          },\r\n          ticks: {\r\n            precision: 0,\r\n          },\r\n        },\r\n        xAxes: {\r\n          title: {\r\n            display: true,\r\n            text: xAxesTitle(),\r\n            font: {\r\n              size: 12,\r\n            },\r\n          },\r\n          ticks: {\r\n            precision: 0,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    labels: getCombineLabels(),\r\n    datasets: [\r\n      {\r\n        label: \"Attempts\",\r\n        data: getAttemptsData(),\r\n        fill: true,\r\n        borderColor: \"red\",\r\n        backgroundColor: \"rgba(255, 0, 0, 0.2)\",\r\n      },\r\n      {\r\n        label: \"Video Start Failures\",\r\n        data: videStartFailuresData(),\r\n        fill: true,\r\n        borderColor: \"blue\",\r\n        backgroundColor: \"rgba(0,0,255, 0.2)\",\r\n      },\r\n      {\r\n        label: \"Exit Before Video Starts\",\r\n        data: exitBeforeVideoStarts(),\r\n        fill: true,\r\n        borderColor: \"green\",\r\n        backgroundColor: \"rgba(0,255,0, 0.2)\",\r\n      },\r\n      {\r\n        label: \"successful Plays\",\r\n        data: succesfullPlays(),\r\n        fill: true,\r\n        borderColor: \"yellow\",\r\n        backgroundColor: \"rgba(255,255,0, 0.2)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const getImage = () => {\r\n    var node = document.querySelector(\".take-screenshot\");\r\n    var options = {\r\n      quality: 1,\r\n      bgcolor: \"#ffffff\",\r\n    };\r\n    domtoimage\r\n      .toPng(node, options)\r\n      .then(function (dataUrl) {\r\n        const a = document.createElement(\"a\");\r\n        a.href = dataUrl;\r\n        a.download = createFileName(\r\n          \"png\",\r\n          `${metric}-${moment().format(\"DD/MM/YYYY\")}`\r\n        );\r\n        a.click();\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong!\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setMetricType(\"\"));\r\n      dispatch(setMetricTypeFullName(\"\"));\r\n\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      let ts = Math.floor(new Date().getTime() / 1000);\r\n      let fromDateInfo;\r\n      switch (selectVal) {\r\n        case \"1min\": {\r\n          fromDateInfo = ts - 60;\r\n          break;\r\n        }\r\n        case \"5min\": {\r\n          fromDateInfo = ts - 300;\r\n          break;\r\n        }\r\n        case \"1h\": {\r\n          fromDateInfo = ts - 3600;\r\n          break;\r\n        }\r\n        case \"1d\": {\r\n          fromDateInfo = ts - 24 * 3600;\r\n          break;\r\n        }\r\n        case \"1w\": {\r\n          fromDateInfo = ts - 7 * 24 * 3600;\r\n          break;\r\n        }\r\n        case \"1m\": {\r\n          fromDateInfo = ts - 30 * 24 * 3600;\r\n          break;\r\n        }\r\n        case \"1y\": {\r\n          fromDateInfo = ts - 12 * 30 * 24 * 3600;\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n      fetchTheRequest(\r\n        cdn,\r\n        contentType,\r\n        contentPartner,\r\n        getLocationWithoutState(location), //  location,\r\n        metric,\r\n        startDate ? toDate : ts,\r\n        endDate ? fromDate : fromDateInfo,\r\n        aggregationInterval,\r\n        devicePlatform\r\n      );\r\n    }, refresh * 1000);\r\n    return () => clearInterval(interval);\r\n  }, [\r\n    refresh,\r\n    cdn,\r\n    contentType,\r\n    contentPartner,\r\n    getLocationWithoutState(location), //  location,\r\n    metric,\r\n    toDate,\r\n    fromDate,\r\n    aggregationInterval,\r\n    devicePlatform,\r\n  ]);\r\n\r\n  const handle = useFullScreenHandle();\r\n\r\n  // const gettitle = metric;\r\n  // var settitle = gettitle.replace(/_/g, \" \");\r\n  const gettitle = metricHeader;\r\n  var settitle = gettitle//.replace(/_/g, \" \");\r\n\r\n  let timeGraphDataPoints;\r\n  let fullCombinationGraphPoints = [];\r\n  fullCombinationGraphPoints.push(\r\n    androidGraphPoints,\r\n    iosGraphPoints,\r\n    chromeGraphPoints,\r\n    tvGraphPoints,\r\n    firestickGraphPoints,\r\n    AndroidSmartTvGraphPoints,\r\n    allGraphPoints\r\n  );\r\n  const lengths = fullCombinationGraphPoints.map((a) => a.length);\r\n  const index = lengths.indexOf(Math.max(...lengths));\r\n  timeGraphDataPoints = fullCombinationGraphPoints[index];\r\n\r\n  const searchMetricName = (e) => {\r\n    const fullData = realdata?.filters?.realtime_metrices_name;\r\n    if (e.target.value !== \"\") {\r\n      const data = fullData.filter((a) =>\r\n        a.toLowerCase().includes(e.target.value.toLowerCase())\r\n      );\r\n      setMetricList(data);\r\n    } else {\r\n      setMetricList(fullData);\r\n    }\r\n  };\r\n\r\n  const submit = () => {\r\n    let diff = ((range[0].endDate - range[0].startDate) / (1000 * 60 * 60 * 24) + 1) % 365\r\n    if (diff > 31) {\r\n\t\t\tNotificationManager.error(\"To-Date and From-Date Should be of 31 days of Gap\", \"\", 2000)\r\n\t\t\treturn;\r\n\t\t}\r\n    console.log(\"range--\", range, Math.floor(moment(range[0].endDate).endOf(\"date\")._d.getTime() / 1000.0), Math.floor(moment(range[0].startDate).endOf(\"date\")._d.getTime() / 1000.0));\r\n    setSelectVal(range[0])\r\n    setStartDate(range[0].startDate);\r\n    setEndDate(range[0].endDate);\r\n    setModalOpen(false);\r\n    setToDate(\r\n      Math.floor(moment(range[0].endDate).endOf(\"date\")._d.getTime() / 1000.0)\r\n    );\r\n    setXAxis(\"date\");\r\n    setAggregationInterval(\"1d\");\r\n    setFromDate(Math.floor(range[0].startDate.getTime() / 1000.0));\r\n  };\r\n\r\n  const getExcelDownload = () => {\r\n    const data = [];\r\n    if (metric === \"video_plays_and_failures\") {\r\n      realdata?.realTimePageDataCombine?.map((aa, index) => {\r\n        if (Object.keys(aa?.all).includes(\"attempts\")) {\r\n          return aa?.all.time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa?.all).filter(\r\n              (f) => f === \"attempts\"\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n\r\n            return data.push({\r\n              Metrice: 'attempts',\r\n              Timestamp: aa?.all.time_stamp[index],\r\n              [metric]: aa?.all?.attempts[index],\r\n              Unit: aa?.all?.unit,\r\n            });\r\n          })\r\n        } else if (Object.keys(aa?.all).includes(\"exit_before_video_starts\")) {\r\n          return aa?.all.time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa?.all).filter(\r\n              (f) => f === \"exit_before_video_starts\"\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n\r\n            return data.push({\r\n              Metrice: 'exit_before_video_starts',\r\n              Timestamp: aa?.all.time_stamp[index],\r\n              [metric]: aa?.all?.exit_before_video_starts[index],\r\n              Unit: aa?.all?.unit,\r\n            });\r\n          })\r\n        } else if (Object.keys(aa?.all).includes(\"succesful_plays\")) {\r\n          return aa?.all.time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa?.all).filter(\r\n              (f) => f === \"succesful_plays\"\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n\r\n            return data.push({\r\n              Metrice: 'successful_plays',\r\n              Timestamp: aa?.all.time_stamp[index],\r\n              [metric]: aa?.all?.succesful_plays[index],\r\n              Unit: aa?.all?.unit,\r\n            });\r\n          })\r\n        } else if (Object.keys(aa?.all).includes(\"video_start_failures\")) {\r\n          return aa?.all.time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa?.all).filter(\r\n              (f) => f === \"video_start_failures\"\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n\r\n            return data.push({\r\n              Metrice: 'video_start_failures',\r\n              Timestamp: aa?.all.time_stamp[index],\r\n              [metric]: aa?.all?.video_start_failures[index],\r\n              Unit: aa?.all?.unit,\r\n            });\r\n          })\r\n        }\r\n      })\r\n\r\n    } else {\r\n      // if(realdata?.realTimePageData.length>1){\r\n      //   realdata?.realTimePageData.shift();\r\n      // }\r\n      realdata?.realTimePageData.map((aa) => {\r\n        if (Object.keys(aa).includes(\"Android\")) {\r\n          return aa[Object.keys(aa)[0]].time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n              (f) => f === metric\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n            return data.push({\r\n              Platform: Object.keys(aa)[0],\r\n              Timestamp: aa[Object.keys(aa)[0]].time_stamp[index],\r\n              [heading]: aa[Object.keys(aa)[0]][key][index],\r\n              Unit: aa[Object.keys(aa)[0]].unit,\r\n            });\r\n          });\r\n        } else if (Object.keys(aa).includes(\"iOS\")) {\r\n          return aa[Object.keys(aa)[0]].time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n              (f) => f === metric\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n            return data.push({\r\n              Platform: Object.keys(aa)[0],\r\n              Timestamp: aa[Object.keys(aa)[0]].time_stamp[index],\r\n              [heading]: aa[Object.keys(aa)[0]][key][index],\r\n              Unit: aa[Object.keys(aa)[0]].unit,\r\n            });\r\n          });\r\n        } else if (Object.keys(aa).includes(\"Web\")) {\r\n          return aa[Object.keys(aa)[0]].time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n              (f) => f === metric\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n            return data.push({\r\n              Platform: Object.keys(aa)[0],\r\n              Timestamp: aa[Object.keys(aa)[0]].time_stamp[index],\r\n              [heading]: aa[Object.keys(aa)[0]][key][index],\r\n              Unit: aa[Object.keys(aa)[0]].unit,\r\n            });\r\n          });\r\n        } else if (Object.keys(aa).includes(\"tv\")) {\r\n          return aa[Object.keys(aa)[0]].time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n              (f) => f === metric\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n            return data.push({\r\n              Platform: Object.keys(aa)[0],\r\n              Timestamp: aa[Object.keys(aa)[0]].time_stamp[index],\r\n              [heading]: aa[Object.keys(aa)[0]][key][index],\r\n              Unit: aa[Object.keys(aa)[0]].unit,\r\n            });\r\n          });\r\n        } else if (Object.keys(aa).includes(\"Firestick\")) {\r\n          return aa[Object.keys(aa)[0]].time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n              (f) => f === metric\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n            return data.push({\r\n              Platform: Object.keys(aa)[0],\r\n              Timestamp: aa[Object.keys(aa)[0]].time_stamp[index],\r\n              [heading]: aa[Object.keys(aa)[0]][key][index],\r\n              Unit: aa[Object.keys(aa)[0]].unit,\r\n            });\r\n          });\r\n        }else if (Object.keys(aa).includes(\"AndroidSmartTv\")) {\r\n          return aa[Object.keys(aa)[0]].time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n              (f) => f === metric\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n            return data.push({\r\n              Platform: Object.keys(aa)[0],\r\n              Timestamp: aa[Object.keys(aa)[0]].time_stamp[index],\r\n              [heading]: aa[Object.keys(aa)[0]][key][index],\r\n              Unit: aa[Object.keys(aa)[0]].unit,\r\n            });\r\n          });\r\n        } else if (Object.keys(aa).includes(\"all\")) {\r\n          return aa[Object.keys(aa)[0]].time_stamp.map((d, index) => {\r\n            let key = Object.keys(aa[Object.keys(aa)[0]]).filter(\r\n              (f) => f === metric\r\n            );\r\n            const heading = key.toString().replace(/_/g, \" \");\r\n            return data.push({\r\n              Platform: Object.keys(aa)[0],\r\n              Timestamp: aa[Object.keys(aa)[0]].time_stamp[index],\r\n              [heading]: aa[Object.keys(aa)[0]][key][index],\r\n              Unit: aa[Object.keys(aa)[0]].unit,\r\n            });\r\n          });\r\n        } else {\r\n          return null;\r\n        }\r\n      });\r\n    }\r\n\r\n    const fileName = createFileName(\r\n      \"csv\",\r\n      `${metric}-${moment().format(\"DD/MM/YYYY\")}`\r\n    );\r\n    const exportType = exportFromJSON.types.csv;\r\n    exportFromJSON({ data, fileName, exportType });\r\n  };\r\n  const updateParentMetric = () => { };\r\n\r\n  // *************************** if Backend Does Not manage ***************************\r\n  // let androidPointsDisplay = []\r\n  // timeGraphDataPoints.map(b=>{\r\n  // \tif(androidGraphPoints.indexOf(b) === -1){\r\n  // \t  androidPointsDisplay.push(0)\r\n  //   }\r\n  //   else{\r\n  // \t  let index = androidGraphPoints.indexOf(b)\r\n  // \t  androidPointsDisplay.push(androidDataPoints[index])\r\n  //   }\r\n  // })\r\n  // let iosPointsDisplay = []\r\n  // timeGraphDataPoints.map(b=>{\r\n  // \tif(iosGraphPoints.indexOf(b) === -1){\r\n  // \t  iosPointsDisplay.push(0)\r\n  //   }\r\n  //   else{\r\n  // \t  let index = iosGraphPoints.indexOf(b)\r\n  // \t  iosPointsDisplay.push(iosDataPoints[index])\r\n  //   }\r\n  // })\r\n  // let chromePointsDisplay = []\r\n  // timeGraphDataPoints.map(b=>{\r\n  // \tif(chromeGraphPoints.indexOf(b) === -1){\r\n  // \t  chromePointsDisplay.push(0)\r\n  //   }\r\n  //   else{\r\n  // \t  let index = chromeGraphPoints.indexOf(b)\r\n  // \t  chromePointsDisplay.push(chromeDataPoints[index])\r\n  //   }\r\n  // })\r\n  // let allPointsDisplay = []\r\n  // timeGraphDataPoints.map(b=>{\r\n  // \tif(allGraphPoints.indexOf(b) === -1){\r\n  // \t  allPointsDisplay.push(0)\r\n  //   }\r\n  //   else{\r\n  // \t  let index = allGraphPoints.indexOf(b)\r\n  // \t  allPointsDisplay.push(metricGraphPoints[index])\r\n  //   }\r\n  // })\r\n  // console.log(\"************************\")\r\n  // console.log(androidPointsDisplay)\r\n  // console.log(iosPointsDisplay)\r\n  // console.log(chromePointsDisplay)\r\n  // console.log(allPointsDisplay)\r\n  // console.log(\"************************\")\r\n  // *************************** if Backend Does Not manage ***************************\r\n\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        <div className='col-md-3'>\r\n          <Paper className='SidePanel'>\r\n            <h3 className='left-menu-title'>REAL-TIME KEY INSIGHTS</h3>\r\n            <div className='analysisHeaderRight search-insight-container'>\r\n              <i className='zmdi zmdi-search'></i>\r\n              <TextField\r\n                onChange={searchMetricName}\r\n                id='outlined-basic'\r\n                className='search-insight'\r\n                placeholder='Search...'\r\n                variant='outlined'\r\n                fullWidth\r\n              />\r\n            </div>\r\n            {/* {!metricsListLoading && metricsList ? ( */}\r\n            <LeftMenu\r\n              updateMetricHeader={updateMetricHeader}\r\n              updateParentMetric={updateParentMetric}\r\n              favorite={favorite}\r\n              leftMenuMetrics={metricsList}\r\n              updateMetric={updateMetric}\r\n            />\r\n            {/* ) : (\r\n              <RctPageLoader />\r\n            )} */}\r\n          </Paper>\r\n        </div>\r\n        <div className='col-md-9 right-insight'>\r\n          <Box sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\r\n            <Paper>\r\n              <div className='graphcontentHead'>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"18px\",\r\n                    fontWeight: 500,\r\n                    textTransform: \"capitalize\",\r\n                  }}\r\n                >\r\n\r\n                  {metricHeader}\r\n                </span>\r\n                <Stack direction='row' spacing={1} sx={{ float: \"right\" }}>\r\n                  <IconButton\r\n                    color='primary'\r\n                    aria-label='screenshot'\r\n                    onClick={getImage}\r\n                  >\r\n                    <Tooltip title=\"Take screenshot\" placement=\"bottom\">\r\n                      <CameraAltOutlinedIcon color='disabled' />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                  <IconButton\r\n                    color='secondary'\r\n                    aria-label='download'\r\n                    onClick={getExcelDownload}\r\n                  >\r\n                    <Tooltip title=\"Download File\" placement=\"bottom\">\r\n                      <FileDownloadOutlinedIcon color='disabled' />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                  <IconButton aria-label='fullscreen' onClick={handle.enter}>\r\n                    <Tooltip title=\"Full Screen\" placement=\"bottom\">\r\n                      <FullscreenOutlinedIcon color='disabled' />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                  <Box className='dropdownCont'>\r\n                    <div className='interval-spase'>\r\n                      <FormControl fullWidth className='intervalSelect'>\r\n                        <InputLabel id='intervalSelect'>Interval</InputLabel>\r\n                        <Select\r\n                          labelId='intervalSelect'\r\n                          id='demo-simple-select'\r\n                          value={refresh}\r\n                          label='Interval'\r\n                          onChange={changeRefresh}\r\n                          className='interSelect'\r\n                        >\r\n                          <MenuItem value={10}>10s</MenuItem>\r\n                          <MenuItem value={20}>20s</MenuItem>\r\n                          <MenuItem value={30}>30s</MenuItem>\r\n                          <MenuItem value={40}>40s</MenuItem>\r\n                          <MenuItem value={50}>50s</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                      <FormControl fullWidth className='intervalSelect'>\r\n                        <InputLabel id='intervalSelect'>Interval</InputLabel>\r\n                        <Select\r\n                          labelId='intervalSelect'\r\n                          id='demo-simple-select'\r\n                          value={selectVal}\r\n                          label='Interval'\r\n                          onChange={setDataRange}\r\n                          className='interSelect'\r\n                        >\r\n                          <MenuItem value='5min'>5 Minute</MenuItem>\r\n                          <MenuItem value='1h'>1 Hour</MenuItem>\r\n                          <MenuItem value='1d'>Day</MenuItem>\r\n                          <MenuItem value='1w'>Week</MenuItem>\r\n                          <MenuItem value='1m'>Month</MenuItem>\r\n                          <MenuItem value='1y' disabled>Year</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                    <div className='dateCont'>\r\n                      <span>Custom Date</span>\r\n                      <TextField\r\n                        onClick={() => setModalOpen(true)}\r\n                        contentEditable={false}\r\n                        value={\r\n                          startDate\r\n                            ? moment(startDate).format(\"DD/MM/YYYY\")\r\n                            : \"\"\r\n                        }\r\n                        placeholder='dd-mm-yyyy'\r\n                      />\r\n                      <Box sx={{ mx: 2 }}> to </Box>\r\n                      <TextField\r\n                        onClick={() => setModalOpen(true)}\r\n                        contentEditable={false}\r\n                        value={\r\n                          endDate ? moment(endDate).format(\"DD/MM/YYYY\") : \"\"\r\n                        }\r\n                        placeholder='dd-mm-yyyy'\r\n                      />\r\n                    </div>\r\n                    <Modal\r\n                      isOpen={openModal}\r\n                      toggle={() => setModalOpen(false)}\r\n                      centered\r\n                    >\r\n                      <ModalHeader>\r\n                        <h3>Date Picker</h3>\r\n                      </ModalHeader>\r\n                      <ModalBody>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <DateRange\r\n                            onChange={(item) => setRange([item.selection])}\r\n                            ranges={range}\r\n                            editableDateInputs={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            maxDate={new Date()}\r\n                          />\r\n                        </div>\r\n                      </ModalBody>\r\n                      <ModalFooter>\r\n                        <div>\r\n                          <Button\r\n                            onClick={() => setModalOpen(false)}\r\n                            variant='contained'\r\n                            className='btn-danger text-white bg-danger'\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            onClick={submit}\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className='text-white bg-primary'\r\n                            style={{ marginLeft: 10 }}\r\n\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n\r\n                        </div>\r\n                      </ModalFooter>\r\n                    </Modal>\r\n                  </Box>\r\n                  <FilterLayout\r\n                    metric={metric}\r\n                    getCdn={getCdn}\r\n                    getContentPartner={getContentPartner}\r\n                    getContentType={getContentType}\r\n                    getLocation={getLocation}\r\n                    savePlatformData={savePlatformData}\r\n                    cdnVal={cdnVal}\r\n                    contentTypeVal={contentTypeVal}\r\n                    contentPartnetVal={contentPartnetVal}\r\n                    locationVal={locationVal}\r\n                    devicePlatform={devicePlatform}\r\n                    contentPartner={contentPartner}\r\n                    contentType={contentType}\r\n                    location={location}\r\n                    updatePlatformData={updatePlatformData}\r\n                  />\r\n                </Stack>\r\n              </div>\r\n              <div className='take-screenshot'>\r\n                <AppliedFilters\r\n                  attemptsData={attemptsData}\r\n                  videoStartFailuresData={videoStartFailuresData}\r\n                  exitBeforeVideoStartsData={exitBeforeVideoStartsData}\r\n                  succesfullPlaysData={succesfullPlaysData}\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                  metric={metric}\r\n                  removeDevicePlatform={removeDevicePlatform}\r\n                  removeContentPartner={removeContentPartner}\r\n                  removeContentType={removeContentType}\r\n                  removeLocation={removeLocation}\r\n                  devicePlatform={devicePlatform}\r\n                  updatePlatformData={updatePlatformData}\r\n                  handleReload={handleReload}\r\n                  contentPartner={contentPartner}\r\n                  contentType={contentType}\r\n                  location={location}\r\n                  selectVal={selectVal}\r\n                  androidDataPoints={\r\n                    devicePlatform?.includes(\"Android\")\r\n                      ? androidDataPoints\r\n                      : [0]\r\n                  }\r\n                  iosDataPoints={\r\n                    devicePlatform?.includes(\"iOS\") ? iosDataPoints : [0]\r\n                  }\r\n                  chromeDataPoints={\r\n                    devicePlatform?.includes(\"Web\") ? chromeDataPoints : [0]\r\n                  }\r\n                  tvDataPoints={\r\n                    devicePlatform?.includes(\"FireTV\") ? tvDataPoints : [0]\r\n                  }\r\n                  firestickDataPoints={\r\n                    devicePlatform?.includes(\"Firestick\")\r\n                      ? firestickDataPoints\r\n                      : [0]\r\n                  }\r\n\r\n                  androidDataReport={androidDataReport}\r\n                  iosDataReport={iosDataReport}\r\n                  firestickDataReport={firestickDataReport}\r\n                  webDataReport={webDataReport}\r\n                  totalDataReport={totalDataReport}\r\n                  androidSmartTvReport={AndroidSmartTvDataReport?AndroidSmartTvDataReport:0}\r\n                  androidSmartTvDataPoints={\r\n                    devicePlatform?.includes(\"AndroidSmartTv\") ? AndroidSmartTvDataPoints : [0]\r\n                  }\r\n                />\r\n                <FullScreen handle={handle}>\r\n                  <div className='chartCont'>\r\n                    {timeGraphDataPoints &&\r\n                      graphPointsUpdated &&\r\n                      !isLoadingData ? (\r\n                      <>\r\n                        {metric === \"video_plays_and_failures\" ? (\r\n                          <Line\r\n                            options={dataToShow.options}\r\n                            data={dataToShow}\r\n                          />\r\n                        ) : (\r\n                          <LineChartComponent\r\n                            selectVal={selectVal}\r\n                            timeGraphPoints={timeGraphDataPoints}\r\n                            metricGraphPoints={\r\n                              metricGraphPoints ? metricGraphPoints : []\r\n                            }\r\n                            androidDataPoints={androidDataPoints}\r\n                            iosDataPoints={iosDataPoints}\r\n                            chromeDataPoints={chromeDataPoints}\r\n                            tvDataPoints={tvDataPoints}\r\n                            firestickDataPoints={firestickDataPoints}\r\n                            graphPointsUpdated={graphPointsUpdated}\r\n                            isLoadingData={isLoadingData}\r\n                            settitle={settitle}\r\n                            unit={unit}\r\n                            devicePlatform={devicePlatform}\r\n                            androidSmartTvDataPoints={AndroidSmartTvDataPoints}\r\n\r\n                          />\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                      <RctPageLoader />\r\n                    )}\r\n                  </div>\r\n                </FullScreen>\r\n              </div>\r\n            </Paper>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RealTimeMetrics;\r\n","import React from 'react'\r\nimport RealTimeMetrics from 'Components/QualityExperience/RealTimeMetrics'\r\n\r\nexport default function CrmRealTime(props) {\r\n\treturn (\r\n\t\t<div className=\"ecom-dashboard-wrapper 44\">\r\n\t\t\t<RealTimeMetrics />\r\n\t\t</div>\r\n\t)\r\n}\r\n"],"sourceRoot":""}