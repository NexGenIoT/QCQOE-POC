{"version":3,"sources":["Components/MitigationSummaryDashboard/Histogram.js","Routes/qoe/error-screen/index.js"],"names":["Histogram","props","dataDisplay","labels","timeGraphDataPoints","datasets","obj","finalDatasetArray","devicePlatform","length","Array","isArray","metricGraphPoints","newObject","push","i","androidDataPoints","chromeDataPoints","iosDataPoints","AndroidSmartTvDataPoints","firestickDataPoints","Object","keys","dataSetsToDraw","container","specing","data","width","height","options","scales","x","ticks","autoSkip","ErrorScreen","dispatch","useDispatch","realdata","useSelector","state","qoeReducer","cdnVal","filters","cdn","contentTypeVal","content_type","contentPartnetVal","content_partner","locationVal","location","errorCodeVal","error_codes","errorRecordData","items","useState","isLoadingData","setisLoadingData","setCdn","contentType","setContentType","contentPartner","setContentPartner","setLocation","errorCode","setErrorCode","chartData","setChartData","aggregationInterval","setAggregationInterval","setDevicePlatform","Math","floor","Date","getTime","fromDate","setFromDate","toDate","setToDate","allGraphPoints","androidGraphPoints","iosGraphPoints","chromeGraphPoints","tvGraphPoints","firestickGraphPoints","tvDataPoints","selectVal","setSelectVal","selectValBelowGraph","setSelectValBelowGraph","setXAxis","tableData","setTableData","iOSErrorCount","setIOSErrorCount","androidErrorCount","setAndroidErrorCount","webErrorCount","setWebErrorCount","firestickCount","setFirestickErrorCount","startDate","endDate","key","range","setRange","openModal","setModalOpen","setStartDate","setEndDate","count","pagination","selectableRows","rowsPerPageOptions","filter","search","useEffect","device_platform","getLocationWithoutState","val","temparray","forEach","element","split","console","log","tableV","tempArr","chartArr","sort","a","b","dts_es","udid","ueid","ErrorName","ErrorCode","ErrorDetails","platform","provider","videoId","videoTitle","date","moment","unix","format","grouped","reduce","product","groups","map","objp","item","index","values","item2","index2","countedPlatforms","allPlatforms","platformName","currCount","iOS","Android","Web","Firestick","setTimeout","updatePlatformData","layout","itemsToRemove","dpl","j","splice","calculateDateRange","timestamp","sd","ts","endOf","_d","setErrorRecord","fromDateInfo","params","from_time","to_time","getErrorRecord","getUniqueFilters","handle","useFullScreenHandle","fullCombinationGraphPoints","lengths","indexOf","max","className","sx","bgcolor","style","fontSize","fontWeight","textTransform","direction","spacing","float","color","onClick","node","document","querySelector","domtoimage","toPng","quality","then","dataUrl","createElement","href","download","createFileName","click","catch","error","title","placement","fileName","exportType","exportFromJSON","types","csv","res","enter","fullWidth","id","labelId","value","label","onChange","e","target","contentEditable","placeholder","mx","isOpen","toggle","centered","display","flexDirection","justifyContent","selection","ranges","editableDateInputs","moveRangeOnFirstSelection","maxDate","variant","customeDate","marginLeft","getCdn","getContentPartner","getContentType","getLocation","getErrorCode","savePlatformData","attemptsData","videoStartFailuresData","exitBeforeVideoStartsData","succesfullPlaysData","removeDevicePlatform","localStorage","removeItem","final","d","removeContentPartner","type","removeContentType","removeLocation","removeErrorCode","handleReload","includes","androidDataReport","iosDataReport","firestickDataReport","webDataReport","totalDataReport","padding","backgroundColor","margin","left","bottom","top","strokeDasharray","dataKey","position","angle","zIndex","barArr","uniqueIds","stackId","barSize","fill","colorCodeWithPartner","renderBarChartEnum","columns","name","customBodyRender","row","overflow","Chaupal","Curiosity","DocuBay","EpicOn","ErosNow","Hoichoi","Hungama","NammaFlix","PlanetMarathi","ShemarooMe","VootKids","VootSelect","qoe","Manormamax","Tarangplus","Shortstv","Koode","Reelsdrama","Lionsgate"],"mappings":"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","file":"static/js/13.5e90ee2d.chunk.js","sourcesContent":["import { Grid } from '@mui/material';\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst Histogram = (props) => {\r\n    let datasetSampleObj = {};\r\n    const dataSetsToDraw = (obj) => {\r\n        let finalDatasetArray = [];\r\n        if (props.devicePlatform) {\r\n            if (props.devicePlatform.length === 0 && Array.isArray(props.metricGraphPoints)) {\r\n                const newObject = { ...obj };\r\n                newObject[\"barThickness\"] = 15;\r\n                newObject[\"label\"] = \"All\";\r\n                newObject[\"backgroundColor\"] = \"66f5ae\";\r\n                newObject[\"borderColor\"] = \"66f5ae\";\r\n                newObject[\"borderWidth\"] = 1;\r\n                newObject[\"stack\"] = 1;\r\n                newObject[\"hoverBackgroundColor\"] = \"66f5ae\";\r\n                newObject[\"hoverBorderColor\"] = \"66f5ae\";\r\n                newObject[\"data\"] = props.metricGraphPoints ? props.metricGraphPoints : []\r\n                finalDatasetArray.push(newObject);\r\n            }\r\n            else {\r\n                for (let i = 0; i < props.devicePlatform.length; i++) {\r\n                    const newObject = { ...obj };\r\n                    if (props.devicePlatform[i] === \"Android\") {\r\n                        newObject[\"barThickness\"] = 15;\r\n                        newObject[\"label\"] = \"Android\";\r\n                        newObject[\"backgroundColor\"] = \"#ed497b\";\r\n                        newObject[\"borderColor\"] = \"#ed497b\";\r\n                        newObject[\"borderWidth\"] = 1;\r\n                        newObject[\"stack\"] = 1;\r\n                        newObject[\"hoverBackgroundColor\"] = \"#ed497b\";\r\n                        newObject[\"hoverBorderColor\"] = \"#ed497b\";\r\n                        newObject[\"data\"] = props.androidDataPoints ? props.androidDataPoints : []\r\n                    }\r\n                    else if (props.devicePlatform[i] === \"Web\") {\r\n                        newObject[\"barThickness\"] = 15;\r\n                        newObject[\"label\"] = \"Web\";\r\n                        newObject[\"backgroundColor\"] = \"#56bcf8\";\r\n                        newObject[\"borderColor\"] = \"#56bcf8\";\r\n                        newObject[\"borderWidth\"] = 1;\r\n                        newObject[\"stack\"] = 1;\r\n                        newObject[\"hoverBackgroundColor\"] = \"#56bcf8\";\r\n                        newObject[\"hoverBorderColor\"] = \"#56bcf8\";\r\n                        newObject[\"data\"] = props.chromeDataPoints ? props.chromeDataPoints : []\r\n                    }\r\n                    else if (props.devicePlatform[i] === \"iOS\") {\r\n                        newObject[\"barThickness\"] = 15;\r\n                        newObject[\"label\"] = \"iOS\";\r\n                        newObject[\"backgroundColor\"] = \"#70f5ae\";\r\n                        newObject[\"borderColor\"] = \"#70f5ae\";\r\n                        newObject[\"borderWidth\"] = 1;\r\n                        newObject[\"stack\"] = 1;\r\n                        newObject[\"hoverBackgroundColor\"] = \"#70f5ae\";\r\n                        newObject[\"hoverBorderColor\"] = \"#70f5ae\";\r\n                        newObject[\"data\"] = props.iosDataPoints ? props.iosDataPoints : []\r\n                    }\r\n                    else if (props.devicePlatform[i] === \"AndroidSmartTv\") {\r\n                        newObject[\"barThickness\"] = 15;\r\n                        newObject[\"label\"] = \"AndroidSmartTv\";\r\n                        newObject[\"backgroundColor\"] = \"yellow\";\r\n                        newObject[\"borderColor\"] = \"yellow\";\r\n                        newObject[\"borderWidth\"] = 1;\r\n                        newObject[\"stack\"] = 1;\r\n                        newObject[\"hoverBackgroundColor\"] = \"yellow\";\r\n                        newObject[\"hoverBorderColor\"] = \"yellow\";\r\n                        newObject[\"data\"] = props.AndroidSmartTvDataPoints ? props.AndroidSmartTvDataPoints : []\r\n                    }\r\n                    else if (props.devicePlatform[i] === \"Firestick\") {\r\n                        newObject[\"barThickness\"] = 15;\r\n                        newObject[\"label\"] = \"Firestick\";\r\n                        newObject[\"backgroundColor\"] = \"purple\";\r\n                        newObject[\"borderColor\"] = \"purple\";\r\n                        newObject[\"borderWidth\"] = 1;\r\n                        newObject[\"stack\"] = 1;\r\n                        newObject[\"hoverBackgroundColor\"] = \"purple\";\r\n                        newObject[\"hoverBorderColor\"] = \"purple\";\r\n                        newObject[\"data\"] = props.firestickDataPoints ? props.firestickDataPoints : []\r\n                    }\r\n\r\n\r\n                    Object.keys(newObject).length > 0 && finalDatasetArray.push(newObject);\r\n                }\r\n            }\r\n        }\r\n        return finalDatasetArray;\r\n    }\r\n    // var dateIST =[]\r\n    // if(props.timeGraphDataPoints){\r\n    //     props.timeGraphDataPoints.forEach(element => {\r\n    //      dateIST.push(new Date(element).toLocaleString(\"en-IN\", {timeZone: 'Asia/Kolkata'}));\r\n    //     });\r\n    //     //date shifting for IST timezone (+5 hours and 30 minutes)\r\n    // }\r\n   \r\n    const dataDisplay = {\r\n        labels: props.timeGraphDataPoints ? props.timeGraphDataPoints : [],// dateIST ? dateIST : [],\r\n        datasets: dataSetsToDraw(datasetSampleObj)\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container specing={1} >\r\n                <Bar\r\n                    data={dataDisplay}\r\n                    width={300}\r\n                    height={120}\r\n                    options={{\r\n                        scales: {\r\n                            x: {\r\n                                ticks: {\r\n                                    autoSkip: true,\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                // options={{\r\n                //     legend: {\r\n                //         display: false\r\n                //     },\r\n                //     layout: {\r\n                //         padding: {\r\n                //             top: 25\r\n                //         }\r\n                //     },\r\n                //     scales: {\r\n                //         xAxes: [{\r\n                //             gridLines: {\r\n                //                 color: \"rgba(0, 0, 0, 0)\",\r\n                //                 drawBorder: false,\r\n                //                 display: true,\r\n                //             },\r\n                //             ticks: {\r\n                //                 display: true\r\n                //             },\r\n                //         }],\r\n                //         yAxes: [{\r\n                //             barPercentage: 0.2,\r\n                //             gridLines: {\r\n                //                 color: \"rgba(0, 0, 0, 0)\",\r\n                //                 drawBorder: false,\r\n                //                 paddingTop: '10px'\r\n                //             }\r\n                //         }]\r\n                //     }\r\n                // }}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\nexport default Histogram;","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport CameraAltOutlinedIcon from \"@mui/icons-material/CameraAltOutlined\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport {\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip as ToolTipChart,\r\n  Legend,\r\n  ComposedChart,\r\n  // BarChart,\r\n  Line,\r\n  Label,\r\n} from \"recharts\";\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\nimport { createFileName } from \"use-react-screenshot\";\r\nimport FileDownloadOutlinedIcon from \"@mui/icons-material/FileDownloadOutlined\";\r\nimport FullscreenOutlinedIcon from \"@mui/icons-material/FullscreenOutlined\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport moment from \"moment\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport AppliedFilters from \"Components/QualityExperience/AppliedFilters\";\r\nimport FilterLayout from \"Components/QualityExperience/FilterLayout\";\r\nimport Histogram from \"Components/MitigationSummaryDashboard/Histogram\";\r\nimport RctPageLoader from \"Components/RctPageLoader/RctPageLoader\";\r\nimport {\r\n  getFavoriteMetrics,\r\n  getMitigationAnalyticsPage,\r\n  getUniqueFilters,\r\n  setMetricType,\r\n  setMetricTypeFullName,\r\n  getErrorRecord,\r\n  setErrorRecord,\r\n} from \"Store/Actions\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as _ from \"lodash\";\r\nimport { fontSize } from \"@mui/system\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nfunction groupBy(objectArray, property) {\r\n  return objectArray.reduce((acc, obj) => {\r\n    const key = obj[property];\r\n    const curGroup = acc[key] || [];\r\n\r\n    return { ...acc, [key]: [...curGroup, obj] };\r\n  }, {});\r\n}\r\n\r\nexport default function ErrorScreen() {\r\n  const dispatch = useDispatch();\r\n  const realdata = useSelector((state) => state.qoeReducer);\r\n  const cdnVal = realdata?.filters?.cdn;\r\n  const contentTypeVal = realdata?.filters?.content_type;\r\n  const contentPartnetVal = realdata?.filters?.content_partner;\r\n  const locationVal = realdata?.filters?.location;\r\n  const errorCodeVal = realdata?.filters?.error_codes;\r\n  const errorRecordData = realdata?.errorRecordData?.items;\r\n  const [unit, setUnit] = useState(\"\");\r\n  const [isLoadingData, setisLoadingData] = useState(false);\r\n  const [cdn, setCdn] = useState([]);\r\n  const [contentType, setContentType] = useState([]);\r\n  const [contentPartner, setContentPartner] = useState([]);\r\n  const [location, setLocation] = useState([]);\r\n  const [errorCode, setErrorCode] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [aggregationInterval, setAggregationInterval] = useState(\"1h\");\r\n  const [devicePlatform, setDevicePlatform] = useState([\"Android\", \"iOS\"]);\r\n  const [fromDate, setFromDate] = useState(\r\n    Math.floor(new Date().getTime() / 1000.0) - 24 * 3600\r\n  );\r\n  const [toDate, setToDate] = useState(\r\n    Math.floor(new Date().getTime() / 1000.0)\r\n  );\r\n  const [updatedGraphData, setUpdatedGraphData] = useState();\r\n  const [allGraphPoints, setAllGraphPoints] = useState([]);\r\n  const [androidGraphPoints, setAndroidGraphPoints] = useState([]);\r\n  const [iosGraphPoints, setIosGraphPoints] = useState([]);\r\n  const [chromeGraphPoints, setChromeGraphPoints] = useState([]);\r\n  const [tvGraphPoints, setTvGraphPoints] = useState([]);\r\n  const [firestickGraphPoints, setFirestickGraphPoints] = useState([]);\r\n  const [metricGraphPoints, setMetricGraphPoints] = useState();\r\n  const [androidDataPoints, setAndroidDataPoints] = useState();\r\n  const [iosDataPoints, setIosDataPoints] = useState();\r\n  const [chromeDataPoints, setChromeDataPoints] = useState();\r\n  const [tvDataPoints, setTvDataPoints] = useState();\r\n  const [firestickDataPoints, setFirestickDataPoints] = useState();\r\n  const [selectVal, setSelectVal] = useState(\"1d\");\r\n  const [selectValBelowGraph, setSelectValBelowGraph] = useState(\r\n    \"DURATION ( In 1 Day)\"\r\n  );\r\n  const [xAxis, setXAxis] = useState(\"hour\");\r\n  const [tableData, setTableData] = useState([]);\r\n  const [iOSErrorCount, setIOSErrorCount] = useState(0);\r\n  const [androidErrorCount, setAndroidErrorCount] = useState(0);\r\n  const [webErrorCount, setWebErrorCount] = useState(0);\r\n  const [firestickCount, setFirestickErrorCount] = useState(0);\r\n\r\n  const [range, setRange] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  const [openModal, setModalOpen] = useState(false);\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [colOrder, setColOrder] = useState([0, 1, 2, 3, 4, 5, 6, 7]);\r\n\r\n  const options = {\r\n    count: errorRecordData?.length,\r\n    pagination: true,\r\n    selectableRows: false,\r\n    rowsPerPageOptions: [10, 50, 100],\r\n    filter: false,\r\n    search: false,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (realdata?.device_platform.length > 0) {\r\n      setDevicePlatform(realdata?.device_platform);\r\n    }\r\n  }, [realdata?.device_platform]);\r\n\r\n  const getCdn = (val) => {\r\n    setCdn(val);\r\n  };\r\n  const getContentType = (val) => {\r\n    setContentType(val);\r\n  };\r\n  const getContentPartner = (val) => {\r\n    setContentPartner(val);\r\n  };\r\n  const getLocation = (val) => {\r\n    setLocation(val);\r\n  };\r\n  const getErrorCode = (val) => {\r\n    setErrorCode(val);\r\n  };\r\n  const getLocationWithoutState = (val) => {\r\n    let temparray = [];\r\n    val.forEach((element) => {\r\n      temparray.push(element.split(\"(\")[0]);\r\n    });\r\n    return temparray;\r\n  };\r\n  const date = (val) => moment(val * 1000).format(\"DD MMM YYYY | hh:mm\"); //moment(data).format('DD MMM YYYY | hh:mm')\r\n\r\n  useEffect(() => {\r\n    console.log(\"first errorRecord\");\r\n    const tableV = [];\r\n    let tempArr = [];\r\n\r\n    let chartArr = [];\r\n\r\n    if (errorRecordData?.length > 0) {\r\n      setisLoadingData(false);\r\n      errorRecordData\r\n        ?.sort((a, b) => b.dts_es - a.dts_es)\r\n        ?.forEach((items) => {\r\n          // const {ErrorCode, ErrorDetails, ErrorName, location, dts_es, id, provider, platform, ueid} = items || {};\r\n          const {\r\n            udid,\r\n            ueid,\r\n            ErrorName,\r\n            ErrorCode,\r\n            ErrorDetails,\r\n            dts_es,\r\n            platform,\r\n            provider,\r\n            location,\r\n            videoId = \"\",\r\n            videoTitle = \"\",\r\n          } = items || {};\r\n\r\n          let obj = {\r\n            date: moment.unix(dts_es).format(\"DD-MM-YYYY\"), //dts_es,//\r\n            provider: provider,\r\n            errorCode: ErrorCode,\r\n            platform: platform,\r\n          };\r\n          tempArr.push(obj);\r\n          tableV.push([\r\n            udid,\r\n            ueid,\r\n            provider,\r\n            platform,\r\n            videoTitle,\r\n            videoId,\r\n            location,\r\n            date(dts_es),\r\n            ErrorName,\r\n            ErrorCode,\r\n            ErrorDetails,\r\n          ]);\r\n          // tableV.push([id, ueid, ErrorName, ErrorCode, ErrorDetails, date(dts_es), platform, provider, ErrorDetails, location]);\r\n          setTableData(tableV);\r\n        });\r\n\r\n      var grouped = tempArr.reduce(function (obj, product) {\r\n        obj[product.date] = obj[product.date] || [];\r\n\r\n        obj[product.date].push(product.provider);\r\n        obj[product.date].push(product.errorCode);\r\n\r\n        return obj;\r\n      }, {});\r\n\r\n      // console.log(\"final grouped--\",grouped);\r\n\r\n      var groups = Object.keys(grouped).map(function (key) {\r\n        return {\r\n          date: key,\r\n          provider: grouped[key].reduce(function (obj, product, key) {\r\n            obj[product] = obj[product] || [];\r\n            obj[product].push(product);\r\n            return obj;\r\n          }, {}),\r\n        };\r\n      });\r\n\r\n      // console.log(\"final groups--\",groups);\r\n\r\n      let objp = {};\r\n      groups.map((item, index) => {\r\n        Object.values(item.provider).map((item2, index2) => {\r\n          // console.log(\"chart-objp-final-\",item.provider ,\"--\",Object.values(item.provider));\r\n          objp[Object.keys(item.provider)[index2]] = Object.values(\r\n            item.provider\r\n          )[index2].length;\r\n        });\r\n        // if(Object.values(item.provider)){\r\n        // objp={}\r\n        // for (let i = 0; i < Object.values(item.provider).length; i++) {\r\n        //   objp[Object.keys(item.provider)[i]]  = Object.values(item.provider)[i].length\r\n        // }\r\n        let obj = {\r\n          date: item.date,\r\n          ...objp,\r\n        };\r\n        chartArr.push(obj);\r\n        setChartData(chartArr);\r\n        console.log(\"-chart-obj-\", { chartArr });\r\n\r\n        objp = {};\r\n        // }\r\n      });\r\n\r\n      const platformData = errorRecordData.map((item) => item.platform);\r\n      const countedPlatforms = platformData.reduce(\r\n        (allPlatforms, platformName) => {\r\n          const currCount = allPlatforms[platformName] || 0;\r\n          return {\r\n            ...allPlatforms,\r\n            [platformName]: currCount + 1,\r\n          };\r\n        },\r\n        {}\r\n      );\r\n      console.log(\r\n        { tempArr: tempArr, chartArr, countedPlatforms },\r\n        \"final pppp\"\r\n      );\r\n\r\n      const {\r\n        iOS = 0,\r\n        Android = 0,\r\n        Web = 0,\r\n        Firestick = 0,\r\n      } = countedPlatforms || {};\r\n\r\n      setIOSErrorCount(iOS);\r\n      setAndroidErrorCount(Android);\r\n      setWebErrorCount(Web);\r\n      setFirestickErrorCount(Firestick);\r\n    } else {\r\n      setChartData([]);\r\n      setTableData([]);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setisLoadingData(false);\r\n    }, 20000);\r\n  }, [realdata?.errorRecordData]);\r\n\r\n  const updatePlatformData = (layout, itemsToRemove) => {\r\n    let dpl = devicePlatform;\r\n\r\n    if (layout === \"AppliedFilters\") {\r\n      // remove the elemets you got\r\n      for (var j = 0; j < itemsToRemove.length; j++) {\r\n        for (var i = 0; i < dpl.length; i++) {\r\n          if (dpl[i] === itemsToRemove[j]) {\r\n            dpl.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n      setDevicePlatform(dpl);\r\n    } else if (layout === \"FilterLayout\") {\r\n      // add the element you get\r\n    }\r\n  };\r\n\r\n  const savePlatformData = (val) => {\r\n    setDevicePlatform(val);\r\n  };\r\n\r\n  const removeContentPartner = (type) => {\r\n    const data = contentPartner;\r\n    const final = data.filter((d) => d !== type);\r\n    setContentPartner(final);\r\n  };\r\n\r\n  const removeContentType = (type) => {\r\n    const dataType = contentType;\r\n    const final = dataType.filter((d) => d !== type);\r\n    setContentType(final);\r\n  };\r\n\r\n  const removeLocation = (type) => {\r\n    if (Array.isArray(type)) {\r\n      setLocation([]);\r\n    } else {\r\n      const dataType = location;\r\n      const final = dataType.filter((d) => d !== type);\r\n      setLocation(final);\r\n    }\r\n  };\r\n\r\n  const removeErrorCode = (type) => {\r\n    const data = errorCode;\r\n    const final = data.filter((d) => d !== type);\r\n    setErrorCode(final);\r\n  };\r\n\r\n  const removeDevicePlatform = (platform) => {\r\n    if (Array.isArray(platform)) {\r\n      setDevicePlatform([]);\r\n      setContentPartner([]);\r\n      setContentType([]);\r\n      localStorage.removeItem(\"contentPartner\");\r\n    } else {\r\n      const dpa = devicePlatform;\r\n      const final = dpa.filter((d) => d !== platform);\r\n      setDevicePlatform(final);\r\n    }\r\n  };\r\n\r\n  const setDataRange = (e) => {\r\n    setStartDate();\r\n    setEndDate();\r\n    setRange([\r\n      {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: \"selection\",\r\n      },\r\n    ]);\r\n    setSelectVal(e.target.value);\r\n    let aggrInterval = \"\";\r\n    switch (e.target.value) {\r\n      case \"1min\": {\r\n        aggrInterval = \"10s\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"sec\");\r\n        calculateDateRange(\"1min\");\r\n        setSelectValBelowGraph(`DURATION ( In 1 Min)`);\r\n\r\n        return;\r\n      }\r\n      case \"5min\": {\r\n        aggrInterval = \"10s\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"sec\");\r\n        calculateDateRange(\"5min\");\r\n        setSelectValBelowGraph(`DURATION ( In 5 Min)`);\r\n\r\n        return;\r\n      }\r\n      case \"1h\": {\r\n        aggrInterval = \"1m\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"hour\");\r\n        calculateDateRange(\"1h\");\r\n        setSelectValBelowGraph(`DURATION ( In 1 Hour)`);\r\n\r\n        return;\r\n      }\r\n      case \"1d\": {\r\n        aggrInterval = \"1h\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"hour\");\r\n        calculateDateRange(\"1d\");\r\n        setSelectValBelowGraph(`DURATION ( In 1 Day)`);\r\n\r\n        return;\r\n      }\r\n      case \"1w\": {\r\n        aggrInterval = \"1d\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"date\");\r\n        calculateDateRange(\"1w\");\r\n        setSelectValBelowGraph(`DURATION ( In 1 Week)`);\r\n\r\n        return;\r\n      }\r\n      case \"1m\": {\r\n        aggrInterval = \"2d\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"date\");\r\n        calculateDateRange(\"1m\");\r\n        setSelectValBelowGraph(`DURATION ( In 1 Month)`);\r\n\r\n        return;\r\n      }\r\n      case \"1y\": {\r\n        aggrInterval = \"30d\";\r\n        setAggregationInterval(aggrInterval);\r\n        setXAxis(\"date\");\r\n        calculateDateRange(\"1y\");\r\n        setSelectValBelowGraph(`DURATION ( In 1 Year)`);\r\n\r\n        return;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const calculateDateRange = (timestamp) => {\r\n    let sd = new Date(); //current system date\r\n    let toDate = Math.floor(sd.getTime() / 1000.0);\r\n    setToDate(toDate);\r\n    // let ts = Math.floor(new Date().getTime() / 1000);\r\n    let ts = Math.floor(moment().endOf(\"date\")._d.getTime() / 1000.0);\r\n    let fromDateRange;\r\n\r\n    switch (timestamp) {\r\n      case \"1min\": {\r\n        fromDateRange = ts - 60;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"5min\": {\r\n        fromDateRange = ts - 300;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1h\": {\r\n        fromDateRange = ts - 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1d\": {\r\n        fromDateRange = ts - 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1w\": {\r\n        fromDateRange = ts - 7 * 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1m\": {\r\n        fromDateRange = ts - 30 * 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      case \"1y\": {\r\n        fromDateRange = ts - 12 * 30 * 24 * 3600;\r\n        setFromDate(fromDateRange);\r\n        return;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  // \tdispatch(getErrorRecord(dispatch, {}));\r\n  // }, [])\r\n\r\n  const handleReload = () => {\r\n    setChartData([]);\r\n    let ts = Math.floor(new Date().getTime() / 1000);\r\n    let fromDateInfo;\r\n    switch (selectVal) {\r\n      case \"1min\": {\r\n        fromDateInfo = ts - 60;\r\n        break;\r\n      }\r\n      case \"5min\": {\r\n        fromDateInfo = ts - 300;\r\n        break;\r\n      }\r\n      case \"1h\": {\r\n        fromDateInfo = ts - 3600;\r\n        break;\r\n      }\r\n      case \"1d\": {\r\n        fromDateInfo = ts - 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1w\": {\r\n        fromDateInfo = ts - 7 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1m\": {\r\n        fromDateInfo = ts - 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1y\": {\r\n        fromDateInfo = ts - 12 * 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    const params = {\r\n      provider: contentPartner,\r\n      platform: devicePlatform,\r\n      ErrorCode: errorCode,\r\n      location: getLocationWithoutState(location),\r\n      from_time: fromDateInfo, //1668685068,\r\n      to_time: toDate, //1669033317,\r\n    };\r\n    dispatch(getErrorRecord(dispatch, params));\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log('first params');\r\n  //   const params = {\r\n  //     provider: contentPartner,\r\n  //     platform: devicePlatform,\r\n  //     ErrorCode: errorCode,\r\n  //     location: getLocationWithoutState(location),\r\n  //     from_time: fromDate, //1668685068,\r\n  //     to_time: toDate, //1669033317,\r\n  //   };\r\n\r\n  //   dispatch(getErrorRecord(dispatch, params));\r\n\r\n  // }, [\r\n  //   contentPartner,\r\n  //   contentType,\r\n  //   errorCode,\r\n  //   location,\r\n  //   fromDate,\r\n  //   toDate,\r\n  //   devicePlatform,\r\n  //   selectVal,\r\n  // ])\r\n\r\n  // useEffect(()=>{\r\n\r\n  //    setInterval(() => {\r\n  //     if(window.location.href.includes(\"error-screen\")){\r\n  //       let ts = Math.floor(new Date().getTime() / 1000);\r\n  //       let fromDateInfo;\r\n  //       switch (selectVal) {\r\n  //         // case \"1min\": {\r\n  //         //   fromDateInfo = ts - 60;\r\n  //         //   break;\r\n  //         // }\r\n  //         case \"5min\": {\r\n  //           fromDateInfo = ts - 300;\r\n  //           break;\r\n  //         }\r\n  //         case \"1h\": {\r\n  //           fromDateInfo = ts - 3600;\r\n  //           break;\r\n  //         }\r\n  //         case \"1d\": {\r\n  //           fromDateInfo = ts - 24 * 3600;\r\n  //           break;\r\n  //         }\r\n  //         case \"1w\": {\r\n  //           fromDateInfo = ts - 7 * 24 * 3600;\r\n  //           break;\r\n  //         }\r\n  //         case \"1m\": {\r\n  //           fromDateInfo = ts - 30 * 24 * 3600;\r\n  //           break;\r\n  //         }\r\n  //         case \"1y\": {\r\n  //           fromDateInfo = ts - 12 * 30 * 24 * 3600;\r\n  //           break;\r\n  //         }\r\n  //         default:\r\n  //           fromDateInfo = fromDate//Math.floor(new Date().getTime() / 1000)\r\n  //           break;\r\n  //       }\r\n  //       const params = {\r\n  //         provider: contentPartner,\r\n  //         platform: devicePlatform,\r\n  //         ErrorCode: errorCode,\r\n  //         location: getLocationWithoutState(location),\r\n  //         from_time: fromDateInfo, //1668685068,\r\n  //         to_time: toDate, //1669033317,\r\n  //       };\r\n  //       dispatch(getErrorRecord(dispatch, params));\r\n  //     }\r\n\r\n  //    }, 60000);\r\n  // },[])\r\n\r\n  useEffect(() => {\r\n    setChartData([]);\r\n    setTableData([]);\r\n    dispatch(setErrorRecord([]));\r\n    setisLoadingData(true);\r\n    console.log(\"first aggregationInterval\");\r\n    let ts = Math.floor(new Date().getTime() / 1000);\r\n    let fromDateInfo;\r\n    switch (selectVal) {\r\n      // case \"1min\": {\r\n      //   fromDateInfo = ts - 60;\r\n      //   break;\r\n      // }\r\n      case \"5min\": {\r\n        fromDateInfo = ts - 300;\r\n        break;\r\n      }\r\n      case \"1h\": {\r\n        fromDateInfo = ts - 3600;\r\n        break;\r\n      }\r\n      case \"1d\": {\r\n        fromDateInfo = ts - 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1w\": {\r\n        fromDateInfo = ts - 7 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1m\": {\r\n        fromDateInfo = ts - 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      case \"1y\": {\r\n        fromDateInfo = ts - 12 * 30 * 24 * 3600;\r\n        break;\r\n      }\r\n      default:\r\n        fromDateInfo = fromDate; //Math.floor(new Date().getTime() / 1000)\r\n        break;\r\n    }\r\n    const params = {\r\n      provider: contentPartner,\r\n      platform: devicePlatform,\r\n      ErrorCode: errorCode,\r\n      location: getLocationWithoutState(location),\r\n      from_time: fromDateInfo, //1668685068,\r\n      to_time: toDate, //1669033317,\r\n    };\r\n    dispatch(getErrorRecord(dispatch, params));\r\n  }, [\r\n    aggregationInterval,\r\n\r\n    contentPartner,\r\n    contentType,\r\n    errorCode,\r\n    location,\r\n    fromDate,\r\n    toDate,\r\n    devicePlatform,\r\n    selectVal,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const isEmpty = Object.keys(realdata?.filters).length === 0;\r\n    if (isEmpty) {\r\n      dispatch(getUniqueFilters(dispatch));\r\n    }\r\n  }, [dispatch, realdata?.filters]);\r\n\r\n  const getImage = () => {\r\n    var node = document.querySelector(\".take-screenshot\");\r\n    var options = {\r\n      quality: 1,\r\n      bgcolor: \"#ffffff\",\r\n    };\r\n    domtoimage\r\n      .toPng(node, options)\r\n      .then(function (dataUrl) {\r\n        const a = document.createElement(\"a\");\r\n        a.href = dataUrl;\r\n        a.download = createFileName(\r\n          \"png\",\r\n          `by-content-partner-${moment().format(\"DD/MM/YYYY\")}`\r\n        );\r\n        a.click();\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong!\", error);\r\n      });\r\n  };\r\n\r\n  const handle = useFullScreenHandle();\r\n\r\n  let timeGraphDataPoints;\r\n  let fullCombinationGraphPoints = [];\r\n  fullCombinationGraphPoints.push(\r\n    androidGraphPoints,\r\n    iosGraphPoints,\r\n    chromeGraphPoints,\r\n    tvGraphPoints,\r\n    firestickGraphPoints,\r\n    allGraphPoints\r\n  );\r\n  const lengths = fullCombinationGraphPoints.map((a) => a.length);\r\n  const index = lengths.indexOf(Math.max(...lengths));\r\n  timeGraphDataPoints = fullCombinationGraphPoints[index];\r\n\r\n  const submit = () => {\r\n    // let diff = ((range[0].endDate - range[0].startDate)/ (1000 * 60 * 60 * 24)+1)% 365\r\n    // if (diff > 31) {\r\n    // \tNotificationManager.error(\"To-Date and From-Date Should be of 31 days of Gap\", \"\", 2000)\r\n    // \treturn;\r\n    // }\r\n    setSelectVal(\"\");\r\n    setXAxis(\"date\");\r\n    setStartDate(range[0].startDate);\r\n    setEndDate(range[0].endDate);\r\n    setModalOpen(false);\r\n    let customeDate = `${moment(range[0].startDate).format(\r\n      \"DD/MM/YYYY\"\r\n    )}-${moment(range[0].endDate).format(\"DD/MM/YYYY\")}`;\r\n    setSelectValBelowGraph(`DURATION (${customeDate})`);\r\n    setToDate(\r\n      Math.floor(moment(range[0].endDate).endOf(\"date\")._d.getTime() / 1000.0)\r\n    );\r\n    setAggregationInterval(\"1d\");\r\n    setFromDate(Math.floor(range[0].startDate.getTime() / 1000.0));\r\n  };\r\n\r\n  const getExcelDownload = () => {\r\n    const data = [];\r\n    const fileName = createFileName(\r\n      \"csv\",\r\n      `error-insight-${moment().format(\"DD/MM/YYYY\")}`\r\n    );\r\n    const exportType = exportFromJSON.types.csv;\r\n    if (errorRecordData.length > 0) {\r\n      errorRecordData.map((res) => {\r\n        return (res.dts_es = moment(res.dts_es * 1000).format(\"DD/MM/YYYY\")); //convert date in epoc to DD/MM/YYYY formate\r\n      });\r\n    }\r\n    exportFromJSON({ data: errorRecordData, fileName, exportType });\r\n  };\r\n\r\n  const renderChart = () => {\r\n    const barArr = [];\r\n    const lineArr = [];\r\n    if (chartData.length > 0) {\r\n      const keysArr = chartData?.map((item) => {\r\n        const { date, ...val } = item;\r\n        return val;\r\n      });\r\n      const keys = keysArr?.reduce(function (result, current) {\r\n        return Object.assign(result, current);\r\n      }, {});\r\n      console.log({\r\n        keysArrChck: Array.isArray(keysArr),\r\n        keysArr,\r\n        keyData: keys,\r\n      });\r\n      if (keysArr.length > 0) {\r\n        keysArr.forEach((item) => console.log({ keysItem: item }));\r\n      }\r\n      Object.keys(keys)?.map((item, index) => {\r\n        console.log({ itemBar: item }, \"dddddddd\");\r\n        // if (item.match(/^\\d/)) {\r\n        //   barArr.push(\r\n        //     <Line\r\n\r\n        //       dataKey={item} fill={colors[index]} type=\"monotone\"\r\n        //     />\r\n        //   );\r\n        // }\r\n        // else {\r\n\r\n        // }\r\n        if (\r\n          item != \"undefined\" &&\r\n          !item.match(/^\\d/) &&\r\n          !typeof item !== \"number\" &&\r\n          item !== \"\" &&\r\n          item\r\n        ) {\r\n          barArr.push(\r\n            <Bar\r\n              dataKey={item}\r\n              stackId=\"a\"\r\n              barSize={40}\r\n              key={item + index}\r\n              fill={colorCodeWithPartner[item]}\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n    console.log({ barArr, chartData }, \"ddd\");\r\n    return barArr;\r\n  };\r\n\r\n  const renderBarChartEnum = () => {\r\n    const barArr = [];\r\n    const uniqueIds = [];\r\n    if (tableData.length > 0) {\r\n      const unique = tableData.filter((element) => {\r\n        const isDuplicate = uniqueIds.includes(element[2]);\r\n\r\n        if (!isDuplicate) {\r\n          uniqueIds.push(element[2]);\r\n\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      });\r\n      unique.forEach((element) => {\r\n        barArr.push(\r\n          <Bar\r\n            dataKey={element[2]}\r\n            stackId=\"a\"\r\n            barSize={40}\r\n            //key={element + index}\r\n            fill={colorCodeWithPartner[element[2]]}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return barArr;\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md right-insight\">\r\n          <Box sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\r\n            <Paper>\r\n              <div className=\"graphcontentHead\">\r\n                <span\r\n                  style={{\r\n                    fontSize: \"18px\",\r\n                    fontWeight: 500,\r\n                    textTransform: \"capitalize\",\r\n                  }}\r\n                >\r\n                  {\"SSO & PLAYBACK ERRORS\"}\r\n                </span>\r\n                <Stack direction=\"row\" spacing={1} sx={{ float: \"right\" }}>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"screenshot\"\r\n                    onClick={getImage}\r\n                  >\r\n                    <Tooltip title=\"Take screenshot\" placement=\"bottom\">\r\n                      <CameraAltOutlinedIcon color=\"disabled\" />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"download\"\r\n                    onClick={getExcelDownload}\r\n                  >\r\n                    <Tooltip title=\"Download File\" placement=\"bottom\">\r\n                      <FileDownloadOutlinedIcon color=\"disabled\" />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                  <IconButton aria-label=\"fullscreen\" onClick={handle.enter}>\r\n                    <Tooltip title=\"Full Screen\" placement=\"bottom\">\r\n                      <FullscreenOutlinedIcon color=\"disabled\" />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                  <Box className=\"dropdownCont\">\r\n                    <div className=\"interval-spase\">\r\n                      <FormControl fullWidth className=\"intervalSelect\">\r\n                        <InputLabel id=\"intervalSelect\">Interval</InputLabel>\r\n                        <Select\r\n                          labelId=\"intervalSelect\"\r\n                          id=\"demo-simple-select\"\r\n                          value={selectVal}\r\n                          label=\"Interval\"\r\n                          onChange={setDataRange}\r\n                          className=\"interSelect\"\r\n                        >\r\n                          <MenuItem value=\"5min\">5 Minute</MenuItem>\r\n                          <MenuItem value=\"1h\">1 Hour</MenuItem>\r\n                          <MenuItem value=\"1d\">Day</MenuItem>\r\n                          <MenuItem value=\"1w\">Week</MenuItem>\r\n                          <MenuItem value=\"1m\">Month</MenuItem>\r\n                          <MenuItem value=\"1y\">Year</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                    <div className=\"dateCont\">\r\n                      <span>Custom Date</span>\r\n                      <TextField\r\n                        onClick={() => setModalOpen(true)}\r\n                        contentEditable={false}\r\n                        value={\r\n                          startDate\r\n                            ? moment(startDate).format(\"DD/MM/YYYY\")\r\n                            : \"\"\r\n                        }\r\n                        placeholder=\"dd-mm-yyyy\"\r\n                      />\r\n                      <Box style={{ \"margin-bottom\": \"0px\" }} sx={{ mx: 2 }}>\r\n                        {\" \"}\r\n                        to{\" \"}\r\n                      </Box>\r\n                      <TextField\r\n                        onClick={() => setModalOpen(true)}\r\n                        contentEditable={false}\r\n                        value={\r\n                          endDate ? moment(endDate).format(\"DD/MM/YYYY\") : \"\"\r\n                        }\r\n                        placeholder=\"dd-mm-yyyy\"\r\n                      />\r\n                    </div>\r\n                    <Modal\r\n                      isOpen={openModal}\r\n                      toggle={() => setModalOpen(false)}\r\n                      centered\r\n                    >\r\n                      <ModalHeader>\r\n                        <h3>Date Picker</h3>\r\n                      </ModalHeader>\r\n                      <ModalBody>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <DateRange\r\n                            onChange={(item) => setRange([item.selection])}\r\n                            ranges={range}\r\n                            editableDateInputs={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            maxDate={new Date()}\r\n                          />\r\n                        </div>\r\n                      </ModalBody>\r\n                      <ModalFooter>\r\n                        <div>\r\n                          <Button\r\n                            onClick={() => setModalOpen(false)}\r\n                            variant=\"contained\"\r\n                            className=\"btn-danger text-white bg-danger\"\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            onClick={submit}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\"text-white bg-primary\"\r\n                            style={{ marginLeft: 10 }}\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </div>\r\n                      </ModalFooter>\r\n                    </Modal>\r\n                  </Box>\r\n                  <FilterLayout\r\n                    getCdn={getCdn}\r\n                    getContentPartner={getContentPartner}\r\n                    getContentType={getContentType}\r\n                    getLocation={getLocation}\r\n                    getErrorCode={getErrorCode}\r\n                    savePlatformData={savePlatformData}\r\n                    cdnVal={cdnVal}\r\n                    contentTypeVal={contentTypeVal}\r\n                    contentPartnetVal={contentPartnetVal}\r\n                    locationVal={locationVal}\r\n                    errorCodeVal={errorCodeVal}\r\n                    devicePlatform={devicePlatform}\r\n                    contentPartner={contentPartner}\r\n                    contentType={contentType}\r\n                    location={location}\r\n                    errorCode={errorCode}\r\n                    iOSErrorCount={iOSErrorCount}\r\n                    androidErrorCount={androidErrorCount}\r\n                    webErrorCount={webErrorCount}\r\n                    firestickCount={firestickCount}\r\n                    updatePlatformData={updatePlatformData}\r\n                  />\r\n                </Stack>\r\n              </div>\r\n              <div className=\"take-screenshot\">\r\n                <AppliedFilters\r\n                  attemptsData={[]}\r\n                  videoStartFailuresData={[]}\r\n                  exitBeforeVideoStartsData={[]}\r\n                  succesfullPlaysData={[]}\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                  removeDevicePlatform={removeDevicePlatform}\r\n                  removeContentPartner={removeContentPartner}\r\n                  removeContentType={removeContentType}\r\n                  removeLocation={removeLocation}\r\n                  removeErrorCode={removeErrorCode}\r\n                  devicePlatform={devicePlatform}\r\n                  updatePlatformData={updatePlatformData}\r\n                  handleReload={handleReload}\r\n                  contentPartner={contentPartner}\r\n                  contentType={contentType}\r\n                  location={location}\r\n                  errorCode={errorCode}\r\n                  selectVal={selectVal}\r\n                  androidDataPoints={\r\n                    devicePlatform?.includes(\"Android\")\r\n                      ? androidDataPoints\r\n                      : [0]\r\n                  }\r\n                  iosDataPoints={\r\n                    devicePlatform?.includes(\"iOS\") ? iosDataPoints : [0]\r\n                  }\r\n                  chromeDataPoints={\r\n                    devicePlatform?.includes(\"Web\") ? chromeDataPoints : [0]\r\n                  }\r\n                  tvDataPoints={\r\n                    devicePlatform?.includes(\"FireTV\") ? tvDataPoints : [0]\r\n                  }\r\n                  firestickDataPoints={\r\n                    devicePlatform?.includes(\"Firestick\")\r\n                      ? firestickDataPoints\r\n                      : [0]\r\n                  }\r\n                  androidDataReport={androidErrorCount}\r\n                  iosDataReport={iOSErrorCount}\r\n                  firestickDataReport={firestickCount}\r\n                  webDataReport={webErrorCount}\r\n                  totalDataReport={\r\n                    errorRecordData ? errorRecordData?.length : 0\r\n                  }\r\n\r\n                  // iOSErrorCount={iOSErrorCount}\r\n                  // androidErrorCount={androidErrorCount}\r\n                  // webErrorCount={webErrorCount}\r\n                  // firestickCount={firestickCount}\r\n                  // totalErrorCount={errorRecordData?.length}\r\n                />\r\n                <FullScreen handle={handle}>\r\n                  <div\r\n                    style={{\r\n                      padding: \"10px\",\r\n                      backgroundColor: \"white\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    {isLoadingData && <RctPageLoader />}\r\n                    <ResponsiveContainer width={\"100%\"} height={300}>\r\n                      <BarChart\r\n                        data={chartData}\r\n                        margin={{ left: 30, bottom: 20, top: 20 }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"2 2\" />\r\n                        <XAxis dataKey=\"date\">\r\n                          <Label\r\n                            value={selectValBelowGraph}\r\n                            position=\"bottom\"\r\n                            fontSize=\"12\"\r\n                            padding={{ top: 20, bottom: 20 }}\r\n                          />\r\n                        </XAxis>\r\n                        <YAxis\r\n                          label={{\r\n                            value: \"ERROR COUNT\",\r\n                            angle: -90,\r\n                            position: \"left\",\r\n                            fontSize: 12,\r\n                          }}\r\n                        />\r\n                        <ToolTipChart style={{ zIndex: \"1000 !important\" }} />\r\n                        <Legend />\r\n                        <>{renderBarChartEnum()}</>\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                </FullScreen>\r\n              </div>\r\n            </Paper>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n\r\n      <MUIDataTable\r\n        title={`Total Errors ${tableData?.length ?? 0}`}\r\n        columns={columns}\r\n        data={tableData}\r\n        options={options}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    label: \"UDID\",\r\n    name: \"udid\",\r\n    options: {\r\n      sort: true,\r\n      display: \"none\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Hashed-RMN\", //\"UEID\",chnages as per feedback\r\n    name: \"ueid\",\r\n    options: {\r\n      sort: true,\r\n      display: \"none\",\r\n    },\r\n  },\r\n\r\n  {\r\n    label: \"PROVIDER\",\r\n    name: \"provider\",\r\n    options: {\r\n      customBodyRender: (data, row) => {\r\n        return <p>{data ? data : \"NA\"}</p>;\r\n      },\r\n    },\r\n  },\r\n  {\r\n    label: \"PLATFORM\",\r\n    name: \"platform\",\r\n    options: {\r\n      customBodyRender: (data, row) => {\r\n        return <p>{data ? data : \"NA\"}</p>;\r\n      },\r\n    },\r\n  },\r\n  {\r\n    label: \"VIDEO TITLE\",\r\n    name: \"videoTitle\",\r\n    options: {\r\n      customBodyRender: (data, row) => {\r\n        return <p>{data ? data : \"NA\"}</p>;\r\n      },\r\n    },\r\n  },\r\n  {\r\n    label: \"VIDEO ID\",\r\n    name: \"videoId\",\r\n    options: {\r\n      customBodyRender: (data, row) => {\r\n        return <p>{data ? data : \"NA\"}</p>;\r\n      },\r\n    },\r\n  },\r\n  {\r\n    label: \"LOCATION\",\r\n    name: \"location\",\r\n    options: {\r\n      customBodyRender: (data, row) => {\r\n        return <p>{data ? data : \"NA\"}</p>;\r\n      },\r\n    },\r\n  },\r\n  {\r\n    label: \"DATE/TIME\",\r\n    name: \"dts_es\",\r\n    options: {\r\n      customBodyRender: (data, row) => {\r\n        return <p>{data ? data : \"NA\"}</p>;\r\n      },\r\n    },\r\n  },\r\n  {\r\n    label: \"ERROR NAME\",\r\n    name: \"ErrorName\",\r\n    options: {\r\n      customBodyRender: (data, row) => {\r\n        return (\r\n          <p\r\n            style={{\r\n              width: \"150px\",\r\n              \"white-space\": \"nowrap\",\r\n              overflow: \"hidden\",\r\n              \"text-overflow\": \"ellipsis\",\r\n            }}\r\n          >\r\n            {data}\r\n          </p>\r\n        );\r\n      },\r\n      // display: colOrder.indexOf(0) >= 0 ? true : false,\r\n      sort: true,\r\n    },\r\n  },\r\n  {\r\n    label: \"ERROR CODE\",\r\n    name: \"ErrorCode\",\r\n    options: {\r\n      // display: colOrder.indexOf(0) >= 0 ? true : false,\r\n      sort: true,\r\n    },\r\n  },\r\n  {\r\n    label: \"ERROR DETAILS\",\r\n    name: \"ErrorDetails\",\r\n    options: {\r\n      // display: colOrder.indexOf(0) >= 0 ? true : false,\r\n      sort: true,\r\n    },\r\n  },\r\n];\r\n\r\nconst chartData = [\r\n  {\r\n    name: \"06-12-22\",\r\n    ErosNow: 4000,\r\n    Hoichoi: 2400,\r\n    EpicOn: 2400,\r\n  },\r\n  {\r\n    name: \"07-12-22\",\r\n    ErosNow: 3000,\r\n    Hotstar: 1398,\r\n    Voot: 2210,\r\n  },\r\n];\r\n\r\n// const contentParnter = ['Chaupal', 'DocuBay', 'EpicOn', 'ErosNow', 'PlanetMarathi', 'ShemarooMe', 'Hoichoi', 'Tatalay', 'Voot', 'VootSelect'];\r\n\r\nvar myArray = [\r\n  { provider: \"EpicOn\", date: \"01-12-2022\" },\r\n\r\n  { provider: \"ErosNow\", date: \"01-12-2022\" },\r\n\r\n  { provider: \"ErosNow\", date: \"01-12-2022\" },\r\n\r\n  { provider: \"EpicOn\", date: \"02-12-2022\" },\r\n\r\n  { provider: \"ErosNow\", date: \"02-12-2022\" },\r\n\r\n  { provider: \"EpicOn\", date: \"02-12-2022\" },\r\n];\r\n\r\nconst colors = [\r\n  \"#82ca9d\",\r\n  \"#8884d8\",\r\n  \"#66f5ae\",\r\n  \"#ff4d7d\",\r\n  \"purple\",\r\n  \"#ffd700\",\r\n  \"#165806\",\r\n  \"#abc8c2\",\r\n  \"#bf5700\",\r\n  \"#c12400\",\r\n  \"#75B69B\",\r\n  \"#caf1de\",\r\n  \"#FFE7C7\",\r\n  \"#F35F96\",\r\n  \"#84BA1D\",\r\n  \"#A92B30\",\r\n  \"#D3A9B4\",\r\n  \"#FFA200\",\r\n  \"#FFFF00\",\r\n  \"#FABC96\",\r\n  \"#FAEFBE\",\r\n  \"#EFA492\",\r\n  \"#D998A3\",\r\n  \"#EBBEC4\",\r\n  \"#D8A2A9\",\r\n  \"#445152\",\r\n  \"#006B3E\",\r\n  \"#FFA3A3\",\r\n  \"#F8B3CB\",\r\n  \"#674928\",\r\n];\r\n\r\nconst colorCodeWithPartner = {\r\n  Chaupal: \"#CD5C5C\",\r\n  Curiosity: \"#ff4d4d\",\r\n  DocuBay: \"#c56cf0\",\r\n  EpicOn: \"#3ae374\",\r\n  ErosNow: \"#67e6dc\",\r\n  Hoichoi: \"#ef5777\",\r\n  Hungama: \"#ff9f1a\",\r\n  NammaFlix: \"#243763\",\r\n  PlanetMarathi: \"#F56EB3\",\r\n  ShemarooMe: \"#FB2576\",\r\n  VootKids: \"#285430\",\r\n  VootSelect: \"#E14D2A\",\r\n  qoe: \"#82CD47\",\r\n  Manormamax: \"#e28743\",\r\n  Tarangplus: \"#BF360C\",\r\n  Shortstv: \"#4A235A\",\r\n  Koode: \"#7D6608\",\r\n  Reelsdrama: \"#641E16 \",\r\n  Lionsgate: \"#641E12\",\r\n};\r\n\r\nvar grouped = myArray.reduce(function (obj, product) {\r\n  obj[product.date] = obj[product.date] || [];\r\n\r\n  obj[product.date].push(product.provider);\r\n\r\n  return obj;\r\n}, {});\r\n\r\n//console.log(grouped)\r\n\r\nvar groups = Object.keys(grouped).map(function (key) {\r\n  return {\r\n    date: key,\r\n    provider: grouped[key].reduce(function (obj, product, key) {\r\n      obj[product] = obj[product] || [];\r\n\r\n      obj[product].push(product);\r\n\r\n      return obj;\r\n    }, {}),\r\n  };\r\n});\r\n\r\nlet objp = {};\r\n\r\ngroups.map((item, index) => {\r\n  Object.values(item.provider).map((item2, index2) => {\r\n    objp[Object.keys(item.provider)[index2]] = Object.values(item.provider)[\r\n      index2\r\n    ].length;\r\n  });\r\n\r\n  let obj = {\r\n    date: item.date,\r\n\r\n    ...objp,\r\n  };\r\n});\r\n"],"sourceRoot":""}