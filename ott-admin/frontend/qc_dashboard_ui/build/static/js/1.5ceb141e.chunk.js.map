{"version":3,"sources":["../node_modules/@mui/icons-material/InfoOutlined.js","Components/SliderContainer/SimpleBarChart.js","Components/SliderContainer/StackedAreaChart.js","Components/SliderContainer/UserEngagementSliderContainer.js","Components/SliderContainer/QualityOfExperienceSliderContainer.js","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","Components/SliderContainer/RealTimeSliderContainer.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","BarChart","props","options","data","labels","datasets","isConfig","scales","x","ticks","autoSkip","maxRotation","minRotation","font","size","y","plugins","datalabels","formatter","ctx","color","align","anchor","weight","legend","display","ChartDataLabels","height","StackedAreaChartComponent","UserEngagementSliderContainer","history","useHistory","useSelector","state","qoeReducer","conncurrentPlays","concurrent_plays","all","conncurrentPlaysUnit","unit","totalMinutesWatched","total_minutes_watched","totalMinutesWatchedUnit","averagePercentageCompletion","average_percentage_completion","averagePercentageCompletionUnit","videoPlaybackFailures","video_playback_failures","videoPlaybackFailuresUnit","uniqueViews","unique_viewers","uniqueViewsUnit","userAttrition","user_attrition","userAttritionUnit","uniqueDevices","unique_devices","uniqueDevicesUnit","minutesPerUniqueDevice","minutes_per_unique_devices","minutesPerUniqueDeviceUnit","averageBitrate","average_bitrate","averageBitrateUnit","playAttempts","play_attempts","playAttemptsUnit","succesfulPlays","succesful_plays","succesfulPlaysUnit","dispatch","useDispatch","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","centerMode","prevArrow","alt","src","process","width","nextArrow","formatDataAndTime","timestamp","partnerDetail","agr","map","name","moment","format","conncurrentPlaysData","time_stamp","label","fill","lineTension","borderColor","backgroundColor","pointRadius","pointHitRadius","pointBorderWidth","borderWidth","totalMinutesWatchedData","videoPlaybackFailuresData","averagePercentageCompletionData","uniqueViewsData","userAttritionData","uniqueDeviceData","minutesPerUniqueDeviceData","succesfulPlaysData","averageBitrateData","playAttemptsData","useEffect","getConcurrentPlays","toDate","fromDate","location","getAveragePercentCompletion","getTotalMinutesWatched","getVideoFailures","getUserAttrition","getUniqueViewers","getUniqueDevices","getMinutesPerUniqueDevices","video_start_failures","length","rebuffering_percentage","Math","floor","Date","getTime","aggregation","clickOnMetric","type","fulname","isValidPermission","push","setMetricType","setMetricTypeFullName","NotificationManager","error","adminMessage","message","round","num","digits","item","symbol","slice","reverse","find","toFixed","replace","className","to","onClick","title","arrow","total_sum","QualityOfExperienceSliderContainer","dataQOE","endedPlays","ended_plays","endedPlaysUnit","rebufferingRatio","rebuffering_ratio","rebufferingRatioUnit","bandwidthNew","bandwidth","bandwidthUnit","averageFramrate","average_framerate","averageFramrateUnit","endedPlaysPerUniqueDevices","ended_plays_per_unique_devices","endedPlaysPerUniqueDevicesUnit","attemptsNew","attempts","attemptsUnit","averageVideoStartTime","video_start_time","averageVideoStartTimeUnit","averageVideoReStartTime","video_restart_time","averageVideoReStartTimeUnit","averageRenderingQuality","rendering_quality","averageRenderingQualityUnit","bandwidthData","averageFramerateData","endedPlaysPerUniqueDevicesData","attemptsData","endedPlaysData","rebufferingRatioData","averageVideoStartTimeData","averageVideoReStartTimeData","averageRenderingQualityData","getEndedPlay","getRebufferingRatio","getBandwith","getAverageFramrate","getEndedPlaysPerUniqueDevice","getAttempts","getUnit","input","String","match","toUnitless","parseFloat","generateUtilityClasses","_t","_t2","_t3","_t4","pulseKeyframe","keyframes","waveKeyframe","styled","slot","overridesResolver","styles","ownerState","root","variant","animation","hasChildren","withChildren","fitContent","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","_extends","alpha","palette","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","content","visibility","maxWidth","css","action","hover","RealTimeSliderContainer","videoFailure","videoFailureUnit","rebufferingPercentage","rebufferingPercentageUnit","exitBeforeVideoStart","exit_before_video_starts","exitBeforeVideoStartUnit","connectionInducedRebufferingDuration","connection_induced_rebuffering_ratio","connectionInducedRebufferingDurationUnit","concurrentPlay","videoFailureData","connectionInducedRebufferingDurationData","rebufferingPercentageData","concurrentPlayData","exitBeforeVideoStartData","getVideoPlaysAndFailure","successfullPlays","checkVideoFailure","getRebufferingPercentage","getAverageBitRate","getExitBeforeVideoStart","getConnectionInducedRebufferingRatio","getRenderingQuality","getVideoStartTime","getVideoRestartTime","Box","Tooltip","SimpleBarChart","StackedAreaChart"],"mappings":"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","file":"static/js/1.5ceb141e.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'InfoOutlined');\n\nexports.default = _default;","/**\r\n * Simple Bar Chart Component\r\n */\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\n\r\nfunction BarChart(props) {\r\n   const { labels, datasets } = props;\r\n   const data = {\r\n      labels,\r\n      datasets\r\n   }\r\n   let options;\r\n   if(!props.isConfig){\r\n    options = {\r\n      plugins: {\r\n        datalabels: {\r\n          display: false\r\n        },\r\n        legend: {\r\n          display: false\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          display: false\r\n        },\r\n        y: {\r\n          display: false\r\n        }\r\n      }\r\n    }\r\n   }\r\n   else{\r\n     options = {\r\n      scales: {\r\n         x: {\r\n           ticks: {\r\n             autoSkip: false,\r\n             maxRotation: 30,\r\n             minRotation: 30,\r\n             font: {\r\n              size: 8,\r\n            },\r\n           }\r\n         },\r\n         y: {\r\n          ticks: {\r\n            autoSkip: false,\r\n            font: {\r\n             size: 12,\r\n           },\r\n          }\r\n        }\r\n       },\r\n      plugins: {\r\n        datalabels: {\r\n          formatter: (value, ctx) => {\r\n             return value\r\n         },\r\n          color: \"black\",\r\n          align: \"end\",\r\n          anchor: \"end\",\r\n          font: { size: \"10\", weight: 'bold' }\r\n        //  align: 'end',\r\n        //  backgroundColor: '#ccc',\r\n        //  color: '#fff',\r\n        //   font: {\r\n        //      weight: 'bold',\r\n        //      size: 10,\r\n        //   }\r\n       },\r\n        legend: {\r\n          display: false\r\n        },\r\n      },\r\n     }\r\n   }\r\n   return (\r\n      <Bar plugins={[ChartDataLabels]} data={data} options={options} height={100} />\r\n   );\r\n}\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nfunction StackedAreaChartComponent(props) {\r\n   const { labels, datasets } = props;\r\n   const data = {\r\n      labels,\r\n      datasets\r\n   };\r\n   const options = {\r\n    // plugins: {\r\n    //   legend: {\r\n    //     display: false\r\n    //   },\r\n    // },\r\n    // scales: {\r\n    //   yAxes: {\r\n    //     title: {\r\n    //       display: true,\r\n    //       text: 'yAxisTitle',\r\n    //       font: {\r\n    //         size: 15\r\n    //       }\r\n    //     },\r\n    //     ticks: {\r\n    //       precision: 0\r\n    //     }\r\n    //   },\r\n    //   xAxes: {\r\n    //     title: {\r\n    //       display: true,\r\n    //       text: 'xAxisTitle',\r\n    //       font: {\r\n    //         size: 15\r\n    //       }\r\n    //     },\r\n    //     ticks: {\r\n    //       precision: 0\r\n    //     }\r\n    //   },\r\n    // }\r\n      plugins: {\r\n        legend: {\r\n          display: false\r\n        },\r\n      },\r\n      scales: {\r\n         x: {\r\n           display: false\r\n         },\r\n         y: {\r\n           display: false\r\n         }\r\n       }\r\n    }\r\n   return (\r\n      <Line data={data} options={options} height={100} />\r\n   );\r\n}\r\n\r\nexport default StackedAreaChartComponent;","/*eslint react-hooks/exhaustive-deps: \"off\"*/\r\nimport React, { useEffect } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport SimpleBarChart from './SimpleBarChart'\r\nimport StackedAreaChart from './StackedAreaChart'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAveragePercentCompletion, getConcurrentPlays, getMinutesPerUniqueDevices, getTotalMinutesWatched, getUniqueDevices, getUniqueViewers, getUserAttrition, getVideoFailures, setMetricType, setMetricTypeFullName } from 'Store/Actions';\r\nimport moment from 'moment';\r\nimport { adminMessage, isValidPermission } from 'Constants/constant';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nfunction UserEngagementSliderContainer(props) {\r\n   const history = useHistory()\r\n   const data = useSelector(state => state.qoeReducer);\r\n   const conncurrentPlays = data?.concurrent_plays[0]?.all\r\n   const conncurrentPlaysUnit = data?.concurrent_plays[0]?.all?.unit\r\n   const totalMinutesWatched = data?.total_minutes_watched[0]?.all\r\n   const totalMinutesWatchedUnit = data?.total_minutes_watched[0]?.all?.unit\r\n   const averagePercentageCompletion = data?.average_percentage_completion[0]?.all\r\n   const averagePercentageCompletionUnit = data?.average_percentage_completion[0]?.all?.unit\r\n   const videoPlaybackFailures = data?.video_playback_failures[0]?.all\r\n   const videoPlaybackFailuresUnit = data?.video_playback_failures[0]?.all?.unit\r\n   const uniqueViews = data?.unique_viewers[0]?.all\r\n   const uniqueViewsUnit = data?.unique_viewers[0]?.all?.unit\r\n   const userAttrition = data?.user_attrition[0]?.all\r\n   const userAttritionUnit = data?.user_attrition[0]?.all?.unit\r\n   const uniqueDevices = data?.unique_devices[0]?.all\r\n   const uniqueDevicesUnit = data?.unique_devices[0]?.all?.unit\r\n   const minutesPerUniqueDevice = data?.minutes_per_unique_devices[0]?.all\r\n   const minutesPerUniqueDeviceUnit = data?.minutes_per_unique_devices[0]?.all?.unit\r\n\r\n   const averageBitrate = data?.average_bitrate[0]?.all\r\n   const averageBitrateUnit = data?.average_bitrate[0]?.all?.unit\r\n   const playAttempts = data?.play_attempts[0]?.all;\r\n   const playAttemptsUnit = data?.play_attempts[0]?.all?.unit;\r\n   const succesfulPlays = data?.succesful_plays[0]?.all;\r\n   const succesfulPlaysUnit = data?.succesful_plays[0]?.all?.unit;\r\n\r\n   const dispatch = useDispatch()\r\n   const settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 300,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 1,\r\n      autoplay: false,\r\n      centerMode: false,\r\n      prevArrow: <img alt='left-arrow' src={`${process.env.PUBLIC_URL}/assets/left-arrow.svg`} width=\"15\" height=\"27\" />,\r\n      nextArrow: <img alt='right-arrow' src={`${process.env.PUBLIC_URL}/assets/right-arrow.svg`} width=\"15\" height=\"27\" />\r\n   };\r\n   \r\n   const formatDataAndTime = (timestamp) => {\r\n      if(props.partnerDetail){\r\n         if(props.agr === '1h'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('hh:mm A')}`);\r\n         }\r\n         else if(props.agr === '1d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n         else if(props.agr === '2d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n         else if(props.agr === '6d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n      }\r\n      else{\r\n         return timestamp && timestamp.map(name => `${moment(name).format('hh:mm A')}`);\r\n      }\r\n   }\r\n\r\n   const conncurrentPlaysData = {\r\n      labels: formatDataAndTime(conncurrentPlays?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Max Concurrent Plays',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            borderWidth: 2,\r\n            data: conncurrentPlays?.concurrent_plays\r\n         },\r\n      ]\r\n   };\r\n\r\n   const totalMinutesWatchedData = {\r\n      labels: formatDataAndTime(totalMinutesWatched?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Total Minutes Watched',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#66F5AE',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: totalMinutesWatched?.total_minutes_watched\r\n         },\r\n      ]\r\n   };\r\n\r\n   const videoPlaybackFailuresData = {\r\n      labels: formatDataAndTime(videoPlaybackFailures?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Video Playback Failures',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            borderWidth: 2,\r\n            data: videoPlaybackFailures?.video_playback_failures\r\n         },\r\n      ]\r\n   };\r\n\r\n   const averagePercentageCompletionData = {\r\n      labels: formatDataAndTime(averagePercentageCompletion?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Average Percentage Completion',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#0092ED',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: averagePercentageCompletion?.average_percentage_completion\r\n         },\r\n      ]\r\n   };\r\n\r\n   const uniqueViewsData = {\r\n      labels: formatDataAndTime(uniqueViews?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Unique Views',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: uniqueViews?.unique_viewers\r\n         },\r\n      ]\r\n   };\r\n\r\n   const userAttritionData = {\r\n      labels: formatDataAndTime(userAttrition?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'User Attrition',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#66F5AE',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: userAttrition?.user_attrition\r\n         },\r\n      ]\r\n   };\r\n\r\n   const uniqueDeviceData = {\r\n      labels: formatDataAndTime(uniqueDevices?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Unique Devices',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: uniqueDevices?.unique_devices\r\n         },\r\n      ]\r\n   };\r\n\r\n   const minutesPerUniqueDeviceData = {\r\n      labels: formatDataAndTime(minutesPerUniqueDevice?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Minutes Per Unique Device',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#0092ED',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: minutesPerUniqueDevice?.minutes_per_unique_devices\r\n         },\r\n      ]\r\n   };\r\n   const succesfulPlaysData = {\r\n      labels: formatDataAndTime(succesfulPlays?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Sucessful Plays',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: succesfulPlays?.succesful_plays\r\n         },\r\n      ]\r\n   };\r\n\r\n   const averageBitrateData = {\r\n      labels: formatDataAndTime(averageBitrate?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Average Bitrate',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#0092ED',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: averageBitrate?.average_bitrate\r\n         },\r\n      ]\r\n   };\r\n\r\n   const playAttemptsData = {\r\n      labels: formatDataAndTime(playAttempts?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Play Attempts',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#66F5AE',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: playAttempts?.play_attempts\r\n         },\r\n      ]\r\n   };\r\n\r\n   useEffect(() => {\r\n      if (props.partnerDetail) {\r\n         dispatch(getConcurrentPlays(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getAveragePercentCompletion(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getTotalMinutesWatched(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getVideoFailures(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getUserAttrition(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getUniqueViewers(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getUniqueDevices(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getMinutesPerUniqueDevices(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n      }\r\n   }, [props.agr,props.location])\r\n\r\n\r\n   useEffect(() => {\r\n      if (data?.video_start_failures.length > 0 && data?.succesful_plays.length > 0 && data?.rebuffering_percentage.length > 0 && data?.play_attempts.length > 0 && data?.average_bitrate.length > 0 && data?.unique_devices?.length > 0 && data?.minutes_per_unique_devices?.length > 0) {\r\n      }\r\n      else {\r\n         if (!props.partnerDetail) {\r\n            let toDate = Math.floor((new Date()).getTime() / 1000.0);\r\n            let fromDate = Math.floor((new Date()).getTime() / 1000.0) - (24 * 3600);\r\n            let aggregation = '1h'\r\n            dispatch(getConcurrentPlays(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getAveragePercentCompletion(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getTotalMinutesWatched(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getVideoFailures(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getUserAttrition(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getUniqueViewers(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getUniqueDevices(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getMinutesPerUniqueDevices(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n         }\r\n      }\r\n   }, []);\r\n\r\n   const clickOnMetric = (type,fulname) => {\r\n      if(isValidPermission(\"READ_USER_ENGAGEMENT_METRICS\")){\r\n         history.push('/dashboard/crm/user-engagement-metrics')\r\n         dispatch(setMetricType(type))\r\n         dispatch(setMetricTypeFullName(fulname));\r\n      }else{\r\n         NotificationManager.error(adminMessage.message)\r\n      }\r\n\r\n   }\r\n\r\n   function round(num, digits) {\r\n      const lookup = [\r\n        { value: 1, symbol: \"\" },\r\n        { value: 1e3, symbol: \"k\" },\r\n        { value: 1e6, symbol: \"M\" },\r\n        { value: 1e9, symbol: \"G\" },\r\n        { value: 1e12, symbol: \"T\" },\r\n        { value: 1e15, symbol: \"P\" },\r\n        { value: 1e18, symbol: \"E\" }\r\n      ];\r\n      const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n      var item = lookup.slice().reverse().find(function(item) {\r\n        return num >= item.value;\r\n      });\r\n      return item ? (num / item.value).toFixed(digits).replace(rx, \"$1\") + item.symbol : \"0\";\r\n    }\r\n   return (\r\n      <div className='slideContainer'>\r\n         <div className='col-md-12'>\r\n            <div className='col-md-12'>\r\n               <h5 className=\"component_heading mb-20\">User Engagement Metrics <br/> <span>Charts are showing  {props.agr === '1h'?\"24hrs\":props.agr === '1d'?\"Weekly\":props.agr === '2d'?\"Monthly\":props.agr === '6d'?\"3 Month\":\"24hrs\"}  data</span>\r\n                  <Link  to={isValidPermission(\"READ_USER_ENGAGEMENT_METRICS\")?'/dashboard/crm/user-engagement-metrics':null}>View All\r\n                     <i className=\"zmdi zmdi-chevron-right\"></i>\r\n                  </Link>\r\n               </h5>\r\n            </div>\r\n         </div>\r\n         <Slider {...settings}>\r\n            <div onClick={() => clickOnMetric('concurrent_plays','Max Concurrent Plays')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Max Concurrent Plays <Tooltip title=\"Max Concurrent Plays is the maximum number of simultaneously active sessions during a given interval. \" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(conncurrentPlays?.total_sum,2)} {conncurrentPlaysUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={conncurrentPlaysData.labels} datasets={conncurrentPlaysData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('average_percentage_completion','Average Percent Completion')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Percent Completion <Tooltip title=\"Average percent completion shows the duration viewed compared with the total length the content. \" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(averagePercentageCompletion?.total_sum,1)} {averagePercentageCompletionUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={averagePercentageCompletionData.labels} datasets={averagePercentageCompletionData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('total_minutes_watched','Total Minutes Watched')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Total Minutes Watched <Tooltip title=\"Total minutes watched of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(totalMinutesWatched?.total_sum,2)} {totalMinutesWatchedUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={totalMinutesWatchedData.labels} datasets={totalMinutesWatchedData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('video_playback_failures','Video Playback Failures ')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Video Playback Failures <Tooltip title=\"Video playback failure occurs when video play terminates due to a playback error, such as video file corruption, insufficient streaming resources, or a sudden interruption in the video stream.\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(videoPlaybackFailures?.total_sum,2)} {videoPlaybackFailuresUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={videoPlaybackFailuresData.labels} datasets={videoPlaybackFailuresData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('user_attrition','User Attrition ')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>User Attrition <Tooltip title=\"User Attrition of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(userAttrition?.total_sum,2)} {userAttritionUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={userAttritionData.labels} datasets={userAttritionData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('unique_viewers','Unique Viewers')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Unique Viewers <Tooltip title=\"Unique Viewers of last 24 hr \" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(uniqueViews?.total_sum,2)} {uniqueViewsUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={uniqueViewsData.labels} datasets={uniqueViewsData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('unique_devices','Unique Devices')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Unique Devices <Tooltip title=\"Unique Devices of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(uniqueDevices?.total_sum)} {uniqueDevicesUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={uniqueDeviceData.labels} datasets={uniqueDeviceData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('minutes_per_unique_devices','Minutes / Unique Device')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Minutes / Unique Device <Tooltip title=\"Minutes / Unique Device of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(minutesPerUniqueDevice?.total_sum,2)} {minutesPerUniqueDeviceUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={minutesPerUniqueDeviceData.labels} datasets={minutesPerUniqueDeviceData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('play_attempts','Play Attempts')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Play Attempts <Tooltip title=\"Play Attempts of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(playAttempts?.total_sum,2)} {playAttemptsUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={playAttemptsData.labels} datasets={playAttemptsData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('succesful_plays','Successful Plays')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Successful Plays <Tooltip title=\"Successful Plays counts all Successful Plays to play a video which are initiated when a viewer clicks play or a video auto-plays. \" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(succesfulPlays?.total_sum,2)} {succesfulPlaysUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={succesfulPlaysData.labels} datasets={succesfulPlaysData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('average_bitrate','Average Bitrate ')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Bitrate <Tooltip title=\"Average Bitrate of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(averageBitrate?.total_sum,2)} {averageBitrateUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={averageBitrateData.labels} datasets={averageBitrateData.datasets} />\r\n               </div>\r\n            </div>\r\n         </Slider>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default UserEngagementSliderContainer","/*eslint react-hooks/exhaustive-deps: \"off\"*/\r\nimport React, { useEffect } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport SimpleBarChart from './SimpleBarChart'\r\nimport StackedAreaChart from './StackedAreaChart'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAttempts, getAverageFramrate, getBandwith, getEndedPlay, getEndedPlaysPerUniqueDevice, getRebufferingRatio, setMetricType, setMetricTypeFullName } from 'Store/Actions';\r\nimport moment from 'moment';\r\nimport { adminMessage, isValidPermission } from 'Constants/constant';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nfunction QualityOfExperienceSliderContainer(props) {\r\n   const history = useHistory()\r\n   const dispatch = useDispatch()\r\n   const dataQOE = useSelector(state => state.qoeReducer);\r\n   const endedPlays = dataQOE?.ended_plays[0]?.all\r\n   const endedPlaysUnit = dataQOE?.ended_plays[0]?.all?.unit\r\n   const averageBitrate = dataQOE?.average_bitrate[0]?.all\r\n   const averageBitrateUnit = dataQOE?.average_bitrate[0]?.all?.unit\r\n   const rebufferingRatio = dataQOE?.rebuffering_ratio[0]?.all\r\n   const rebufferingRatioUnit = dataQOE?.rebuffering_ratio[0]?.all?.unit\r\n   const bandwidthNew = dataQOE?.bandwidth[0]?.all\r\n   const bandwidthUnit = dataQOE?.bandwidth[0]?.all?.unit\r\n   const averageFramrate = dataQOE?.average_framerate[0]?.all\r\n   const averageFramrateUnit = dataQOE?.average_framerate[0]?.all?.unit\r\n   const endedPlaysPerUniqueDevices = dataQOE?.ended_plays_per_unique_devices[0]?.all\r\n   const endedPlaysPerUniqueDevicesUnit = dataQOE?.ended_plays_per_unique_devices[0]?.all?.unit\r\n   const attemptsNew = dataQOE?.attempts[0]?.all\r\n   const attemptsUnit = dataQOE?.attempts[0]?.all?.unit\r\n\r\n   const videoPlaybackFailures = dataQOE?.video_playback_failures[0]?.all\r\n   const videoPlaybackFailuresUnit = dataQOE?.video_playback_failures[0]?.all?.unit\r\n   const averageVideoStartTime = dataQOE?.video_start_time[0]?.all\r\n   const averageVideoStartTimeUnit = dataQOE?.video_start_time[0]?.all?.unit\r\n   const averageVideoReStartTime = dataQOE?.video_restart_time[0]?.all\r\n   const averageVideoReStartTimeUnit = dataQOE?.video_restart_time[0]?.all?.unit\r\n   const averageRenderingQuality = dataQOE?.rendering_quality[0]?.all\r\n   const averageRenderingQualityUnit = dataQOE?.rendering_quality[0]?.all?.unit\r\n   const userAttrition = dataQOE?.user_attrition[0]?.all\r\n   const userAttritionUnit = dataQOE?.user_attrition[0]?.all?.unit\r\n\r\n\r\n   const settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 300,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 1,\r\n      autoplay: false,\r\n      centerMode: false,\r\n      prevArrow: <img alt='left-arrow' src={`${process.env.PUBLIC_URL}/assets/left-arrow.svg`} width=\"15\" height=\"27\" />,\r\n      nextArrow: <img alt='right-arrow' src={`${process.env.PUBLIC_URL}/assets/right-arrow.svg`} width=\"15\" height=\"27\" />\r\n   };\r\n\r\n   const formatDataAndTime = (timestamp) => {\r\n      if(props.partnerDetail){\r\n         if(props.agr === '1h'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('hh:mm A')}`);\r\n         }\r\n         else if(props.agr === '1d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n         else if(props.agr === '2d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n         else if(props.agr === '6d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n      }\r\n      else{\r\n         return timestamp && timestamp.map(name => `${moment(name).format('hh:mm A')}`);\r\n      }\r\n   }\r\n\r\n   const bandwidthData = {\r\n      labels: formatDataAndTime(bandwidthNew?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Bandwidth',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            borderWidth: 2,\r\n            data: bandwidthNew?.bandwidth\r\n         },\r\n      ]\r\n   };\r\n\r\n   const averageFramerateData = {\r\n      labels: formatDataAndTime(averageFramrate?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'AVerage Framerate',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#66F5AE',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            data: averageFramrate?.average_framerate\r\n         },\r\n      ]\r\n   };\r\n\r\n   const endedPlaysPerUniqueDevicesData = {\r\n      labels: formatDataAndTime(endedPlaysPerUniqueDevices?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Ended Plays Per Unique Device',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            borderWidth: 2,\r\n            data: endedPlaysPerUniqueDevices?.ended_plays_per_unique_devices\r\n         },\r\n      ]\r\n   };\r\n\r\n   const attemptsData = {\r\n      labels: formatDataAndTime(attemptsNew?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Play Attempts',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            data: attemptsNew?.attempts\r\n         },\r\n      ]\r\n   };\r\n\r\n   const endedPlaysData = {\r\n      labels: formatDataAndTime(endedPlays?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Ended Plays',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            borderWidth: 2,\r\n            data: endedPlays?.ended_plays\r\n         },\r\n      ]\r\n   };\r\n\r\n   const rebufferingRatioData = {\r\n      labels: formatDataAndTime(rebufferingRatio?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Rebuffering Ratio',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#0092ED',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: rebufferingRatio?.rebuffering_ratio\r\n         },\r\n      ]\r\n   };\r\n\r\n   const averageBitrateData = {\r\n      labels: formatDataAndTime(averageBitrate?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Avergae Bitrate',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: averageBitrate?.average_bitrate\r\n         },\r\n      ]\r\n   };\r\n\r\n   const videoPlaybackFailuresData = {\r\n      labels: formatDataAndTime(videoPlaybackFailures?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Video Playback Failures',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            borderWidth: 2,\r\n            data: videoPlaybackFailures?.video_playback_failures\r\n         },\r\n      ]\r\n   };\r\n   const averageVideoStartTimeData = {\r\n      labels: formatDataAndTime(averageVideoStartTime?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Video Start Time',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: averageVideoStartTime?.video_start_time\r\n         },\r\n      ]\r\n   };\r\n\r\n   const averageVideoReStartTimeData = {\r\n      labels: formatDataAndTime(averageVideoReStartTime?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Video Restart Time',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#0092ED',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: averageVideoReStartTime?.video_restart_time\r\n         },\r\n      ]\r\n   };\r\n\r\n   const averageRenderingQualityData = {\r\n      labels: formatDataAndTime(averageRenderingQuality?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Rendering Quality',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            borderWidth: 2,\r\n            data: averageRenderingQuality?.rendering_quality\r\n         },\r\n      ]\r\n   };\r\n\r\n   const userAttritionData = {\r\n      labels: formatDataAndTime(userAttrition?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'User Attrition',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            borderWidth: 2,\r\n            data: userAttrition?.user_attrition\r\n         },\r\n      ]\r\n   };\r\n\r\n\r\n   useEffect(() => {\r\n      if (props.partnerDetail) {\r\n         dispatch(getEndedPlay(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getRebufferingRatio(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getBandwith(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getAverageFramrate(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getEndedPlaysPerUniqueDevice(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getAttempts(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n      }\r\n   }, [props.agr,props.location])\r\n\r\n   useEffect(() => {\r\n      if (dataQOE?.ended_plays.length > 0 && dataQOE?.average_bitrate.length > 0 && dataQOE?.rebuffering_ratio.length > 0 && dataQOE?.bandwidth.length > 0 && dataQOE?.average_framerate.length > 0 && dataQOE?.ended_plays_per_unique_devices?.length > 0 && dataQOE?.attempts?.length > 0) {\r\n      }\r\n      else {\r\n         if (!props.partnerDetail) {\r\n            let toDate = Math.floor((new Date()).getTime() / 1000.0);\r\n            let fromDate = Math.floor((new Date()).getTime() / 1000.0) - (24 * 3600);\r\n            let aggregation = '1h'\r\n            dispatch(getEndedPlay(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getRebufferingRatio(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getBandwith(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getAverageFramrate(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getEndedPlaysPerUniqueDevice(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getAttempts(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n         }\r\n      }\r\n   }, [])\r\n\r\n   const clickOnMetric = (type,fulname) => {\r\n   //   if(isValidPermission(\"READ_QUALITY_OF_EXPERIENCE\")){\r\n      history.push('/dashboard/crm/quality-of-experience')\r\n      dispatch(setMetricType(type))\r\n      dispatch(setMetricTypeFullName(fulname));\r\n   //   }else{\r\n   //     NotificationManager.error(adminMessage.message)\r\n   //   }\r\n   }\r\n   function round(num, digits) {\r\n      const lookup = [\r\n        { value: 1, symbol: \"\" },\r\n        { value: 1e3, symbol: \"k\" },\r\n        { value: 1e6, symbol: \"M\" },\r\n        { value: 1e9, symbol: \"G\" },\r\n        { value: 1e12, symbol: \"T\" },\r\n        { value: 1e15, symbol: \"P\" },\r\n        { value: 1e18, symbol: \"E\" }\r\n      ];\r\n      const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n      var item = lookup.slice().reverse().find(function(item) {\r\n        return num >= item.value;\r\n      });\r\n      return item ? (num / item.value).toFixed(digits).replace(rx, \"$1\") + item.symbol : \"0\";\r\n    }\r\n   return (\r\n      <div className='slideContainer'>\r\n         <div className='col-md-12'>\r\n            <div className='col-md-12'>\r\n               <h5 className=\"component_heading mb-20\">Quality of Experience (QoE) <br/> <span>Charts are showing  {props.agr === '1h'?\"24hrs\":props.agr === '1d'?\"Weekly\":props.agr === '2d'?\"Monthly\":props.agr === '6d'?\"3 Month\":\"24hrs\"}  data</span>\r\n                  <Link to={isValidPermission(\"READ_QUALITY_OF_EXPERIENCE\")?'/dashboard/crm/quality-of-experience':null}>View All\r\n                     <i className=\"zmdi zmdi-chevron-right\"></i>\r\n                  </Link>\r\n               </h5>\r\n            </div>\r\n         </div>\r\n\r\n         <Slider {...settings}>\r\n            <div onClick={() => clickOnMetric('ended_plays','Ended Plays')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Ended Plays <Tooltip title=\"An ended play is a play that ended during a specific period.\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(endedPlays?.total_sum,2)} {endedPlaysUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={endedPlaysData.labels} datasets={endedPlaysData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('rebuffering_ratio','Rebuffering Ratio')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Rebuffering Ratio <Tooltip title=\"Rebuffering occurs when the video stalls during playback and the viewer must wait for the video to resume playing\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(rebufferingRatio?.total_sum,2)} {rebufferingRatioUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={rebufferingRatioData.labels} datasets={rebufferingRatioData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('average_bitrate','Average Bitrate')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Bitrate <Tooltip title=\"Average Bitrate of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(averageBitrate?.total_sum,2)} {averageBitrateUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={averageBitrateData.labels} datasets={averageBitrateData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('bandwidth','Bandwidth')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Bandwidth <Tooltip title=\"Bandwidth of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(bandwidthNew?.total_sum,2)} {bandwidthUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={bandwidthData.labels} datasets={bandwidthData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('average_framerate','Average Framerate')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Framerate <Tooltip title=\"Average Framerate of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(averageFramrate?.total_sum,2)} {averageFramrateUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={averageFramerateData.labels} datasets={averageFramerateData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('ended_plays_per_unique_devices','Ended Plays Per Unique Devices')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Ended Plays / Device <Tooltip title=\"Ended Plays Per Unique Devices of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(endedPlaysPerUniqueDevices?.total_sum,2)} {endedPlaysPerUniqueDevicesUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={endedPlaysPerUniqueDevicesData.labels} datasets={endedPlaysPerUniqueDevicesData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('attempts','Play Attempts')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Play Attempts <Tooltip title=\"Play Attempts of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(attemptsNew?.total_sum,2)} {attemptsUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={attemptsData.labels} datasets={attemptsData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('user_attrition','User Attrition')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>User Attrition <Tooltip title=\"User Attrition of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(userAttrition?.total_sum,2)} {userAttritionUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={userAttritionData.labels} datasets={userAttritionData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('video_playback_failures','Video Playback Failures')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Video Playback Failures <Tooltip title=\"Video playback failure occurs when video play terminates due to a playback error, such as video file corruption, insufficient streaming resources, or a sudden interruption in the video stream.\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(videoPlaybackFailures?.total_sum,2)} {videoPlaybackFailuresUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={videoPlaybackFailuresData.labels} datasets={videoPlaybackFailuresData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('video_start_time','Average Video Start Time')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Video Start Time <Tooltip title=\"Average Video Start Time of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(averageVideoStartTime?.total_sum,2)} {averageVideoStartTimeUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={averageVideoStartTimeData.labels} datasets={averageVideoStartTimeData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('video_restart_time','Average Video Restart Time')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Video Restart Time <Tooltip title=\"Average Video Restart Time of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(averageVideoReStartTime?.total_sum,2)} {averageVideoReStartTimeUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={averageVideoReStartTimeData.labels} datasets={averageVideoReStartTimeData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('rendering_quality','Average Rendering Quality')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Rendering Quality <Tooltip title=\"Average Rendering Quality of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(averageRenderingQuality?.total_sum,2)} {averageRenderingQualityUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={averageRenderingQualityData.labels} datasets={averageRenderingQualityData.datasets} />\r\n               </div>\r\n            </div>\r\n         </Slider>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default QualityOfExperienceSliderContainer","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    let pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    } // Convert length in pixels to the output unit\n\n\n    let outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\n\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(90deg, transparent, ${0}, transparent);\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, theme.palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'text']), PropTypes.string]),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","/*eslint react-hooks/exhaustive-deps: \"off\"*/\r\nimport React, { useEffect } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport SimpleBarChart from './SimpleBarChart'\r\nimport StackedAreaChart from './StackedAreaChart'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkVideoFailure, successfullPlays, getRebufferingPercentage, getVideoPlaysAndFailure, getAverageBitRate, setMetricType, getExitBeforeVideoStart, getConnectionInducedRebufferingRatio, getVideoStartTime, getVideoRestartTime, getRenderingQuality, getVideoFailures, setMetricTypeFullName } from 'Store/Actions';\r\nimport moment from 'moment';\r\nimport { adminMessage, isValidPermission } from 'Constants/constant';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport LoadingSkeleton from 'Components/LoadingSkeleton/LoadingSkeleton';\r\n\r\nfunction RealTimeSliderContainer(props) {\r\n   const dispatch = useDispatch()\r\n   const data = useSelector(state => state.qoeReducer);\r\n   const videoFailure = data?.video_start_failures[0]?.all;\r\n   const videoFailureUnit = data?.video_start_failures[0]?.all?.unit;\r\n   const succesfulPlays = data?.succesful_plays[0]?.all;\r\n   const succesfulPlaysUnit = data?.succesful_plays[0]?.all?.unit;\r\n   const rebufferingPercentage = data?.rebuffering_percentage[0]?.all;\r\n   const rebufferingPercentageUnit = data?.rebuffering_percentage[0]?.all?.unit;\r\n   const videoPlaybackFailures = data?.video_playback_failures[0]?.all\r\n   const videoPlaybackFailuresUnit = data?.video_playback_failures[0]?.all?.unit\r\n   const averageBitrate = data?.average_bitrate[0]?.all\r\n   const averageBitrateUnit = data?.average_bitrate[0]?.all?.unit\r\n   const exitBeforeVideoStart = data?.exit_before_video_starts[0]?.all\r\n   const exitBeforeVideoStartUnit = data?.exit_before_video_starts[0]?.all?.unit\r\n   const connectionInducedRebufferingDuration = data?.connection_induced_rebuffering_ratio[0]?.all\r\n   const connectionInducedRebufferingDurationUnit = data?.connection_induced_rebuffering_ratio[0]?.all?.unit\r\n  \r\n   const playAttempts = data?.play_attempts[0]?.all;\r\n   const playAttemptsUnit = data?.play_attempts[0]?.all?.unit;\r\n   const concurrentPlay = data?.concurrent_plays[0]?.all;\r\n  // const concurrentPlayUnit = data?.video_start_failures[0]?.all?.unit;\r\n   const history = useHistory()\r\n   const settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 300,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 1,\r\n      autoplay: false,\r\n      centerMode: false,\r\n      prevArrow: <img alt='left-arrow' src={`${process.env.PUBLIC_URL}/assets/left-arrow.svg`} width=\"15\" height=\"27\" />,\r\n      nextArrow: <img alt='left-arrow' src={`${process.env.PUBLIC_URL}/assets/right-arrow.svg`} width=\"15\" height=\"27\" />\r\n   };\r\n   \r\n   const formatDataAndTime = (timestamp) => {\r\n      if(props.partnerDetail){\r\n         if(props.agr === '1h'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('hh:mm A')}`);\r\n         }\r\n         else if(props.agr === '1d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n         else if(props.agr === '2d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n         else if(props.agr === '6d'){\r\n            return timestamp && timestamp.map(name => `${moment(name).format('DD-MM-YYYY')}`);\r\n         }\r\n      }\r\n      else{\r\n         return timestamp && timestamp.map(name => `${moment(name).format('hh:mm A')}`);\r\n      }\r\n   }\r\n\r\n\r\n   function round(num, digits) {\r\n      const lookup = [\r\n        { value: 1, symbol: \"\" },\r\n        { value: 1e3, symbol: \"k\" },\r\n        { value: 1e6, symbol: \"M\" },\r\n        { value: 1e9, symbol: \"G\" },\r\n        { value: 1e12, symbol: \"T\" },\r\n        { value: 1e15, symbol: \"P\" },\r\n        { value: 1e18, symbol: \"E\" }\r\n      ];\r\n      const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n      var item = lookup.slice().reverse().find(function(item) {\r\n        return num >= item.value;\r\n      });\r\n      return item ? (num / item.value).toFixed(digits).replace(rx, \"$1\") + item.symbol : \"0\";\r\n    }\r\n\r\n   const videoPlaybackFailuresData = {\r\n      labels: formatDataAndTime(videoPlaybackFailures?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Video Playback Failures',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            borderWidth: 2,\r\n            data: videoPlaybackFailures?.video_playback_failures,\r\n         },\r\n      ],\r\n   };\r\n\r\n   const videoFailureData = {\r\n      labels: formatDataAndTime(videoFailure?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Video Failure',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            borderColor: '#0292ED',\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            pointBorderWidth: 0,\r\n            borderWidth: 2,\r\n            data: videoFailure?.video_start_failures\r\n         },\r\n      ]\r\n   };\r\n\r\n   const succesfulPlaysData = {\r\n      labels: formatDataAndTime(succesfulPlays?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Sucessful Plays',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: succesfulPlays?.succesful_plays\r\n         },\r\n      ]\r\n   };\r\n\r\n   const connectionInducedRebufferingDurationData = {\r\n      labels: formatDataAndTime(connectionInducedRebufferingDuration?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Connection Induced Rebuffer Duration',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#FF4D7D',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: connectionInducedRebufferingDuration?.connection_induced_rebuffering_ratio\r\n         },\r\n      ]\r\n   };\r\n\r\n   const rebufferingPercentageData = {\r\n      labels: formatDataAndTime(rebufferingPercentage?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Rebuffering Percentage',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#66F5AE',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: rebufferingPercentage?.rebuffering_percentage\r\n         },\r\n      ]\r\n   };\r\n\r\n   const averageBitrateData = {\r\n      labels: formatDataAndTime(averageBitrate?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Average Bitrate',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#0092ED',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: averageBitrate?.average_bitrate\r\n         },\r\n      ]\r\n   };\r\n\r\n   const playAttemptsData = {\r\n      labels: formatDataAndTime(playAttempts?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Play Attempts',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#66F5AE',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: playAttempts?.play_attempts\r\n         },\r\n      ]\r\n   };\r\n   const concurrentPlayData = {\r\n      labels: formatDataAndTime(concurrentPlay?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Max Concurrent Plays',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#0092ED',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: concurrentPlay?.concurrent_plays\r\n         },\r\n      ]\r\n   };\r\n   // const videosPlaysandFailuresData = {\r\n   //    labels: formatDataAndTime(videosPlaysandFailures?.time_stamp),\r\n   //    datasets: [\r\n   //       {\r\n   //          label: 'Videos plays and Failures',\r\n   //          fill: false,\r\n   //          lineTension: 0.1,\r\n   //          backgroundColor: '#66F5AE',\r\n   //          pointRadius: 3,\r\n   //          pointHitRadius: 0,\r\n   //          data: videosPlaysandFailures?.video_playback_failures\r\n   //       },\r\n   //    ]\r\n   // };\r\n   const exitBeforeVideoStartData = {\r\n      labels: formatDataAndTime(exitBeforeVideoStart?.time_stamp),\r\n      datasets: [\r\n         {\r\n            label: 'Exit Before Video Start',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#66F5AE',\r\n            pointRadius: 3,\r\n            pointHitRadius: 0,\r\n            data: exitBeforeVideoStart?.exit_before_video_starts\r\n         },\r\n      ]\r\n   };\r\n\r\n   useEffect(() => {\r\n      if (props.partnerDetail) {\r\n         dispatch(getVideoPlaysAndFailure(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(successfullPlays(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(checkVideoFailure(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getRebufferingPercentage(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getAverageBitRate(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getExitBeforeVideoStart(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getConnectionInducedRebufferingRatio(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getVideoPlaysAndFailure(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n        // dispatch(getVideoFailures(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n         dispatch(getRenderingQuality(dispatch, props.toDate, props.fromDate, props.agr,props.location))\r\n\r\n         \r\n      }\r\n   }, [props.agr,props.location])\r\n\r\n\r\n   useEffect(() => {\r\n      if (data?.video_start_failures.length > 0 && data?.succesful_plays.length > 0 && data?.rebuffering_percentage.length > 0 && data?.video_playback_failures.length > 0 && data?.average_bitrate.length > 0 && data?.exit_before_video_starts?.length > 0 && data?.connection_induced_rebuffering_ratio?.length > 0) {\r\n      }\r\n      else {\r\n         if (!props.partnerDetail) {\r\n            let toDate = Math.floor((new Date()).getTime() / 1000.0);\r\n            let fromDate = Math.floor((new Date()).getTime() / 1000.0) - (24 * 3600);\r\n            let aggregation = '1h'\r\n            dispatch(getVideoPlaysAndFailure(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(successfullPlays(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(checkVideoFailure(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getRebufferingPercentage(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getAverageBitRate(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getExitBeforeVideoStart(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getConnectionInducedRebufferingRatio(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getVideoStartTime(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getVideoRestartTime(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n            dispatch(getRenderingQuality(dispatch, toDate, fromDate, aggregation,\"all\"))\r\n         }\r\n      }\r\n   }, []);\r\n\r\n   const clickOnMetric = (type,fulname) => {\r\n      // if(isValidPermission(\"READ_REAL_TIME_KEY_INSIGHTS\")){\r\n         history.push('/dashboard/crm/realtime-key-insights')\r\n         dispatch(setMetricType(type))\r\n         dispatch(setMetricTypeFullName(fulname));\r\n      // }else{\r\n         // NotificationManager.error(adminMessage.message)\r\n      // }\r\n\r\n   }\r\n\r\n   return (\r\n      <div className='slideContainer'>\r\n         <div className='col-md-12'>\r\n            <div className='col-md-12'>\r\n               <h5 className=\"component_heading mb-20 \">Real-Time Key Insights <br/><span>Charts are showing {props.agr === '1h'?\"24hrs\":props.agr === '1d'?\"Weekly\":props.agr === '2d'?\"Monthly\":props.agr === '6d'?\"3 Month\":\"24hrs\"} data</span>\r\n                  <Link to={isValidPermission(\"READ_REAL_TIME_KEY_INSIGHTS\")?'/dashboard/crm/realtime-key-insights':null}>View All\r\n                     <i className=\"zmdi zmdi-chevron-right\"></i>\r\n                  </Link>\r\n               </h5>\r\n            </div>\r\n         </div>\r\n         <Slider {...settings}>\r\n            <div onClick={() => clickOnMetric('rebuffering_percentage','Average Re-buffering ')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Re-buffering <Tooltip title=\"Average re-buffering of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(rebufferingPercentage?.total_sum,2)} {rebufferingPercentageUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={rebufferingPercentageData.labels} datasets={rebufferingPercentageData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('average_bitrate','Average Bitrate')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Bitrate <Tooltip title=\"Average Bitrate of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(averageBitrate?.total_sum,2)} {averageBitrateUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={averageBitrateData.labels} datasets={averageBitrateData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('video_playback_failures','Average Video Playback Failure')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Video Playback Failure <Tooltip title=\"Video Playback Failure of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(videoPlaybackFailures?.total_sum,2)} {videoPlaybackFailuresUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={videoPlaybackFailuresData.labels} datasets={videoPlaybackFailuresData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('succesful_plays','Successful Plays')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Successful Plays <Tooltip title=\"Attempts counts all attempts to play a video which are initiated when a viewer clicks play or a video auto-plays. \" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(succesfulPlays?.total_sum,2)} {succesfulPlaysUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={succesfulPlaysData.labels} datasets={succesfulPlaysData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('connection_induced_rebuffering_ratio','Connection Induced Rebuffering Ratio')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Connection Induced Rebuffering Ratio <Tooltip title=\"Connection Induced Rebuffering Ratio of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(connectionInducedRebufferingDuration?.total_sum,2)} {connectionInducedRebufferingDurationUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={connectionInducedRebufferingDurationData.labels} datasets={connectionInducedRebufferingDurationData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('video_start_failures','Average Video Start Failures')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Average Video Start Failures <Tooltip title=\"VSF measures how often attempts terminated during video startup before the first video frame was played and a fatal error was reported. \" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(videoFailure?.total_sum,2)} {videoFailureUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <StackedAreaChart labels={videoFailureData.labels} datasets={videoFailureData.datasets} />\r\n               </div>\r\n            </div>\r\n            <div onClick={() => clickOnMetric('exit_before_video_starts','Exit Before Video Start')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Exit Before Video Start <Tooltip title=\"Exit Before Video Start of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(exitBeforeVideoStart?.total_sum,2)} {exitBeforeVideoStartUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={exitBeforeVideoStartData.labels} datasets={exitBeforeVideoStartData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('play_attempts','Play Attempts ')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Play Attempts <Tooltip title=\"Play Attempts of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(playAttempts?.total_sum,2)} {playAttemptsUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={playAttemptsData.labels} datasets={playAttemptsData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            <div onClick={() => clickOnMetric('concurrent_plays','Max Concurrent Plays')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Max Concurrent Plays <Tooltip title=\"Max Concurrent Plays of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{round(concurrentPlay?.total_sum,2)} </h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={concurrentPlayData.labels} datasets={concurrentPlayData.datasets} />\r\n               </div>\r\n            </div>\r\n\r\n            {/* <div onClick={() => clickOnMetric('video_playback_failures')} className=\"slidechart-item\">\r\n               <Box className='slidechart-header'>\r\n                  <h3>Videos plays and Failures<Tooltip title=\"Videos plays and Failures of last 24 hr\" arrow><InfoOutlinedIcon /></Tooltip></h3>\r\n                  <h2>{videosPlaysandFailures?.total_sum} {vvideosPlaysandFailuresUnit}</h2>\r\n               </Box>\r\n               <div className=\"slidechart-chart\">\r\n                  <SimpleBarChart labels={videosPlaysandFailuresData.labels} datasets={videosPlaysandFailuresData.datasets} />\r\n               </div>\r\n            </div> */}\r\n         </Slider>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default RealTimeSliderContainer"],"sourceRoot":""}